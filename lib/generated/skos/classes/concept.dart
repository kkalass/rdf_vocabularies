// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Concept class from Skos vocabulary
library skos_skosconcept_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Concept class from Skos vocabulary
///
///
///
/// This class provides access to all properties that can be used with Concept.
/// [Class Reference](http://www.w3.org/2004/02/skos/core#Concept)
///
/// [Vocabulary Reference](http://www.w3.org/2004/02/skos/core#)
class SkosConcept {
  // Private constructor prevents instantiation
  const SkosConcept._();

  /// IRI term for the Concept class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#Concept',
  );

  /// inScheme [Expects: http://www.w3.org/2004/02/skos/core#ConceptScheme]
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const inScheme = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#inScheme',
  );

  /// topConceptOf [Expects: http://www.w3.org/2004/02/skos/core#ConceptScheme]
  ///
  ///
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#Concept
  ///
  static const topConceptOf = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#topConceptOf',
  );

  /// prefLabel
  ///
  /// A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const prefLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#prefLabel',
  );

  /// altLabel
  ///
  /// The range of skos:altLabel is the class of RDF plain literals.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const altLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#altLabel',
  );

  /// hiddenLabel
  ///
  /// The range of skos:hiddenLabel is the class of RDF plain literals.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hiddenLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#hiddenLabel',
  );

  /// notation
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const notation = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#notation',
  );

  /// note
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const note = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#note',
  );

  /// changeNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const changeNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#changeNote',
  );

  /// definition
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const definition = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#definition',
  );

  /// editorialNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const editorialNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#editorialNote',
  );

  /// example
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const example = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#example',
  );

  /// historyNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const historyNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#historyNote',
  );

  /// scopeNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const scopeNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#scopeNote',
  );

  /// semanticRelation [Expects: http://www.w3.org/2004/02/skos/core#Concept]
  ///
  ///
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#Concept
  ///
  static const semanticRelation = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#semanticRelation',
  );

  /// broader
  ///
  /// Broader concepts are typically rendered as parents in a concept hierarchy (tree).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broader = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broader',
  );

  /// narrower
  ///
  /// Narrower concepts are typically rendered as children in a concept hierarchy (tree).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrower = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrower',
  );

  /// related
  ///
  /// skos:related is disjoint with skos:broaderTransitive
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const related = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#related',
  );

  /// broaderTransitive
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broaderTransitive = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broaderTransitive',
  );

  /// narrowerTransitive
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrowerTransitive = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrowerTransitive',
  );

  /// mappingRelation
  ///
  /// These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const mappingRelation = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#mappingRelation',
  );

  /// broadMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broadMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broadMatch',
  );

  /// narrowMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrowMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrowMatch',
  );

  /// relatedMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const relatedMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#relatedMatch',
  );

  /// exactMatch
  ///
  /// skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const exactMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#exactMatch',
  );

  /// closeMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const closeMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#closeMatch',
  );

  /// focus from foaf vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The underlying or 'focal' entity associated with some SKOS-described concept.
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#Concept
  ///
  static const foafFocus = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/focus',
  );
}
