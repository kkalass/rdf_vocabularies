// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Project class from Foaf vocabulary
library foaf_foafproject_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Project class from Foaf vocabulary
///
/// A project (a collective endeavour of some kind).
///
/// This class provides access to all properties that can be used with Project.
/// [Class Reference](http://xmlns.com/foaf/0.1/Project)
///
/// [Vocabulary Reference](http://xmlns.com/foaf/0.1/)
class FoafProject {
  // Private constructor prevents instantiation
  const FoafProject._();

  /// IRI term for the Project class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/Project',
  );

  /// dnaChecksum [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A checksum for the DNA of some thing. Joke.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const dnaChecksum = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/dnaChecksum',
  );

  /// title
  ///
  /// Title (Mr, Mrs, Ms, Dr. etc)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const title = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/title');

  /// nick
  ///
  /// A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const nick = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/nick');

  /// givenName
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenName = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/givenName',
  );

  /// givenname
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenname = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/givenname',
  );

  /// phone
  ///
  /// A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const phone = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/phone');

  /// membershipClass
  ///
  /// Indicates the class of individuals that are a member of a Group
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const membershipClass = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/membershipClass',
  );
}
