// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// OnlineChatAccount class from Foaf vocabulary
library foaf_foafonlinechataccount_vocab;

import 'package:rdf_core/rdf_core.dart';

/// OnlineChatAccount class from Foaf vocabulary
///
/// An online chat account.
///
/// Inherits from:
/// - OnlineAccount (http://xmlns.com/foaf/0.1/OnlineAccount)
/// - Thing (http://www.w3.org/2002/07/owl#Thing)
///
/// This class provides access to all properties that can be used with OnlineChatAccount.
/// [Class Reference](http://xmlns.com/foaf/0.1/OnlineChatAccount)
///
/// [Vocabulary Reference](http://xmlns.com/foaf/0.1/)
class FoafOnlineChatAccount {
  // Private constructor prevents instantiation
  const FoafOnlineChatAccount._();

  /// IRI term for the OnlineChatAccount class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/OnlineChatAccount',
  );

  /// dnaChecksum [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A checksum for the DNA of some thing. Joke.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const dnaChecksum = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/dnaChecksum',
  );

  /// title
  ///
  /// Title (Mr, Mrs, Ms, Dr. etc)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const title = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/title');

  /// nick
  ///
  /// A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const nick = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/nick');

  /// name [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A name for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const name = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/name');

  /// givenName
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenName = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/givenName',
  );

  /// givenname
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenname = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/givenname',
  );

  /// phone
  ///
  /// A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const phone = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/phone');

  /// homepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A homepage for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const homepage = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/homepage',
  );

  /// maker [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// An agent that
  /// made this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const maker = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/maker');

  /// depiction [Expects: http://xmlns.com/foaf/0.1/Image]
  ///
  /// A depiction of some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const depiction = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/depiction',
  );

  /// fundedBy [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// An organization funding a project or person.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const fundedBy = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/fundedBy',
  );

  /// logo [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A logo representing some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const logo = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/logo');

  /// page [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A page or document about this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const page = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/page');

  /// theme [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A theme.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const theme = IriTerm.prevalidated('http://xmlns.com/foaf/0.1/theme');

  /// accountServiceHomepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// Indicates a homepage of the service provide for this online account.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/OnlineAccount
  ///
  static const accountServiceHomepage = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/accountServiceHomepage',
  );

  /// accountName [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// Indicates the name (identifier) associated with this online account.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/OnlineAccount
  ///
  static const accountName = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/accountName',
  );

  /// membershipClass
  ///
  /// Indicates the class of individuals that are a member of a Group
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const membershipClass = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/membershipClass',
  );

  /// bottomDataProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The data property that does not relate any individual to any data value.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlBottomDataProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#bottomDataProperty',
  );

  /// bottomObjectProperty from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The object property that does not relate any two individuals.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlBottomObjectProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#bottomObjectProperty',
  );

  /// differentFrom from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The property that determines that two given individuals are different.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlDifferentFrom = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#differentFrom',
  );

  /// sameAs from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The property that determines that two given individuals are equal.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlSameAs = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#sameAs',
  );

  /// topDataProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The data property that relates every individual to every data value.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlTopDataProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#topDataProperty',
  );

  /// topObjectProperty from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The object property that relates every two individuals.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlTopObjectProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#topObjectProperty',
  );
}
