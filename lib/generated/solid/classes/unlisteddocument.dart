// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// UnlistedDocument class from Solid vocabulary
library solid_solidunlisteddocument_vocab;

import 'package:rdf_core/rdf_core.dart';

/// UnlistedDocument class from Solid vocabulary
///
/// Unlisted Type Index is a registry of resources that are private to the user and their apps, for types that are not publicly discoverable.
///
/// This class provides access to all properties that can be used with UnlistedDocument.
/// [Class Reference](http://www.w3.org/ns/solid/terms#UnlistedDocument)
///
/// [Vocabulary Reference](http://www.w3.org/ns/solid/terms#)
class SolidUnlistedDocument {
  // Private constructor prevents instantiation
  const SolidUnlistedDocument._();

  /// IRI term for the UnlistedDocument class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#UnlistedDocument',
  );

  /// account
  ///
  /// A solid account belonging to an Agent.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const account = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#account',
  );

  /// forClass
  ///
  /// A class that is used to map an listed or unlisted type index.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const forClass = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#forClass',
  );

  /// inbox
  ///
  /// Deprecated pointer to a Linked Data Notifications inbox; please use http://www.w3.org/ns/ldp#inbox instead.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const inbox = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#inbox',
  );

  /// instance
  ///
  /// Maps a type to an individual resource, typically an index or a directory listing resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const instance = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#instance',
  );

  /// instanceContainer
  ///
  /// Maps a type to a container which the client would have to list to get the instances of that type.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const instanceContainer = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#instanceContainer',
  );

  /// loginEndpoint
  ///
  /// The login URI of a given server.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const loginEndpoint = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#loginEndpoint',
  );

  /// logoutEndpoint
  ///
  /// The logout URI of a given server.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const logoutEndpoint = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#logoutEndpoint',
  );

  /// notification
  ///
  /// Notification resource for an inbox.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const notification = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#notification',
  );

  /// oidcIssuer
  ///
  /// The preferred OpenID Connect issuer URI for a given WebID.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const oidcIssuer = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#oidcIssuer',
  );

  /// owner [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// A person or social entity that is considered to have control, rights, and responsibilities over a data storage.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const owner = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#owner',
  );

  /// privateTypeIndex [Expects: http://www.w3.org/ns/solid/terms#UnlistedDocument]
  ///
  /// Points to an unlisted type index resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const privateTypeIndex = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#privateTypeIndex',
  );

  /// publicTypeIndex [Expects: http://www.w3.org/ns/solid/terms#ListedDocument]
  ///
  /// Points to a listed type index resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const publicTypeIndex = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#publicTypeIndex',
  );

  /// privateLabelIndex [Expects: http://www.w3.org/ns/solid/terms#UnlistedDocument]
  ///
  /// Points to an unlisted label index resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const privateLabelIndex = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#privateLabelIndex',
  );

  /// storageDescription
  ///
  /// Refers to the resource that provides a description of the storage containing this resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  /// [See also](https://solidproject.org/TR/2024/protocol-20240512#server-storage-description)
  ///
  static const storageDescription = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#storageDescription',
  );

  /// typeIndex [Expects: http://www.w3.org/ns/solid/terms#TypeIndex]
  ///
  /// Points to a TypeIndex resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const typeIndex = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#typeIndex',
  );

  /// timeline
  ///
  /// Timeline for a given resource.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const timeline = IriTerm.prevalidated(
    'http://www.w3.org/ns/solid/terms#timeline',
  );
}
