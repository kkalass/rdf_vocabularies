// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// CDCPMDRecord class from SchemaHttp vocabulary
library schemahttp_schemahttpcdcpmdrecord_vocab;

import 'package:rdf_core/rdf_core.dart';

/// CDCPMDRecord class from SchemaHttp vocabulary
///
/// A CDCPMDRecord is a data structure representing a record in a CDC tabular data format
/// used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative
/// definitions used as the source here.
///
///
/// Inherits from:
/// - Intangible (http://schema.org/Intangible)
/// - StructuredValue (http://schema.org/StructuredValue)
/// - Thing (http://schema.org/Thing)
///
/// This class provides access to all properties that can be used with CDCPMDRecord.
/// [Class Reference](http://schema.org/CDCPMDRecord)
///
/// [Vocabulary Reference](http://schema.org/)
class SchemaHttpCDCPMDRecord {
  // Private constructor prevents instantiation
  const SchemaHttpCDCPMDRecord._();

  /// IRI term for the CDCPMDRecord class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://schema.org/CDCPMDRecord',
  );

  /// additionalType [Expects: http://schema.org/Text, http://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="http://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'http://schema.org/additionalType',
  );

  /// cvdCollectionDate [Expects: http://schema.org/DateTime, http://schema.org/Text]
  ///
  /// collectiondate - Date for which patient counts are reported.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdCollectionDate = IriTerm.prevalidated(
    'http://schema.org/cvdCollectionDate',
  );

  /// cvdFacilityCounty [Expects: http://schema.org/Text]
  ///
  /// Name of the County of the NHSN facility that this data record applies to. Use {[cvdFacilityId]} to identify the facility. To provide other details, {[healthcareReportingData]} can be used on a {[Hospital]} entry.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdFacilityCounty = IriTerm.prevalidated(
    'http://schema.org/cvdFacilityCounty',
  );

  /// cvdFacilityId [Expects: http://schema.org/Text]
  ///
  /// Identifier of the NHSN facility that this data record applies to. Use {[cvdFacilityCounty]} to indicate the county. To provide other details, {[healthcareReportingData]} can be used on a {[Hospital]} entry.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdFacilityId = IriTerm.prevalidated(
    'http://schema.org/cvdFacilityId',
  );

  /// cvdNumBeds [Expects: http://schema.org/Number]
  ///
  /// numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumBeds = IriTerm.prevalidated(
    'http://schema.org/cvdNumBeds',
  );

  /// cvdNumBedsOcc [Expects: http://schema.org/Number]
  ///
  /// numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumBedsOcc = IriTerm.prevalidated(
    'http://schema.org/cvdNumBedsOcc',
  );

  /// cvdNumC19Died [Expects: http://schema.org/Number]
  ///
  /// numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19Died = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19Died',
  );

  /// cvdNumC19HOPats [Expects: http://schema.org/Number]
  ///
  /// numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19HOPats = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19HOPats',
  );

  /// cvdNumC19HospPats [Expects: http://schema.org/Number]
  ///
  /// numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19HospPats = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19HospPats',
  );

  /// cvdNumC19MechVentPats [Expects: http://schema.org/Number]
  ///
  /// numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19MechVentPats = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19MechVentPats',
  );

  /// cvdNumC19OFMechVentPats [Expects: http://schema.org/Number]
  ///
  /// numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19OFMechVentPats = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19OFMechVentPats',
  );

  /// cvdNumC19OverflowPats [Expects: http://schema.org/Number]
  ///
  /// numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19OverflowPats = IriTerm.prevalidated(
    'http://schema.org/cvdNumC19OverflowPats',
  );

  /// cvdNumICUBeds [Expects: http://schema.org/Number]
  ///
  /// numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumICUBeds = IriTerm.prevalidated(
    'http://schema.org/cvdNumICUBeds',
  );

  /// cvdNumICUBedsOcc [Expects: http://schema.org/Number]
  ///
  /// numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumICUBedsOcc = IriTerm.prevalidated(
    'http://schema.org/cvdNumICUBedsOcc',
  );

  /// cvdNumTotBeds [Expects: http://schema.org/Number]
  ///
  /// numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumTotBeds = IriTerm.prevalidated(
    'http://schema.org/cvdNumTotBeds',
  );

  /// cvdNumVent [Expects: http://schema.org/Number]
  ///
  /// numvent - MECHANICAL VENTILATORS: Total number of ventilators available.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumVent = IriTerm.prevalidated(
    'http://schema.org/cvdNumVent',
  );

  /// cvdNumVentUse [Expects: http://schema.org/Number]
  ///
  /// numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord
  ///
  static const cvdNumVentUse = IriTerm.prevalidated(
    'http://schema.org/cvdNumVentUse',
  );

  /// datePosted [Expects: http://schema.org/Date, http://schema.org/DateTime]
  ///
  /// Publication date of an online listing.
  ///
  /// Can be used on: http://schema.org/CDCPMDRecord, http://schema.org/JobPosting, http://schema.org/RealEstateListing, http://schema.org/SpecialAnnouncement
  ///
  static const datePosted = IriTerm.prevalidated(
    'http://schema.org/datePosted',
  );

  /// disambiguatingDescription [Expects: http://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'http://schema.org/disambiguatingDescription',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'http://schema.org/interactionCount',
  );

  /// name [Expects: http://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('http://schema.org/name');

  /// potentialAction [Expects: http://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'http://schema.org/potentialAction',
  );

  /// sameAs [Expects: http://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('http://schema.org/sameAs');

  /// url [Expects: http://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('http://schema.org/url');

  /// alternateName [Expects: http://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'http://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: http://schema.org/CreativeWork, http://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'http://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: http://schema.org/CreativeWork, http://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('http://schema.org/subjectOf');

  /// description [Expects: http://schema.org/Text, http://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'http://schema.org/description',
  );

  /// image [Expects: http://schema.org/ImageObject, http://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('http://schema.org/image');

  /// identifier [Expects: http://schema.org/PropertyValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'http://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('http://schema.org/source');
}
