// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// DirectContainer class from Ldp vocabulary
library ldp_ldpdirectcontainer_vocab;

import 'package:rdf_core/rdf_core.dart';

/// DirectContainer class from Ldp vocabulary
///
/// An LDPC that is similar to a LDP-DC but it allows an indirection with the ability to list as member a resource, such as a URI representing a real-world object, that is different from the resource that is created.
///
/// Inherits from:
/// - Container (http://www.w3.org/ns/ldp#Container)
/// - RDFSource (http://www.w3.org/ns/ldp#RDFSource)
/// - Resource (http://www.w3.org/ns/ldp#Resource)
///
/// This class provides access to all properties that can be used with DirectContainer.
/// [Class Reference](http://www.w3.org/ns/ldp#DirectContainer)
///
/// [Vocabulary Reference](http://www.w3.org/ns/ldp#)
class LdpDirectContainer {
  // Private constructor prevents instantiation
  const LdpDirectContainer._();

  /// IRI term for the DirectContainer class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#DirectContainer',
  );

  /// hasMemberRelation [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#Property]
  ///
  /// Indicates which predicate is used in membership triples, and that the membership triple pattern is < membership-constant-URI , object-of-hasMemberRelation, member-URI >.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Container
  ///
  static const hasMemberRelation = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#hasMemberRelation',
  );

  /// isMemberOfRelation [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#Property]
  ///
  /// Indicates which predicate is used in membership triples, and that the membership triple pattern is < member-URI , object-of-isMemberOfRelation, membership-constant-URI >.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Container
  ///
  static const isMemberOfRelation = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#isMemberOfRelation',
  );

  /// membershipResource [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Indicates the membership-constant-URI in a membership triple.  Depending upon the membership triple pattern a container uses, as indicated by the presence of ldp:hasMemberRelation or ldp:isMemberOfRelation, the membership-constant-URI might occupy either the subject or object position in membership triples.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Container
  ///
  static const membershipResource = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#membershipResource',
  );

  /// insertedContentRelation [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#Property]
  ///
  /// Indicates which triple in a creation request should be used as the member-URI value in the membership triple added when the creation request is successful.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Container
  ///
  static const insertedContentRelation = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#insertedContentRelation',
  );

  /// member [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// LDP servers should use this predicate as the membership predicate if there is no obvious predicate from an application vocabulary to use.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Resource
  ///
  static const member = IriTerm.prevalidated('http://www.w3.org/ns/ldp#member');

  /// contains [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Links a container with resources created through the container.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Container
  ///
  static const contains = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#contains',
  );

  /// constrainedBy [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Links a resource with constraints that the server requires requests like creation and update to conform to.
  ///
  /// Can be used on: http://www.w3.org/ns/ldp#Resource
  ///
  static const constrainedBy = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#constrainedBy',
  );

  /// pageSequence
  ///
  /// Link to a page sequence resource, as defined by LDP Paging.  Typically used to communicate the sorting criteria used to allocate LDPC members to pages.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const pageSequence = IriTerm.prevalidated(
    'http://www.w3.org/ns/ldp#pageSequence',
  );

  /// inbox
  ///
  /// Links a resource to a container where notifications for the resource can be created and discovered.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const inbox = IriTerm.prevalidated('http://www.w3.org/ns/ldp#inbox');
}
