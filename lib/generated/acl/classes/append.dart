// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Append class from Acl vocabulary
library acl_aclappend_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Append class from Acl vocabulary
///
/// Append accesses are specific write access which only add information, and do not remove information.
/// For text files, for example, append access allows bytes to be added onto the end of the file.
/// For RDF graphs, Append access allows adds triples to the graph but does not remove any.
/// Append access is useful for dropbox functionality.
/// Dropbox can be used for link notification, which the information added is a notification
/// that a some link has been made elsewhere relevant to the given resource.
///
///
/// Inherits from:
/// - Access (http://www.w3.org/ns/auth/acl#Access)
/// - Write (http://www.w3.org/ns/auth/acl#Write)
///
/// This class provides access to all properties that can be used with Append.
/// [Class Reference](http://www.w3.org/ns/auth/acl#Append)
///
/// [Vocabulary Reference](http://www.w3.org/ns/auth/acl#)
class AclAppend {
  // Private constructor prevents instantiation
  const AclAppend._();

  /// IRI term for the Append class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#Append',
  );

  /// delegates [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// Delegates a person or another agent to act on behalf of the agent.
  /// For example, Alice delegates Bob to act on behalf of Alice for ACL purposes.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const delegates = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#delegates',
  );

  /// owner [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// The person or other agent which owns this.
  /// For example, the owner of a file in a filesystem.
  /// There is a sense of "right to control".   Typically defaults to the agent who created
  /// something, but can be changed.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const owner = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#owner',
  );
}
