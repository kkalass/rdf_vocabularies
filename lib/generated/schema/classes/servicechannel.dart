// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// ServiceChannel class from Schema vocabulary
library schema_schemaservicechannel_vocab;

import 'package:rdf_core/rdf_core.dart';

/// ServiceChannel class from Schema vocabulary
///
/// A means for accessing a service, e.g. a government office location, web site, or phone number.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with ServiceChannel.
/// [Class Reference](https://schema.org/ServiceChannel)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaServiceChannel {
  // Private constructor prevents instantiation
  const SchemaServiceChannel._();

  /// IRI term for the ServiceChannel class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/ServiceChannel',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// availableLanguage [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also {[inLanguage]}.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Course, https://schema.org/LodgingBusiness, https://schema.org/ServiceChannel, https://schema.org/TouristAttraction
  ///
  static const availableLanguage = IriTerm.prevalidated(
    'https://schema.org/availableLanguage',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// processingTime [Expects: https://schema.org/Duration]
  ///
  /// Estimated processing time for the service using this channel.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const processingTime = IriTerm.prevalidated(
    'https://schema.org/processingTime',
  );

  /// providesService [Expects: https://schema.org/Service]
  ///
  /// The service provided by this channel.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const providesService = IriTerm.prevalidated(
    'https://schema.org/providesService',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// serviceLocation [Expects: https://schema.org/Place]
  ///
  /// The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceLocation = IriTerm.prevalidated(
    'https://schema.org/serviceLocation',
  );

  /// servicePhone [Expects: https://schema.org/ContactPoint]
  ///
  /// The phone number to use to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const servicePhone = IriTerm.prevalidated(
    'https://schema.org/servicePhone',
  );

  /// servicePostalAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// The address for accessing the service by mail.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const servicePostalAddress = IriTerm.prevalidated(
    'https://schema.org/servicePostalAddress',
  );

  /// serviceSmsNumber [Expects: https://schema.org/ContactPoint]
  ///
  /// The number to access the service by text message.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceSmsNumber = IriTerm.prevalidated(
    'https://schema.org/serviceSmsNumber',
  );

  /// serviceUrl [Expects: https://schema.org/URL]
  ///
  /// The website to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceUrl = IriTerm.prevalidated(
    'https://schema.org/serviceUrl',
  );

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
