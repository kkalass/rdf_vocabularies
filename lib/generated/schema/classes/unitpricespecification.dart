// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// UnitPriceSpecification class from Schema vocabulary
library schema_schemaunitpricespecification_vocab;

import 'package:rdf_core/rdf_core.dart';

/// UnitPriceSpecification class from Schema vocabulary
///
/// The price asked for a given offer by the respective organization or person.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - PriceSpecification (https://schema.org/PriceSpecification)
/// - StructuredValue (https://schema.org/StructuredValue)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with UnitPriceSpecification.
/// [Class Reference](https://schema.org/UnitPriceSpecification)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaUnitPriceSpecification {
  // Private constructor prevents instantiation
  const SchemaUnitPriceSpecification._();

  /// IRI term for the UnitPriceSpecification class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/UnitPriceSpecification',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// billingDuration [Expects: https://schema.org/Duration, https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingDuration = IriTerm.prevalidated(
    'https://schema.org/billingDuration',
  );

  /// billingIncrement [Expects: https://schema.org/Number]
  ///
  /// This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingIncrement = IriTerm.prevalidated(
    'https://schema.org/billingIncrement',
  );

  /// billingStart [Expects: https://schema.org/Number]
  ///
  /// Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingStart = IriTerm.prevalidated(
    'https://schema.org/billingStart',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// eligibleQuantity [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/PriceSpecification
  ///
  static const eligibleQuantity = IriTerm.prevalidated(
    'https://schema.org/eligibleQuantity',
  );

  /// eligibleTransactionVolume [Expects: https://schema.org/PriceSpecification]
  ///
  /// The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/PriceSpecification
  ///
  static const eligibleTransactionVolume = IriTerm.prevalidated(
    'https://schema.org/eligibleTransactionVolume',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// maxPrice [Expects: https://schema.org/Number]
  ///
  /// The highest price if the price is a range.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const maxPrice = IriTerm.prevalidated('https://schema.org/maxPrice');

  /// membershipPointsEarned [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)
  ///
  /// Can be used on: https://schema.org/MemberProgramTier, https://schema.org/PriceSpecification, https://schema.org/ProgramMembership
  ///
  static const membershipPointsEarned = IriTerm.prevalidated(
    'https://schema.org/membershipPointsEarned',
  );

  /// minPrice [Expects: https://schema.org/Number]
  ///
  /// The lowest price if the price is a range.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const minPrice = IriTerm.prevalidated('https://schema.org/minPrice');

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// price [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n\nUsage guidelines:\n\n* Use the {[priceCurrency]} property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.
  ///
  ///
  /// Can be used on: https://schema.org/DonateAction, https://schema.org/Offer, https://schema.org/PriceSpecification, https://schema.org/TradeAction
  ///
  static const price = IriTerm.prevalidated('https://schema.org/price');

  /// priceComponentType [Expects: https://schema.org/PriceComponentTypeEnumeration]
  ///
  /// Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const priceComponentType = IriTerm.prevalidated(
    'https://schema.org/priceComponentType',
  );

  /// priceCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency of the price, or a price component when attached to {[PriceSpecification]} and its subtypes.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/DonateAction, https://schema.org/Offer, https://schema.org/PriceSpecification, https://schema.org/Reservation, https://schema.org/Ticket, https://schema.org/TradeAction
  ///
  static const priceCurrency = IriTerm.prevalidated(
    'https://schema.org/priceCurrency',
  );

  /// priceType [Expects: https://schema.org/PriceTypeEnumeration, https://schema.org/Text]
  ///
  /// Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the {[priceType]} property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.
  ///
  /// Can be used on: https://schema.org/CompoundPriceSpecification, https://schema.org/UnitPriceSpecification
  ///
  static const priceType = IriTerm.prevalidated('https://schema.org/priceType');

  /// referenceQuantity [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const referenceQuantity = IriTerm.prevalidated(
    'https://schema.org/referenceQuantity',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// unitCode [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitCode = IriTerm.prevalidated('https://schema.org/unitCode');

  /// unitText [Expects: https://schema.org/Text]
  ///
  /// A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
  /// <a href='unitCode'>unitCode</a>.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitText = IriTerm.prevalidated('https://schema.org/unitText');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// validForMemberTier [Expects: https://schema.org/MemberProgramTier]
  ///
  /// The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/OfferShippingDetails, https://schema.org/PriceSpecification, https://schema.org/ShippingService
  ///
  static const validForMemberTier = IriTerm.prevalidated(
    'https://schema.org/validForMemberTier',
  );

  /// validFrom [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date when the item becomes valid.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/LocationFeatureSpecification, https://schema.org/MonetaryAmount, https://schema.org/Offer, https://schema.org/OpeningHoursSpecification, https://schema.org/Permit, https://schema.org/PriceSpecification
  ///
  static const validFrom = IriTerm.prevalidated('https://schema.org/validFrom');

  /// validThrough [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/JobPosting, https://schema.org/LocationFeatureSpecification, https://schema.org/MonetaryAmount, https://schema.org/Offer, https://schema.org/OpeningHoursSpecification, https://schema.org/PriceSpecification
  ///
  static const validThrough = IriTerm.prevalidated(
    'https://schema.org/validThrough',
  );

  /// valueAddedTaxIncluded [Expects: https://schema.org/Boolean]
  ///
  /// Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const valueAddedTaxIncluded = IriTerm.prevalidated(
    'https://schema.org/valueAddedTaxIncluded',
  );

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
