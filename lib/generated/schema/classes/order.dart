// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Order class from Schema vocabulary
library schema_schemaorder_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Order class from Schema vocabulary
///
/// An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with Order.
/// [Class Reference](https://schema.org/Order)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaOrder {
  // Private constructor prevents instantiation
  const SchemaOrder._();

  /// IRI term for the Order class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated('https://schema.org/Order');

  /// acceptedOffer [Expects: https://schema.org/Offer]
  ///
  /// The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const acceptedOffer = IriTerm.prevalidated(
    'https://schema.org/acceptedOffer',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// billingAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// The billing address for the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const billingAddress = IriTerm.prevalidated(
    'https://schema.org/billingAddress',
  );

  /// confirmationNumber [Expects: https://schema.org/Text]
  ///
  /// A number that confirms the given order or payment has been received.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const confirmationNumber = IriTerm.prevalidated(
    'https://schema.org/confirmationNumber',
  );

  /// customer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Party placing the order or paying the invoice.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const customer = IriTerm.prevalidated('https://schema.org/customer');

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// discount [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// Any discount applied (to an Order).
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discount = IriTerm.prevalidated('https://schema.org/discount');

  /// discountCode [Expects: https://schema.org/Text]
  ///
  /// Code used to redeem a discount.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discountCode = IriTerm.prevalidated(
    'https://schema.org/discountCode',
  );

  /// discountCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency of the discount.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discountCurrency = IriTerm.prevalidated(
    'https://schema.org/discountCurrency',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// isGift [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether the offer was accepted as a gift for someone other than the buyer.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const isGift = IriTerm.prevalidated('https://schema.org/isGift');

  /// merchant [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// 'merchant' is an out-dated term for 'seller'.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const merchant = IriTerm.prevalidated('https://schema.org/merchant');

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// orderDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date order was placed.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderDate = IriTerm.prevalidated('https://schema.org/orderDate');

  /// orderDelivery [Expects: https://schema.org/ParcelDelivery]
  ///
  /// The delivery of the parcel related to this order or order item.
  ///
  /// Can be used on: https://schema.org/Order, https://schema.org/OrderItem
  ///
  static const orderDelivery = IriTerm.prevalidated(
    'https://schema.org/orderDelivery',
  );

  /// orderNumber [Expects: https://schema.org/Text]
  ///
  /// The identifier of the transaction.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderNumber = IriTerm.prevalidated(
    'https://schema.org/orderNumber',
  );

  /// orderStatus [Expects: https://schema.org/OrderStatus]
  ///
  /// The current status of the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderStatus = IriTerm.prevalidated(
    'https://schema.org/orderStatus',
  );

  /// orderedItem [Expects: https://schema.org/OrderItem, https://schema.org/Product, https://schema.org/Service]
  ///
  /// The item ordered.
  ///
  /// Can be used on: https://schema.org/Order, https://schema.org/OrderItem
  ///
  static const orderedItem = IriTerm.prevalidated(
    'https://schema.org/orderedItem',
  );

  /// partOfInvoice [Expects: https://schema.org/Invoice]
  ///
  /// The order is being paid as part of the referenced Invoice.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const partOfInvoice = IriTerm.prevalidated(
    'https://schema.org/partOfInvoice',
  );

  /// paymentDue [Expects: https://schema.org/DateTime]
  ///
  /// The date that payment is due.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentDue = IriTerm.prevalidated(
    'https://schema.org/paymentDue',
  );

  /// paymentMethod [Expects: https://schema.org/PaymentMethod, https://schema.org/Text]
  ///
  /// The name of the credit card or other method of payment for the order.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentMethod = IriTerm.prevalidated(
    'https://schema.org/paymentMethod',
  );

  /// paymentMethodId [Expects: https://schema.org/Text]
  ///
  /// An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentMethodId = IriTerm.prevalidated(
    'https://schema.org/paymentMethodId',
  );

  /// paymentUrl [Expects: https://schema.org/URL]
  ///
  /// The URL for sending a payment.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const paymentUrl = IriTerm.prevalidated(
    'https://schema.org/paymentUrl',
  );

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// broker [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order, https://schema.org/Reservation, https://schema.org/Service
  ///
  static const broker = IriTerm.prevalidated('https://schema.org/broker');

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// paymentDueDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date that payment is due.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentDueDate = IriTerm.prevalidated(
    'https://schema.org/paymentDueDate',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// seller [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
  ///
  /// Can be used on: https://schema.org/BuyAction, https://schema.org/Demand, https://schema.org/Flight, https://schema.org/Offer, https://schema.org/Order
  ///
  static const seller = IriTerm.prevalidated('https://schema.org/seller');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
