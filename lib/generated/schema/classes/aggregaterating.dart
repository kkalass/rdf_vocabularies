// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// AggregateRating class from Schema vocabulary
library schema_schemaaggregaterating_vocab;

import 'package:rdf_core/rdf_core.dart';

/// AggregateRating class from Schema vocabulary
///
/// The average rating based on multiple ratings or reviews.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Rating (https://schema.org/Rating)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with AggregateRating.
/// [Class Reference](https://schema.org/AggregateRating)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaAggregateRating {
  // Private constructor prevents instantiation
  const SchemaAggregateRating._();

  /// IRI term for the AggregateRating class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/AggregateRating',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// author [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Rating
  ///
  static const author = IriTerm.prevalidated('https://schema.org/author');

  /// bestRating [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The highest value allowed in this rating system.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const bestRating = IriTerm.prevalidated(
    'https://schema.org/bestRating',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// itemReviewed [Expects: https://schema.org/Thing]
  ///
  /// The item that is being reviewed/rated.
  ///
  /// Can be used on: https://schema.org/AggregateRating, https://schema.org/Review
  ///
  static const itemReviewed = IriTerm.prevalidated(
    'https://schema.org/itemReviewed',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// ratingCount [Expects: https://schema.org/Integer]
  ///
  /// The count of total number of ratings.
  ///
  /// Can be used on: https://schema.org/AggregateRating
  ///
  static const ratingCount = IriTerm.prevalidated(
    'https://schema.org/ratingCount',
  );

  /// ratingExplanation [Expects: https://schema.org/Text]
  ///
  /// A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with "fact check" markup using {[ClaimReview]}.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const ratingExplanation = IriTerm.prevalidated(
    'https://schema.org/ratingExplanation',
  );

  /// ratingValue [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The rating for the content.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const ratingValue = IriTerm.prevalidated(
    'https://schema.org/ratingValue',
  );

  /// reviewAspect [Expects: https://schema.org/Text]
  ///
  /// This Review or Rating is relevant to this part or facet of the itemReviewed.
  ///
  /// Can be used on: https://schema.org/Guide, https://schema.org/Rating, https://schema.org/Review
  ///
  static const reviewAspect = IriTerm.prevalidated(
    'https://schema.org/reviewAspect',
  );

  /// reviewCount [Expects: https://schema.org/Integer]
  ///
  /// The count of total number of reviews.
  ///
  /// Can be used on: https://schema.org/AggregateRating
  ///
  static const reviewCount = IriTerm.prevalidated(
    'https://schema.org/reviewCount',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// worstRating [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The lowest value allowed in this rating system.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const worstRating = IriTerm.prevalidated(
    'https://schema.org/worstRating',
  );

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
