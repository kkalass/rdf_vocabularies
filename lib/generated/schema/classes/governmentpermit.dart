// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// GovernmentPermit class from Schema vocabulary
library schema_schemagovernmentpermit_vocab;

import 'package:rdf_core/rdf_core.dart';

/// GovernmentPermit class from Schema vocabulary
///
/// A permit issued by a government agency.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Permit (https://schema.org/Permit)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with GovernmentPermit.
/// [Class Reference](https://schema.org/GovernmentPermit)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaGovernmentPermit {
  // Private constructor prevents instantiation
  const SchemaGovernmentPermit._();

  /// IRI term for the GovernmentPermit class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/GovernmentPermit',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// issuedBy [Expects: https://schema.org/Organization]
  ///
  /// The organization issuing the item, for example a {[Permit]}, {[Ticket]}, or {[Certification]}.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Permit, https://schema.org/Ticket
  ///
  static const issuedBy = IriTerm.prevalidated('https://schema.org/issuedBy');

  /// issuedThrough [Expects: https://schema.org/Service]
  ///
  /// The service through which the permit was granted.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const issuedThrough = IriTerm.prevalidated(
    'https://schema.org/issuedThrough',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// permitAudience [Expects: https://schema.org/Audience]
  ///
  /// The target audience for this permit.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const permitAudience = IriTerm.prevalidated(
    'https://schema.org/permitAudience',
  );

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// validFor [Expects: https://schema.org/Duration]
  ///
  /// The duration of validity of a permit or similar thing.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalCredential, https://schema.org/Permit
  ///
  static const validFor = IriTerm.prevalidated('https://schema.org/validFor');

  /// validFrom [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date when the item becomes valid.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/LocationFeatureSpecification, https://schema.org/MonetaryAmount, https://schema.org/Offer, https://schema.org/OpeningHoursSpecification, https://schema.org/Permit, https://schema.org/PriceSpecification
  ///
  static const validFrom = IriTerm.prevalidated('https://schema.org/validFrom');

  /// validIn [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The geographic area where the item is valid. Applies for example to a {[Permit]}, a {[Certification]}, or an {[EducationalOccupationalCredential]}.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/EducationalOccupationalCredential, https://schema.org/Permit
  ///
  static const validIn = IriTerm.prevalidated('https://schema.org/validIn');

  /// validUntil [Expects: https://schema.org/Date]
  ///
  /// The date when the item is no longer valid.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const validUntil = IriTerm.prevalidated(
    'https://schema.org/validUntil',
  );

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
