// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// BioChemEntity class from Schema vocabulary
library schema_schemabiochementity_vocab;

import 'package:rdf_core/rdf_core.dart';

/// BioChemEntity class from Schema vocabulary
///
/// Any biological, chemical, or biochemical thing. For example: a protein; a gene; a chemical; a synthetic chemical.
///
/// Inherits from:
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with BioChemEntity.
/// [Class Reference](https://schema.org/BioChemEntity)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaBioChemEntity {
  // Private constructor prevents instantiation
  const SchemaBioChemEntity._();

  /// IRI term for the BioChemEntity class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/BioChemEntity',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// associatedDisease [Expects: https://schema.org/MedicalCondition, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const associatedDisease = IriTerm.prevalidated(
    'https://schema.org/associatedDisease',
  );

  /// bioChemInteraction [Expects: https://schema.org/BioChemEntity]
  ///
  /// A BioChemEntity that is known to interact with this item.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const bioChemInteraction = IriTerm.prevalidated(
    'https://schema.org/bioChemInteraction',
  );

  /// bioChemSimilarity [Expects: https://schema.org/BioChemEntity]
  ///
  /// A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const bioChemSimilarity = IriTerm.prevalidated(
    'https://schema.org/bioChemSimilarity',
  );

  /// biologicalRole [Expects: https://schema.org/DefinedTerm]
  ///
  /// A role played by the BioChemEntity within a biological context.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const biologicalRole = IriTerm.prevalidated(
    'https://schema.org/biologicalRole',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// hasMolecularFunction [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasMolecularFunction = IriTerm.prevalidated(
    'https://schema.org/hasMolecularFunction',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// isInvolvedInBiologicalProcess [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isInvolvedInBiologicalProcess = IriTerm.prevalidated(
    'https://schema.org/isInvolvedInBiologicalProcess',
  );

  /// isLocatedInSubcellularLocation [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isLocatedInSubcellularLocation = IriTerm.prevalidated(
    'https://schema.org/isLocatedInSubcellularLocation',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// taxonomicRange [Expects: https://schema.org/DefinedTerm, https://schema.org/Taxon, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const taxonomicRange = IriTerm.prevalidated(
    'https://schema.org/taxonomicRange',
  );

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// funding [Expects: https://schema.org/Grant]
  ///
  /// A {[Grant]} that directly or indirectly provide funding or sponsorship for this item. See also {[ownershipFundingInfo]}.
  ///
  /// Can be used on: https://schema.org/BioChemEntity, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/MedicalEntity, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product
  ///
  static const funding = IriTerm.prevalidated('https://schema.org/funding');

  /// hasBioChemEntityPart [Expects: https://schema.org/BioChemEntity]
  ///
  /// Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasBioChemEntityPart = IriTerm.prevalidated(
    'https://schema.org/hasBioChemEntityPart',
  );

  /// isEncodedByBioChemEntity [Expects: https://schema.org/Gene]
  ///
  /// Another BioChemEntity encoding by this one.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isEncodedByBioChemEntity = IriTerm.prevalidated(
    'https://schema.org/isEncodedByBioChemEntity',
  );

  /// isPartOfBioChemEntity [Expects: https://schema.org/BioChemEntity]
  ///
  /// Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isPartOfBioChemEntity = IriTerm.prevalidated(
    'https://schema.org/isPartOfBioChemEntity',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// hasRepresentation [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasRepresentation = IriTerm.prevalidated(
    'https://schema.org/hasRepresentation',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
