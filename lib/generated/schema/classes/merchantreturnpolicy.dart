// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// MerchantReturnPolicy class from Schema vocabulary
library schema_schemamerchantreturnpolicy_vocab;

import 'package:rdf_core/rdf_core.dart';

/// MerchantReturnPolicy class from Schema vocabulary
///
/// A MerchantReturnPolicy provides information about product return policies associated with an {[Organization]}, {[Product]}, or {[Offer]}.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with MerchantReturnPolicy.
/// [Class Reference](https://schema.org/MerchantReturnPolicy)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaMerchantReturnPolicy {
  // Private constructor prevents instantiation
  const SchemaMerchantReturnPolicy._();

  /// IRI term for the MerchantReturnPolicy class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnPolicy',
  );

  /// additionalProperty [Expects: https://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Place, https://schema.org/Product, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'https://schema.org/additionalProperty',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// applicableCountry [Expects: https://schema.org/Country, https://schema.org/Text]
  ///
  /// A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const applicableCountry = IriTerm.prevalidated(
    'https://schema.org/applicableCountry',
  );

  /// customerRemorseReturnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees if the product is returned due to customer remorse.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnFees = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnFees',
  );

  /// customerRemorseReturnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnLabelSource = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnLabelSource',
  );

  /// customerRemorseReturnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// The amount of shipping costs if a product is returned due to customer remorse. Applicable when property {[customerRemorseReturnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnShippingFeesAmount',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// inStoreReturnsOffered [Expects: https://schema.org/Boolean]
  ///
  /// Are in-store returns offered? (For more advanced return methods use the {[returnMethod]} property.)
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const inStoreReturnsOffered = IriTerm.prevalidated(
    'https://schema.org/inStoreReturnsOffered',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// itemCondition [Expects: https://schema.org/OfferItemCondition]
  ///
  /// A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Product
  ///
  static const itemCondition = IriTerm.prevalidated(
    'https://schema.org/itemCondition',
  );

  /// itemDefectReturnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees for returns of defect products.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnFees = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnFees',
  );

  /// itemDefectReturnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnLabelSource = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnLabelSource',
  );

  /// itemDefectReturnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of shipping costs for defect product returns. Applicable when property {[itemDefectReturnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnShippingFeesAmount',
  );

  /// merchantReturnDays [Expects: https://schema.org/Date, https://schema.org/DateTime, https://schema.org/Integer]
  ///
  /// Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the {[returnPolicyCategory]} property is specified as {[MerchantReturnFiniteReturnWindow]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const merchantReturnDays = IriTerm.prevalidated(
    'https://schema.org/merchantReturnDays',
  );

  /// merchantReturnLink [Expects: https://schema.org/URL]
  ///
  /// Specifies a Web page or service by URL, for product returns.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const merchantReturnLink = IriTerm.prevalidated(
    'https://schema.org/merchantReturnLink',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// refundType [Expects: https://schema.org/RefundTypeEnumeration]
  ///
  /// A refund type, from an enumerated list.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const refundType = IriTerm.prevalidated(
    'https://schema.org/refundType',
  );

  /// restockingFee [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// Use {[MonetaryAmount]} to specify a fixed restocking fee for product returns, or use {[Number]} to specify a percentage of the product price paid by the customer.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const restockingFee = IriTerm.prevalidated(
    'https://schema.org/restockingFee',
  );

  /// returnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees for purchased products (for any return reason).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnFees = IriTerm.prevalidated(
    'https://schema.org/returnFees',
  );

  /// returnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnLabelSource = IriTerm.prevalidated(
    'https://schema.org/returnLabelSource',
  );

  /// returnMethod [Expects: https://schema.org/ReturnMethodEnumeration]
  ///
  /// The type of return method offered, specified from an enumeration.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnMethod = IriTerm.prevalidated(
    'https://schema.org/returnMethod',
  );

  /// returnPolicyCategory [Expects: https://schema.org/MerchantReturnEnumeration]
  ///
  /// Specifies an applicable return policy (from an enumeration).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnPolicyCategory = IriTerm.prevalidated(
    'https://schema.org/returnPolicyCategory',
  );

  /// returnPolicyCountry [Expects: https://schema.org/Country, https://schema.org/Text]
  ///
  /// The country where the product has to be sent to for returns, for example "Ireland" using the {[name]} property of {[Country]}. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnPolicyCountry = IriTerm.prevalidated(
    'https://schema.org/returnPolicyCountry',
  );

  /// returnPolicySeasonalOverride [Expects: https://schema.org/MerchantReturnPolicySeasonalOverride]
  ///
  /// Seasonal override of a return policy.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnPolicySeasonalOverride = IriTerm.prevalidated(
    'https://schema.org/returnPolicySeasonalOverride',
  );

  /// returnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of shipping costs for product returns (for any reason). Applicable when property {[returnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/returnShippingFeesAmount',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// validForMemberTier [Expects: https://schema.org/MemberProgramTier]
  ///
  /// The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/OfferShippingDetails, https://schema.org/PriceSpecification, https://schema.org/ShippingService
  ///
  static const validForMemberTier = IriTerm.prevalidated(
    'https://schema.org/validForMemberTier',
  );

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
