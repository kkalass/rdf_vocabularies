// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Occupation class from Schema vocabulary
library schema_schemaoccupation_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Occupation class from Schema vocabulary
///
/// A profession, may involve prolonged training and/or a formal qualification.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with Occupation.
/// [Class Reference](https://schema.org/Occupation)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaOccupation {
  // Private constructor prevents instantiation
  const SchemaOccupation._();

  /// IRI term for the Occupation class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated('https://schema.org/Occupation');

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// educationRequirements [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text]
  ///
  /// Educational background needed for the position or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const educationRequirements = IriTerm.prevalidated(
    'https://schema.org/educationRequirements',
  );

  /// estimatedSalary [Expects: https://schema.org/MonetaryAmount, https://schema.org/MonetaryAmountDistribution, https://schema.org/Number]
  ///
  /// An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const estimatedSalary = IriTerm.prevalidated(
    'https://schema.org/estimatedSalary',
  );

  /// experienceRequirements [Expects: https://schema.org/OccupationalExperienceRequirements, https://schema.org/Text]
  ///
  /// Description of skills and experience needed for the position or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const experienceRequirements = IriTerm.prevalidated(
    'https://schema.org/experienceRequirements',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// occupationLocation [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
  ///
  /// Can be used on: https://schema.org/Occupation
  ///
  static const occupationLocation = IriTerm.prevalidated(
    'https://schema.org/occupationLocation',
  );

  /// occupationalCategory [Expects: https://schema.org/CategoryCode, https://schema.org/Text]
  ///
  /// A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\n
  /// Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram, https://schema.org/JobPosting, https://schema.org/Occupation, https://schema.org/Physician, https://schema.org/WorkBasedProgram
  ///
  static const occupationalCategory = IriTerm.prevalidated(
    'https://schema.org/occupationalCategory',
  );

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// qualifications [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text]
  ///
  /// Specific qualifications required for this role or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const qualifications = IriTerm.prevalidated(
    'https://schema.org/qualifications',
  );

  /// responsibilities [Expects: https://schema.org/Text]
  ///
  /// Responsibilities associated with this role or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const responsibilities = IriTerm.prevalidated(
    'https://schema.org/responsibilities',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// skills [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is either claimed by a person, an organization or desired or required to fulfill a role or to work in an occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation, https://schema.org/Organization, https://schema.org/Person
  ///
  static const skills = IriTerm.prevalidated('https://schema.org/skills');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
