// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// MerchantReturnPolicySeasonalOverride class from Schema vocabulary
library schema_schemamerchantreturnpolicyseasonaloverride_vocab;

import 'package:rdf_core/rdf_core.dart';

/// MerchantReturnPolicySeasonalOverride class from Schema vocabulary
///
/// A seasonal override of a return policy, for example used for holidays.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with MerchantReturnPolicySeasonalOverride.
/// [Class Reference](https://schema.org/MerchantReturnPolicySeasonalOverride)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaMerchantReturnPolicySeasonalOverride {
  // Private constructor prevents instantiation
  const SchemaMerchantReturnPolicySeasonalOverride._();

  /// IRI term for the MerchantReturnPolicySeasonalOverride class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnPolicySeasonalOverride',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// endDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const endDate = IriTerm.prevalidated('https://schema.org/endDate');

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// merchantReturnDays [Expects: https://schema.org/Date, https://schema.org/DateTime, https://schema.org/Integer]
  ///
  /// Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the {[returnPolicyCategory]} property is specified as {[MerchantReturnFiniteReturnWindow]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const merchantReturnDays = IriTerm.prevalidated(
    'https://schema.org/merchantReturnDays',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// refundType [Expects: https://schema.org/RefundTypeEnumeration]
  ///
  /// A refund type, from an enumerated list.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const refundType = IriTerm.prevalidated(
    'https://schema.org/refundType',
  );

  /// restockingFee [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// Use {[MonetaryAmount]} to specify a fixed restocking fee for product returns, or use {[Number]} to specify a percentage of the product price paid by the customer.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const restockingFee = IriTerm.prevalidated(
    'https://schema.org/restockingFee',
  );

  /// returnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees for purchased products (for any return reason).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnFees = IriTerm.prevalidated(
    'https://schema.org/returnFees',
  );

  /// returnMethod [Expects: https://schema.org/ReturnMethodEnumeration]
  ///
  /// The type of return method offered, specified from an enumeration.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnMethod = IriTerm.prevalidated(
    'https://schema.org/returnMethod',
  );

  /// returnPolicyCategory [Expects: https://schema.org/MerchantReturnEnumeration]
  ///
  /// Specifies an applicable return policy (from an enumeration).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnPolicyCategory = IriTerm.prevalidated(
    'https://schema.org/returnPolicyCategory',
  );

  /// returnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of shipping costs for product returns (for any reason). Applicable when property {[returnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/returnShippingFeesAmount',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// startDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const startDate = IriTerm.prevalidated('https://schema.org/startDate');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
