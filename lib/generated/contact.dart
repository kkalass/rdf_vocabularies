// Copyright (c) 2025, Klas Kalaß <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

/// Contact Vocabulary
library contact_vocab;

import 'package:rdf_core/rdf_core.dart';

/// Main Contact vocabulary class containing all terms
///
/// Contains all terms defined in the http://www.w3.org/2000/10/swap/pim/contact# vocabulary.
class Contact {
  // Private constructor prevents instantiation
  const Contact._();

  /// Base IRI for Contact vocabulary
  /// [Spec](http://www.w3.org/2000/10/swap/pim/contact#)
  static const String namespace = 'http://www.w3.org/2000/10/swap/pim/contact#';
  static const String prefix = 'contact';

  /// IRI for contact:Address
  ///
  ///
  ///
  static const Address = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Address',
  );

  /// IRI for contact:ContactLocation
  ///
  /// A place, or mobile situation, with address, phone number, fax, etc. Related to a person by home, office, etc. Note one person's workplace may be another person's home. A person may have more than one home and more than one workplace. (In practice it sometimes maybe useful with restriucted datasets to assume that this is not the case, when extracting data from other ontologies with no concept of ContactLocation). Strongly related to a person: in some ways a role that a person can be in.
  ///
  static const ContactLocation = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#ContactLocation',
  );

  /// IRI for contact:Female
  ///
  ///
  ///
  static const Female = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Female',
  );

  /// IRI for contact:LanguageCode
  ///
  ///
  ///
  static const LanguageCode = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#LanguageCode',
  );

  /// IRI for contact:Male
  ///
  ///
  ///
  static const Male = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Male',
  );

  /// IRI for contact:Phone
  ///
  /// An end-point in the public swiitched telephone system. Anything identified by a URI with tel: scheme is in this class.
  ///
  static const Phone = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Phone',
  );

  /// IRI for contact:SocialEntity
  ///
  /// The sort of thing which can have a phone number. Typically a person or an incorporated company, or unincorporated group.
  ///
  static const SocialEntity = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#SocialEntity',
  );

  /// IRI for contact:Fax
  ///
  ///
  ///
  static const Fax = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Fax',
  );

  /// IRI for contact:MobilePhone
  ///
  ///
  ///
  static const MobilePhone = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#MobilePhone',
  );

  /// IRI for contact:Pager
  ///
  ///
  ///
  static const Pager = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Pager',
  );

  /// IRI for contact:Person
  ///
  /// A person in the normal sense of the word.
  ///
  static const Person = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Person',
  );

  /// IRI for contact:address
  ///
  ///
  ///
  static const address = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#address',
  );

  /// IRI for contact:assistant
  ///
  /// A person (or other agent) who is an assistant to the subject.
  ///
  static const assistant = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#assistant',
  );

  /// IRI for contact:birthday
  ///
  ///
  ///
  static const birthday = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#birthday',
  );

  /// IRI for contact:city
  ///
  ///
  ///
  static const city = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#city',
  );

  /// IRI for contact:country
  ///
  ///
  ///
  static const country = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#country',
  );

  /// IRI for contact:departmentName
  ///
  ///
  ///
  static const departmentName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#departmentName',
  );

  /// IRI for contact:emergency
  ///
  ///
  ///
  static const emergency = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#emergency',
  );

  /// IRI for contact:familyName
  ///
  ///
  ///
  static const familyName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#familyName',
  );

  /// IRI for contact:fax
  ///
  ///
  ///
  static const fax = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#fax',
  );

  /// IRI for contact:firstName
  ///
  ///
  ///
  static const firstName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#firstName',
  );

  /// IRI for contact:fullName
  ///
  ///
  ///
  static const fullName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#fullName',
  );

  /// IRI for contact:givenName
  ///
  ///
  ///
  static const givenName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#givenName',
  );

  /// IRI for contact:home
  ///
  ///
  ///
  static const home = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#home',
  );

  /// IRI for contact:homePage
  ///
  ///
  ///
  static const homePage = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#homePage',
  );

  /// IRI for contact:homePageAddress
  ///
  /// Use is discouraged
  ///
  static const homePageAddress = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#homePageAddress',
  );

  /// IRI for contact:knownAs
  ///
  /// A person may be known as various strings. For example, an email friendly name string. If you have an email from someone using a string as the human-readable phrase, then it is reasonable to assume that there are :knownAs that.
  ///
  static const knownAs = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#knownAs',
  );

  /// IRI for contact:lastName
  ///
  ///
  ///
  static const lastName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#lastName',
  );

  /// IRI for contact:middleInitial
  ///
  ///
  ///
  static const middleInitial = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#middleInitial',
  );

  /// IRI for contact:middleName
  ///
  ///
  ///
  static const middleName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#middleName',
  );

  /// IRI for contact:mobile
  ///
  ///
  ///
  static const mobile = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#mobile',
  );

  /// IRI for contact:motherTongue
  ///
  ///
  ///
  static const motherTongue = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#motherTongue',
  );

  /// IRI for contact:nearestAirport
  ///
  /// ?X nearestAirport ?Y locates ?X in an international context; for example, for the purpose of organizing a face-to-face meeting of a W3C working group. This property is intended to mitigate privacy risks of giving out detailed contact info.
  ///
  /// [See also](http://lists.w3.org/Archives/Public/www-webont-wg/2001Nov/0006.html)
  /// [See also](http://www.perceive.net/pages/page/articles/year/2002/month/12#9)
  /// [See also](http://www.w3.org/2001/sw/Europe/200303/geo/intro.html)
  /// [See also](http://www.w3.org/2001/sw/WebOnt/webont-airports.rdf)
  /// [See also](http://www.w3.org/2001/tag/ilist#httpRange-14)
  ///
  static const nearestAirport = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#nearestAirport',
  );

  /// IRI for contact:office
  ///
  ///
  ///
  static const office = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#office',
  );

  /// IRI for contact:organization
  ///
  ///
  ///
  static const organization = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#organization',
  );

  /// IRI for contact:participant
  ///
  /// A person (or other agent) who particpates in an event, meeting, etc.
  ///
  static const participant = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#participant',
  );

  /// IRI for contact:partner
  ///
  ///
  ///
  static const partner = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#partner',
  );

  /// IRI for contact:personalSuffix
  ///
  ///
  ///
  static const personalSuffix = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#personalSuffix',
  );

  /// IRI for contact:personalTitle
  ///
  ///
  ///
  static const personalTitle = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#personalTitle',
  );

  /// IRI for contact:phone
  ///
  ///
  ///
  static const phone = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#phone',
  );

  /// IRI for contact:postalCode
  ///
  ///
  ///
  static const postalCode = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#postalCode',
  );

  /// IRI for contact:preferredURI
  ///
  /// A string which is the URI a person, organization, etc, prefers that people use for them.
  ///
  static const preferredURI = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#preferredURI',
  );

  /// IRI for contact:publicHomePage
  ///
  ///
  ///
  static const publicHomePage = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#publicHomePage',
  );

  /// IRI for contact:region
  ///
  /// The sub-national unit such as state (us), province (ca), county (uk), département (fr), and so on
  ///
  static const region = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#region',
  );

  /// IRI for contact:sortName
  ///
  /// re-arranged for lexicographic ordering; ala Doe, John
  ///
  static const sortName = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#sortName',
  );

  /// IRI for contact:stateOrProvince
  ///
  ///
  ///
  static const stateOrProvince = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#stateOrProvince',
  );

  /// IRI for contact:street
  ///
  ///
  ///
  static const street = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#street',
  );

  /// IRI for contact:street2
  ///
  ///
  ///
  static const street2 = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#street2',
  );

  /// IRI for contact:street3
  ///
  ///
  ///
  static const street3 = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#street3',
  );

  /// IRI for contact:title
  ///
  ///
  ///
  static const title = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#title',
  );

  /// IRI for contact:vacationHome
  ///
  ///
  ///
  static const vacationHome = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#vacationHome',
  );

  /// IRI for contact:webPage
  ///
  /// A related web page
  ///
  static const webPage = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#webPage',
  );

  /// IRI for contact:zip
  ///
  ///
  ///
  static const zip = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#zip',
  );

  /// IRI for contact:Date
  ///
  ///
  ///
  static const Date = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Date',
  );

  /// IRI for contact:Mailbox
  ///
  ///
  ///
  static const Mailbox = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#Mailbox',
  );

  /// IRI for contact:emailAddress [Expects: http://www.w3.org/2000/10/swap/pim/contact#_EmailAddress]
  ///
  /// emailAddress is a string. Use of this is discouraged. Use :mailbox instead
  ///
  /// Can be used on: http://www.w3.org/2000/10/swap/pim/contact#SocialEntity
  ///
  static const emailAddress = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#emailAddress',
  );

  /// IRI for contact:mailbox [Expects: http://www.w3.org/2000/10/swap/pim/contact#Mailbox]
  ///
  ///
  ///
  /// Can be used on: http://www.w3.org/2000/10/swap/pim/contact#SocialEntity
  ///
  static const mailbox = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#mailbox',
  );

  /// IRI for contact:mailboxURI [Expects: http://www.w3.org/2000/10/swap/pim/contact#_URI]
  ///
  /// mailboxURI is a string. Use of this is discouraged. Use :mailbox instead
  ///
  /// Can be used on: http://www.w3.org/2000/10/swap/pim/contact#SocialEntity
  ///
  static const mailboxURI = IriTerm.prevalidated(
    'http://www.w3.org/2000/10/swap/pim/contact#mailboxURI',
  );
}
