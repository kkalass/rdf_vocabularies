// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Event class from Dcmitype vocabulary
///
/// A non-persistent, time-based occurrence.
///
/// Inherits from:
/// - Resource (http://www.w3.org/2000/01/rdf-schema#Resource)
/// - Thing (https://schema.org/Thing)
///
/// Equivalent to:
/// - Event (https://schema.org/Event)
///
/// This class provides access to all properties that can be used with Event.
/// [Class Reference](http://purl.org/dc/dcmitype/Event)
///
/// [Vocabulary Reference](http://purl.org/dc/dcmitype/)
class DcmitypeEvent {
  // Private constructor prevents instantiation
  const DcmitypeEvent._();

  /// IRI term for the Event class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://purl.org/dc/dcmitype/Event',
  );

  /// type from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// The subject is an instance of a class.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfType = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
  );

  /// value from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfValue = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#value',
  );

  /// comment from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A description of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsComment = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#comment',
  );

  /// label from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A human-readable name for the subject.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsLabel = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#label',
  );

  /// seeAlso from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Further information about the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsSeeAlso = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#seeAlso',
  );

  /// isDefinedBy from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The definition of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsIsDefinedBy = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#isDefinedBy',
  );

  /// member from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// A member of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsMember = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#member',
  );

  /// annotatedProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the predicate of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedProperty',
  );

  /// annotatedSource from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the subject of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedSource = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedSource',
  );

  /// annotatedTarget from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the object of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedTarget = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedTarget',
  );

  /// deprecated from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that indicates that a given entity has been deprecated.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlDeprecated = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#deprecated',
  );

  /// members from owl vocabulary [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#List]
  ///
  /// The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlMembers = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#members',
  );

  /// versionInfo from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that provides version information for an ontology or another OWL construct.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlVersionInfo = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#versionInfo',
  );

  /// additionalType from schema vocabulary [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaAdditionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// aggregateRating from schema vocabulary [Expects: https://schema.org/AggregateRating]
  ///
  /// The overall rating, based on a collection of reviews or ratings, of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const schemaAggregateRating = IriTerm.prevalidated(
    'https://schema.org/aggregateRating',
  );

  /// attendees from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person attending the event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaAttendees = IriTerm.prevalidated(
    'https://schema.org/attendees',
  );

  /// composer from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization who wrote a composition, or who is the composer of a work performed at some event.
  ///
  /// Can be used on: https://schema.org/Event, https://schema.org/MusicComposition
  ///
  static const schemaComposer = IriTerm.prevalidated(
    'https://schema.org/composer',
  );

  /// contributor from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A secondary contributor to the CreativeWork or Event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const schemaContributor = IriTerm.prevalidated(
    'https://schema.org/contributor',
  );

  /// disambiguatingDescription from schema vocabulary [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaDisambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// doorTime from schema vocabulary [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The time admission will commence.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaDoorTime = IriTerm.prevalidated(
    'https://schema.org/doorTime',
  );

  /// endDate from schema vocabulary [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const schemaEndDate = IriTerm.prevalidated(
    'https://schema.org/endDate',
  );

  /// eventAttendanceMode from schema vocabulary [Expects: https://schema.org/EventAttendanceModeEnumeration]
  ///
  /// The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaEventAttendanceMode = IriTerm.prevalidated(
    'https://schema.org/eventAttendanceMode',
  );

  /// eventSchedule from schema vocabulary [Expects: https://schema.org/Schedule]
  ///
  /// Associates an {[Event]} with a {[Schedule]}. There are circumstances where it is preferable to share a schedule for a series of
  /// repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
  /// gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An {[Event]} that
  /// is associated with a {[Schedule]} using this property should not have {[startDate]} or {[endDate]} properties. These are instead defined within the associated
  /// {[Schedule]}, this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months
  /// or seasons.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaEventSchedule = IriTerm.prevalidated(
    'https://schema.org/eventSchedule',
  );

  /// eventStatus from schema vocabulary [Expects: https://schema.org/EventStatusType]
  ///
  /// An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaEventStatus = IriTerm.prevalidated(
    'https://schema.org/eventStatus',
  );

  /// funder from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization that supports (sponsors) something through some kind of financial contribution.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Grant, https://schema.org/MonetaryGrant, https://schema.org/Organization, https://schema.org/Person
  ///
  static const schemaFunder = IriTerm.prevalidated('https://schema.org/funder');

  /// keywords from schema vocabulary [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const schemaKeywords = IriTerm.prevalidated(
    'https://schema.org/keywords',
  );

  /// maximumAttendeeCapacity from schema vocabulary [Expects: https://schema.org/Integer]
  ///
  /// The total number of individuals that may attend an event or venue.
  ///
  /// Can be used on: https://schema.org/Event, https://schema.org/Place
  ///
  static const schemaMaximumAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumAttendeeCapacity',
  );

  /// maximumPhysicalAttendeeCapacity from schema vocabulary [Expects: https://schema.org/Integer]
  ///
  /// The maximum physical attendee capacity of an {[Event]} whose {[eventAttendanceMode]} is {[OfflineEventAttendanceMode]} (or the offline aspects, in the case of a {[MixedEventAttendanceMode]}).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaMaximumPhysicalAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumPhysicalAttendeeCapacity',
  );

  /// maximumVirtualAttendeeCapacity from schema vocabulary [Expects: https://schema.org/Integer]
  ///
  /// The maximum virtual attendee capacity of an {[Event]} whose {[eventAttendanceMode]} is {[OnlineEventAttendanceMode]} (or the online aspects, in the case of a {[MixedEventAttendanceMode]}).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaMaximumVirtualAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumVirtualAttendeeCapacity',
  );

  /// name from schema vocabulary [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaName = IriTerm.prevalidated('https://schema.org/name');

  /// organizer from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An organizer of an Event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaOrganizer = IriTerm.prevalidated(
    'https://schema.org/organizer',
  );

  /// performers from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaPerformers = IriTerm.prevalidated(
    'https://schema.org/performers',
  );

  /// potentialAction from schema vocabulary [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaPotentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// previousStartDate from schema vocabulary [Expects: https://schema.org/Date]
  ///
  /// Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaPreviousStartDate = IriTerm.prevalidated(
    'https://schema.org/previousStartDate',
  );

  /// remainingAttendeeCapacity from schema vocabulary [Expects: https://schema.org/Integer]
  ///
  /// The number of attendee places for an event that remain unallocated.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaRemainingAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/remainingAttendeeCapacity',
  );

  /// sameAs from schema vocabulary [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaSameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// startDate from schema vocabulary [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const schemaStartDate = IriTerm.prevalidated(
    'https://schema.org/startDate',
  );

  /// subEvents from schema vocabulary [Expects: https://schema.org/Event]
  ///
  /// Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaSubEvents = IriTerm.prevalidated(
    'https://schema.org/subEvents',
  );

  /// translator from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const schemaTranslator = IriTerm.prevalidated(
    'https://schema.org/translator',
  );

  /// typicalAgeRange from schema vocabulary [Expects: https://schema.org/Text]
  ///
  /// The typical expected age range, e.g. '7-9', '11-'.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const schemaTypicalAgeRange = IriTerm.prevalidated(
    'https://schema.org/typicalAgeRange',
  );

  /// url from schema vocabulary [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaUrl = IriTerm.prevalidated('https://schema.org/url');

  /// workPerformed from schema vocabulary [Expects: https://schema.org/CreativeWork]
  ///
  /// A work performed in some event, for example a play performed in a TheaterEvent.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaWorkPerformed = IriTerm.prevalidated(
    'https://schema.org/workPerformed',
  );

  /// alternateName from schema vocabulary [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaAlternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// attendee from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization attending the event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaAttendee = IriTerm.prevalidated(
    'https://schema.org/attendee',
  );

  /// audience from schema vocabulary [Expects: https://schema.org/Audience]
  ///
  /// An intended audience, i.e. a group for whom something was created.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/LodgingBusiness, https://schema.org/PlayAction, https://schema.org/Product, https://schema.org/Service
  ///
  static const schemaAudience = IriTerm.prevalidated(
    'https://schema.org/audience',
  );

  /// director from schema vocabulary [Expects: https://schema.org/Person]
  ///
  /// A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/Event, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const schemaDirector = IriTerm.prevalidated(
    'https://schema.org/director',
  );

  /// duration from schema vocabulary [Expects: https://schema.org/Duration, https://schema.org/QuantitativeValue]
  ///
  /// The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/Audiobook, https://schema.org/Episode, https://schema.org/Event, https://schema.org/MediaObject, https://schema.org/Movie, https://schema.org/MusicRecording, https://schema.org/MusicRelease, https://schema.org/QuantitativeValueDistribution, https://schema.org/Schedule, https://schema.org/ServicePeriod
  ///
  static const schemaDuration = IriTerm.prevalidated(
    'https://schema.org/duration',
  );

  /// funding from schema vocabulary [Expects: https://schema.org/Grant]
  ///
  /// A {[Grant]} that directly or indirectly provide funding or sponsorship for this item. See also {[ownershipFundingInfo]}.
  ///
  /// Can be used on: https://schema.org/BioChemEntity, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/MedicalEntity, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product
  ///
  static const schemaFunding = IriTerm.prevalidated(
    'https://schema.org/funding',
  );

  /// inLanguage from schema vocabulary [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also {[availableLanguage]}.
  ///
  /// Can be used on: https://schema.org/BroadcastService, https://schema.org/CommunicateAction, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/LinkRole, https://schema.org/PronounceableText, https://schema.org/WriteAction
  ///
  static const schemaInLanguage = IriTerm.prevalidated(
    'https://schema.org/inLanguage',
  );

  /// isAccessibleForFree from schema vocabulary [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the item, event, or place is accessible for free.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Place
  ///
  static const schemaIsAccessibleForFree = IriTerm.prevalidated(
    'https://schema.org/isAccessibleForFree',
  );

  /// mainEntityOfPage from schema vocabulary [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaMainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// offers from schema vocabulary [Expects: https://schema.org/Demand, https://schema.org/Offer]
  ///
  /// An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use {[businessFunction]} to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a {[Demand]}. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
  ///
  ///
  /// Can be used on: https://schema.org/AggregateOffer, https://schema.org/CreativeWork, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MenuItem, https://schema.org/Product, https://schema.org/Service, https://schema.org/Trip
  ///
  static const schemaOffers = IriTerm.prevalidated('https://schema.org/offers');

  /// performer from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaPerformer = IriTerm.prevalidated(
    'https://schema.org/performer',
  );

  /// recordedIn from schema vocabulary [Expects: https://schema.org/CreativeWork]
  ///
  /// The CreativeWork that captured all or part of this Event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaRecordedIn = IriTerm.prevalidated(
    'https://schema.org/recordedIn',
  );

  /// review from schema vocabulary [Expects: https://schema.org/Review]
  ///
  /// A review of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const schemaReview = IriTerm.prevalidated('https://schema.org/review');

  /// sponsor from schema vocabulary [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Grant, https://schema.org/MedicalStudy, https://schema.org/Organization, https://schema.org/Person
  ///
  static const schemaSponsor = IriTerm.prevalidated(
    'https://schema.org/sponsor',
  );

  /// subjectOf from schema vocabulary [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaSubjectOf = IriTerm.prevalidated(
    'https://schema.org/subjectOf',
  );

  /// superEvent from schema vocabulary [Expects: https://schema.org/Event]
  ///
  /// An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaSuperEvent = IriTerm.prevalidated(
    'https://schema.org/superEvent',
  );

  /// about from schema vocabulary [Expects: https://schema.org/Thing]
  ///
  /// The subject matter of the content.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/CommunicateAction, https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const schemaAbout = IriTerm.prevalidated('https://schema.org/about');

  /// actor from schema vocabulary [Expects: https://schema.org/PerformingGroup, https://schema.org/Person]
  ///
  /// An actor (individual or a group), e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/Event, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/PodcastSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const schemaActor = IriTerm.prevalidated('https://schema.org/actor');

  /// subEvent from schema vocabulary [Expects: https://schema.org/Event]
  ///
  /// An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaSubEvent = IriTerm.prevalidated(
    'https://schema.org/subEvent',
  );

  /// workFeatured from schema vocabulary [Expects: https://schema.org/CreativeWork]
  ///
  /// A work featured in some event, e.g. exhibited in an ExhibitionEvent.
  /// Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const schemaWorkFeatured = IriTerm.prevalidated(
    'https://schema.org/workFeatured',
  );

  /// description from schema vocabulary [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaDescription = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image from schema vocabulary [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaImage = IriTerm.prevalidated('https://schema.org/image');

  /// location from schema vocabulary [Expects: https://schema.org/Place, https://schema.org/PostalAddress, https://schema.org/Text, https://schema.org/VirtualLocation]
  ///
  /// The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
  ///
  /// Can be used on: https://schema.org/Action, https://schema.org/Event, https://schema.org/InteractionCounter, https://schema.org/Organization
  ///
  static const schemaLocation = IriTerm.prevalidated(
    'https://schema.org/location',
  );

  /// identifier from schema vocabulary [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const schemaIdentifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// abstract_ from bibo vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A summary of the resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const biboAbstract_ = IriTerm.prevalidated(
    'http://purl.org/ontology/bibo/abstract',
  );
}
