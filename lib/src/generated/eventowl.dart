// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Main Eventowl vocabulary class containing all terms
///
/// Contains all terms defined in the http://purl.org/NET/c4dm/event.owl# vocabulary.
class Eventowl {
  // Private constructor prevents instantiation
  const Eventowl._();

  /// Base IRI for Eventowl vocabulary
  /// [Spec](http://purl.org/NET/c4dm/event.owl#)
  static const String namespace = 'http://purl.org/NET/c4dm/event.owl#';
  static const String prefix = 'eventowl';

  /// IRI for eventowl:Event
  ///
  ///
  /// An arbitrary classification of a space/time region, by a
  /// cognitive agent. An event may have actively participating agents,
  /// passive factors, products, and a location in space/time.
  ///
  ///
  static const Event = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#Event',
  );

  /// IRI for eventowl:Product
  ///
  ///
  /// Everything produced by an event
  ///
  ///
  static const Product = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#Product',
  );

  /// IRI for eventowl:Factor
  ///
  ///
  /// Everything used as a factor in an event
  ///
  ///
  static const Factor = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#Factor',
  );

  /// IRI for eventowl:agent [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  ///
  /// Relates an event to an active agent (a person, a computer, ... :-) )
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const agent = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#agent',
  );

  /// IRI for eventowl:factor
  ///
  ///
  /// Relates an event to a passive factor (a tool, an instrument, an abstract cause...)
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const factor = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#factor',
  );

  /// IRI for eventowl:literal_factor
  ///
  ///
  /// Relates an event to a factor which can be described as a literal. This property
  /// should not be used as-is, but should be subsumed by other, more specific, properties
  /// (like an hypothetic :weatherCelsius, linking an event to a temperature).
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const literal_factor = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#literal_factor',
  );

  /// IRI for eventowl:product
  ///
  ///
  /// Relates an event to something produced during the event---a sound, a pie, whatever...
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const product = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#product',
  );

  /// IRI for eventowl:sub_event [Expects: http://purl.org/NET/c4dm/event.owl#Event]
  ///
  ///
  /// This property provides a way to split a complex event (for example, a performance involving several
  /// musicians) into simpler ones (one event per musician).
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const sub_event = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#sub_event',
  );

  /// IRI for eventowl:time [Expects: http://www.w3.org/2006/time#TemporalEntity]
  ///
  ///
  /// Relates an event to a time object, classifying a time region (either instantaneous or having an extent).
  /// By using the Timeline ontology here, you can define event happening on a recorded track or on any
  /// media with a temporal extent.
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const time = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#time',
  );

  /// IRI for eventowl:place [Expects: http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing]
  ///
  ///
  /// Relates an event to a spatial object.
  ///
  ///
  /// Can be used on: http://purl.org/NET/c4dm/event.owl#Event
  ///
  static const place = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#place',
  );

  /// IRI for eventowl:isAgentIn
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const isAgentIn = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#isAgentIn',
  );

  /// IRI for eventowl:isFactorOf
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const isFactorOf = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#isFactorOf',
  );

  /// IRI for eventowl:producedIn
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const producedIn = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#producedIn',
  );

  /// IRI for eventowl:hasFactor
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasFactor = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#hasFactor',
  );

  /// IRI for eventowl:hasAgent
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasAgent = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#hasAgent',
  );

  /// IRI for eventowl:hasProduct
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasProduct = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#hasProduct',
  );

  /// IRI for eventowl:hasLiteralFactor
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasLiteralFactor = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#hasLiteralFactor',
  );

  /// IRI for eventowl:agent_in
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const agent_in = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#agent_in',
  );

  /// IRI for eventowl:factor_of
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const factor_of = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#factor_of',
  );

  /// IRI for eventowl:produced_in
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const produced_in = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#produced_in',
  );

  /// IRI for eventowl:hasSubEvent
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasSubEvent = IriTerm.prevalidated(
    'http://purl.org/NET/c4dm/event.owl#hasSubEvent',
  );
}
