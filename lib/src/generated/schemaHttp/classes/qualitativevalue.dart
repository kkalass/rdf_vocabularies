// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// QualitativeValue class from SchemaHttp vocabulary
///
/// A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
///
/// Inherits from:
/// - Enumeration (http://schema.org/Enumeration)
/// - Intangible (http://schema.org/Intangible)
/// - Thing (http://schema.org/Thing)
///
/// This class provides access to all properties that can be used with QualitativeValue.
/// [Class Reference](http://schema.org/QualitativeValue)
///
/// [Vocabulary Reference](http://schema.org/)
class SchemaHttpQualitativeValue {
  // Private constructor prevents instantiation
  const SchemaHttpQualitativeValue._();

  /// IRI term for the QualitativeValue class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://schema.org/QualitativeValue',
  );

  /// additionalProperty [Expects: http://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: http://schema.org/MerchantReturnPolicy, http://schema.org/Offer, http://schema.org/Place, http://schema.org/Product, http://schema.org/QualitativeValue, http://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'http://schema.org/additionalProperty',
  );

  /// additionalType [Expects: http://schema.org/Text, http://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="http://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'http://schema.org/additionalType',
  );

  /// disambiguatingDescription [Expects: http://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'http://schema.org/disambiguatingDescription',
  );

  /// equal [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is equal to the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const equal = IriTerm.prevalidated('http://schema.org/equal');

  /// greater [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is greater than the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const greater = IriTerm.prevalidated('http://schema.org/greater');

  /// greaterOrEqual [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const greaterOrEqual = IriTerm.prevalidated(
    'http://schema.org/greaterOrEqual',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'http://schema.org/interactionCount',
  );

  /// lesser [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is lesser than the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const lesser = IriTerm.prevalidated('http://schema.org/lesser');

  /// lesserOrEqual [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const lesserOrEqual = IriTerm.prevalidated(
    'http://schema.org/lesserOrEqual',
  );

  /// name [Expects: http://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('http://schema.org/name');

  /// nonEqual [Expects: http://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is not equal to the object.
  ///
  /// Can be used on: http://schema.org/QualitativeValue
  ///
  static const nonEqual = IriTerm.prevalidated('http://schema.org/nonEqual');

  /// potentialAction [Expects: http://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'http://schema.org/potentialAction',
  );

  /// sameAs [Expects: http://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('http://schema.org/sameAs');

  /// supersededBy [Expects: http://schema.org/Class, http://schema.org/Enumeration, http://schema.org/Property]
  ///
  /// Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
  ///
  /// Can be used on: http://schema.org/Class, http://schema.org/Enumeration, http://schema.org/Property
  ///
  static const supersededBy = IriTerm.prevalidated(
    'http://schema.org/supersededBy',
  );

  /// url [Expects: http://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('http://schema.org/url');

  /// valueReference [Expects: http://schema.org/DefinedTerm, http://schema.org/Enumeration, http://schema.org/MeasurementTypeEnumeration, http://schema.org/PropertyValue, http://schema.org/QualitativeValue, http://schema.org/QuantitativeValue, http://schema.org/StructuredValue, http://schema.org/Text]
  ///
  /// A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.
  ///
  /// Can be used on: http://schema.org/PropertyValue, http://schema.org/QualitativeValue, http://schema.org/QuantitativeValue
  ///
  static const valueReference = IriTerm.prevalidated(
    'http://schema.org/valueReference',
  );

  /// alternateName [Expects: http://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'http://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: http://schema.org/CreativeWork, http://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'http://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: http://schema.org/CreativeWork, http://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('http://schema.org/subjectOf');

  /// description [Expects: http://schema.org/Text, http://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'http://schema.org/description',
  );

  /// image [Expects: http://schema.org/ImageObject, http://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('http://schema.org/image');

  /// identifier [Expects: http://schema.org/PropertyValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'http://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('http://schema.org/source');
}
