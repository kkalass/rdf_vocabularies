// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Motorcycle class from SchemaHttp vocabulary
///
/// A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
///
/// Inherits from:
/// - Product (http://schema.org/Product)
/// - Resource (http://www.w3.org/2000/01/rdf-schema#Resource)
/// - Thing (http://schema.org/Thing)
/// - Vehicle (http://schema.org/Vehicle)
///
/// This class provides access to all properties that can be used with Motorcycle.
/// [Class Reference](http://schema.org/Motorcycle)
///
/// [Vocabulary Reference](http://schema.org/)
class SchemaHttpMotorcycle {
  // Private constructor prevents instantiation
  const SchemaHttpMotorcycle._();

  /// IRI term for the Motorcycle class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated('http://schema.org/Motorcycle');

  /// accelerationTime [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\n\nTypical unit code(s): SEC for seconds\n\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the {[name]} of the {[QuantitativeValue]}, or use {[valueReference]} with a {[QuantitativeValue]} of 0..60 mph or 0..100 km/h to specify the reference speeds.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const accelerationTime = IriTerm.prevalidated(
    'http://schema.org/accelerationTime',
  );

  /// additionalProperty [Expects: http://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: http://schema.org/MerchantReturnPolicy, http://schema.org/Offer, http://schema.org/Place, http://schema.org/Product, http://schema.org/QualitativeValue, http://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'http://schema.org/additionalProperty',
  );

  /// additionalType [Expects: http://schema.org/Text, http://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="http://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'http://schema.org/additionalType',
  );

  /// aggregateRating [Expects: http://schema.org/AggregateRating]
  ///
  /// The overall rating, based on a collection of reviews or ratings, of the item.
  ///
  /// Can be used on: http://schema.org/Brand, http://schema.org/CreativeWork, http://schema.org/Event, http://schema.org/Offer, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product, http://schema.org/Service
  ///
  static const aggregateRating = IriTerm.prevalidated(
    'http://schema.org/aggregateRating',
  );

  /// asin [Expects: http://schema.org/Text, http://schema.org/URL]
  ///
  /// An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
  ///
  /// Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
  /// ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const asin = IriTerm.prevalidated('http://schema.org/asin');

  /// awards [Expects: http://schema.org/Text]
  ///
  /// Awards won by or for this item.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Organization, http://schema.org/Person, http://schema.org/Product
  ///
  static const awards = IriTerm.prevalidated('http://schema.org/awards');

  /// bodyType [Expects: http://schema.org/QualitativeValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const bodyType = IriTerm.prevalidated('http://schema.org/bodyType');

  /// brand [Expects: http://schema.org/Brand, http://schema.org/Organization]
  ///
  /// The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
  ///
  /// Can be used on: http://schema.org/Organization, http://schema.org/Person, http://schema.org/Product, http://schema.org/Service
  ///
  static const brand = IriTerm.prevalidated('http://schema.org/brand');

  /// callSign [Expects: http://schema.org/Text]
  ///
  /// A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
  ///
  /// Can be used on: http://schema.org/BroadcastService, http://schema.org/Person, http://schema.org/Vehicle
  ///
  static const callSign = IriTerm.prevalidated('http://schema.org/callSign');

  /// cargoVolume [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\n\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\n\nNote: You can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const cargoVolume = IriTerm.prevalidated(
    'http://schema.org/cargoVolume',
  );

  /// color [Expects: http://schema.org/Text]
  ///
  /// The color of the product.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const color = IriTerm.prevalidated('http://schema.org/color');

  /// colorSwatch [Expects: http://schema.org/ImageObject, http://schema.org/URL]
  ///
  /// A color swatch image, visualizing the color of a {[Product]}. Should match the textual description specified in the {[color]} property. This can be a URL or a fully described ImageObject.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const colorSwatch = IriTerm.prevalidated(
    'http://schema.org/colorSwatch',
  );

  /// countryOfAssembly [Expects: http://schema.org/Text]
  ///
  /// The place where the product was assembled.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const countryOfAssembly = IriTerm.prevalidated(
    'http://schema.org/countryOfAssembly',
  );

  /// countryOfLastProcessing [Expects: http://schema.org/Text]
  ///
  /// The place where the item (typically {[Product]}) was last processed and tested before importation.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const countryOfLastProcessing = IriTerm.prevalidated(
    'http://schema.org/countryOfLastProcessing',
  );

  /// countryOfOrigin [Expects: http://schema.org/Country]
  ///
  /// The country of origin of something, including products as well as creative  works such as movie and TV content.
  ///
  /// In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of {[CreativeWork]} it is difficult to provide fully general guidance, and properties such as {[contentLocation]} and {[locationCreated]} may be more applicable.
  ///
  /// In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Movie, http://schema.org/Product, http://schema.org/TVEpisode, http://schema.org/TVSeason, http://schema.org/TVSeries
  ///
  static const countryOfOrigin = IriTerm.prevalidated(
    'http://schema.org/countryOfOrigin',
  );

  /// dateVehicleFirstRegistered [Expects: http://schema.org/Date]
  ///
  /// The date of the first registration of the vehicle with the respective public authorities.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const dateVehicleFirstRegistered = IriTerm.prevalidated(
    'http://schema.org/dateVehicleFirstRegistered',
  );

  /// depth [Expects: http://schema.org/Distance, http://schema.org/QuantitativeValue]
  ///
  /// The depth of the item.
  ///
  /// Can be used on: http://schema.org/OfferShippingDetails, http://schema.org/Product, http://schema.org/ShippingConditions, http://schema.org/VisualArtwork
  ///
  static const depth = IriTerm.prevalidated('http://schema.org/depth');

  /// disambiguatingDescription [Expects: http://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'http://schema.org/disambiguatingDescription',
  );

  /// driveWheelConfiguration [Expects: http://schema.org/DriveWheelConfigurationValue, http://schema.org/Text]
  ///
  /// The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const driveWheelConfiguration = IriTerm.prevalidated(
    'http://schema.org/driveWheelConfiguration',
  );

  /// emissionsCO2 [Expects: http://schema.org/Number]
  ///
  /// The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put "g/km" into the unitText property of that value, since there is no UN/CEFACT Common Code for "g/km".
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const emissionsCO2 = IriTerm.prevalidated(
    'http://schema.org/emissionsCO2',
  );

  /// fuelCapacity [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\n\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const fuelCapacity = IriTerm.prevalidated(
    'http://schema.org/fuelCapacity',
  );

  /// fuelConsumption [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\n\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use {[unitText]} to indicate the unit of measurement, e.g. L/100 km.\n* Note 2: There are two ways of indicating the fuel consumption, {[fuelConsumption]} (e.g. 8 liters per 100 km) and {[fuelEfficiency]} (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use {[valueReference]} to link the value for the fuel consumption to another value.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const fuelConsumption = IriTerm.prevalidated(
    'http://schema.org/fuelConsumption',
  );

  /// fuelEfficiency [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\n\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use {[unitText]} to indicate the unit of measurement, e.g. mpg or km/L.\n* Note 2: There are two ways of indicating the fuel consumption, {[fuelConsumption]} (e.g. 8 liters per 100 km) and {[fuelEfficiency]} (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use {[valueReference]} to link the value for the fuel economy to another value.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const fuelEfficiency = IriTerm.prevalidated(
    'http://schema.org/fuelEfficiency',
  );

  /// fuelType [Expects: http://schema.org/QualitativeValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
  ///
  /// Can be used on: http://schema.org/EngineSpecification, http://schema.org/Vehicle
  ///
  static const fuelType = IriTerm.prevalidated('http://schema.org/fuelType');

  /// gtin12 [Expects: http://schema.org/Text]
  ///
  /// The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const gtin12 = IriTerm.prevalidated('http://schema.org/gtin12');

  /// gtin13 [Expects: http://schema.org/Text]
  ///
  /// The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const gtin13 = IriTerm.prevalidated('http://schema.org/gtin13');

  /// gtin14 [Expects: http://schema.org/Text]
  ///
  /// The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const gtin14 = IriTerm.prevalidated('http://schema.org/gtin14');

  /// gtin8 [Expects: http://schema.org/Text]
  ///
  /// The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const gtin8 = IriTerm.prevalidated('http://schema.org/gtin8');

  /// hasAdultConsideration [Expects: http://schema.org/AdultOrientedEnumeration]
  ///
  /// Used to tag an item to be intended or suitable for consumption or use by adults only.
  ///
  /// Can be used on: http://schema.org/Offer, http://schema.org/Product
  ///
  static const hasAdultConsideration = IriTerm.prevalidated(
    'http://schema.org/hasAdultConsideration',
  );

  /// hasCertification [Expects: http://schema.org/Certification]
  ///
  /// Certification information about a product, organization, service, place, or person.
  ///
  /// Can be used on: http://schema.org/Organization, http://schema.org/Person, http://schema.org/Place, http://schema.org/Product, http://schema.org/Service
  ///
  static const hasCertification = IriTerm.prevalidated(
    'http://schema.org/hasCertification',
  );

  /// hasEnergyConsumptionDetails [Expects: http://schema.org/EnergyConsumptionDetails]
  ///
  /// Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const hasEnergyConsumptionDetails = IriTerm.prevalidated(
    'http://schema.org/hasEnergyConsumptionDetails',
  );

  /// hasGS1DigitalLink [Expects: http://schema.org/URL]
  ///
  /// The <a href="https://www.gs1.org/standards/gs1-digital-link">GS1 digital link</a> associated with the object. This URL should conform to the particular requirements of digital links. The link should only contain the Application Identifiers (AIs) that are relevant for the entity being annotated, for instance a {[Product]} or an {[Organization]}, and for the correct granularity. In particular, for products:<ul><li>A Digital Link that contains a serial number (AI <code>21</code>) should only be present on instances of {[IndividualProduct]}</li><li>A Digital Link that contains a lot number (AI <code>10</code>) should be annotated as {[SomeProduct]} if only products from that lot are sold, or {[IndividualProduct]} if there is only a specific product.</li><li>A Digital Link that contains a global model number (AI <code>8013</code>)  should be attached to a {[Product]} or a {[ProductModel]}.</li></ul> Other item types should be adapted similarly.
  ///
  /// Can be used on: http://schema.org/Offer, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product
  ///
  static const hasGS1DigitalLink = IriTerm.prevalidated(
    'http://schema.org/hasGS1DigitalLink',
  );

  /// hasMeasurement [Expects: http://schema.org/QuantitativeValue]
  ///
  /// A measurement of an item, For example, the inseam of pants, the wheel size of a bicycle, the gauge of a screw, or the carbon footprint measured for certification by an authority. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
  ///
  /// Can be used on: http://schema.org/Certification, http://schema.org/Offer, http://schema.org/Product, http://schema.org/SizeSpecification
  ///
  static const hasMeasurement = IriTerm.prevalidated(
    'http://schema.org/hasMeasurement',
  );

  /// hasMerchantReturnPolicy [Expects: http://schema.org/MerchantReturnPolicy]
  ///
  /// Specifies a MerchantReturnPolicy that may be applicable.
  ///
  /// Can be used on: http://schema.org/Offer, http://schema.org/Organization, http://schema.org/Product
  ///
  static const hasMerchantReturnPolicy = IriTerm.prevalidated(
    'http://schema.org/hasMerchantReturnPolicy',
  );

  /// height [Expects: http://schema.org/Distance, http://schema.org/QuantitativeValue]
  ///
  /// The height of the item.
  ///
  /// Can be used on: http://schema.org/MediaObject, http://schema.org/OfferShippingDetails, http://schema.org/Person, http://schema.org/Product, http://schema.org/ShippingConditions, http://schema.org/VisualArtwork
  ///
  static const height = IriTerm.prevalidated('http://schema.org/height');

  /// inProductGroupWithID [Expects: http://schema.org/Text]
  ///
  /// Indicates the {[productGroupID]} for a {[ProductGroup]} that this product {[isVariantOf]}.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const inProductGroupWithID = IriTerm.prevalidated(
    'http://schema.org/inProductGroupWithID',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'http://schema.org/interactionCount',
  );

  /// isAccessoryOrSparePartFor [Expects: http://schema.org/Product]
  ///
  /// A pointer to another product (or multiple products) for which this product is an accessory or spare part.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const isAccessoryOrSparePartFor = IriTerm.prevalidated(
    'http://schema.org/isAccessoryOrSparePartFor',
  );

  /// isConsumableFor [Expects: http://schema.org/Product]
  ///
  /// A pointer to another product (or multiple products) for which this product is a consumable.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const isConsumableFor = IriTerm.prevalidated(
    'http://schema.org/isConsumableFor',
  );

  /// isFamilyFriendly [Expects: http://schema.org/Boolean]
  ///
  /// Indicates whether this content is family friendly.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Offer, http://schema.org/Product
  ///
  static const isFamilyFriendly = IriTerm.prevalidated(
    'http://schema.org/isFamilyFriendly',
  );

  /// isRelatedTo [Expects: http://schema.org/Product, http://schema.org/Service]
  ///
  /// A pointer to another, somehow related product (or multiple products).
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Service
  ///
  static const isRelatedTo = IriTerm.prevalidated(
    'http://schema.org/isRelatedTo',
  );

  /// isSimilarTo [Expects: http://schema.org/Product, http://schema.org/Service]
  ///
  /// A pointer to another, functionally similar product (or multiple products).
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Service
  ///
  static const isSimilarTo = IriTerm.prevalidated(
    'http://schema.org/isSimilarTo',
  );

  /// itemCondition [Expects: http://schema.org/OfferItemCondition]
  ///
  /// A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/MerchantReturnPolicy, http://schema.org/Offer, http://schema.org/Product
  ///
  static const itemCondition = IriTerm.prevalidated(
    'http://schema.org/itemCondition',
  );

  /// keywords [Expects: http://schema.org/DefinedTerm, http://schema.org/Text, http://schema.org/URL]
  ///
  /// Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Event, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product
  ///
  static const keywords = IriTerm.prevalidated('http://schema.org/keywords');

  /// knownVehicleDamages [Expects: http://schema.org/Text]
  ///
  /// A textual description of known damages, both repaired and unrepaired.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const knownVehicleDamages = IriTerm.prevalidated(
    'http://schema.org/knownVehicleDamages',
  );

  /// logo [Expects: http://schema.org/ImageObject, http://schema.org/URL]
  ///
  /// An associated logo.
  ///
  /// Can be used on: http://schema.org/Brand, http://schema.org/Certification, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product, http://schema.org/Service
  ///
  static const logo = IriTerm.prevalidated('http://schema.org/logo');

  /// manufacturer [Expects: http://schema.org/Organization]
  ///
  /// The manufacturer of the product.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const manufacturer = IriTerm.prevalidated(
    'http://schema.org/manufacturer',
  );

  /// meetsEmissionStandard [Expects: http://schema.org/QualitativeValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// Indicates that the vehicle meets the respective emission standard.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const meetsEmissionStandard = IriTerm.prevalidated(
    'http://schema.org/meetsEmissionStandard',
  );

  /// mileageFromOdometer [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\n\nTypical unit code(s): KMT for kilometers, SMI for statute miles.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const mileageFromOdometer = IriTerm.prevalidated(
    'http://schema.org/mileageFromOdometer',
  );

  /// mobileUrl [Expects: http://schema.org/Text]
  ///
  /// The {[mobileUrl]} property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
  ///
  /// To discourage over-use, and reflecting intial usecases, the property is expected only on {[Product]} and {[Offer]}, rather than {[Thing]}. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established {[url]} property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all {[url]} markup to use {[mobileUrl]} for more mobile-oriented pages. The property is intended for the case when items (primarily {[Product]} and {[Offer]}) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
  ///
  ///
  /// Can be used on: http://schema.org/Offer, http://schema.org/Product
  ///
  static const mobileUrl = IriTerm.prevalidated('http://schema.org/mobileUrl');

  /// model [Expects: http://schema.org/ProductModel, http://schema.org/Text]
  ///
  /// The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const model = IriTerm.prevalidated('http://schema.org/model');

  /// modelDate [Expects: http://schema.org/Date]
  ///
  /// The release date of a vehicle model (often used to differentiate versions of the same make and model).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const modelDate = IriTerm.prevalidated('http://schema.org/modelDate');

  /// mpn [Expects: http://schema.org/Text]
  ///
  /// The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const mpn = IriTerm.prevalidated('http://schema.org/mpn');

  /// name [Expects: http://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('http://schema.org/name');

  /// negativeNotes [Expects: http://schema.org/ItemList, http://schema.org/ListItem, http://schema.org/Text, http://schema.org/WebContent]
  ///
  /// Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside {[positiveNotes]}). For symmetry
  ///
  /// In the case of a {[Review]}, the property describes the {[itemReviewed]} from the perspective of the review; in the case of a {[Product]}, the product itself is being described. Since product descriptions
  /// tend to emphasise positive claims, it may be relatively unusual to find {[negativeNotes]} used in this way. Nevertheless for the sake of symmetry, {[negativeNotes]} can be used on {[Product]}.
  ///
  /// The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Review
  ///
  static const negativeNotes = IriTerm.prevalidated(
    'http://schema.org/negativeNotes',
  );

  /// nsn [Expects: http://schema.org/Text]
  ///
  /// Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a {[Product]}.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const nsn = IriTerm.prevalidated('http://schema.org/nsn');

  /// numberOfAirbags [Expects: http://schema.org/Number, http://schema.org/Text]
  ///
  /// The number or type of airbags in the vehicle.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const numberOfAirbags = IriTerm.prevalidated(
    'http://schema.org/numberOfAirbags',
  );

  /// numberOfAxles [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The number of axles.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const numberOfAxles = IriTerm.prevalidated(
    'http://schema.org/numberOfAxles',
  );

  /// numberOfDoors [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The number of doors.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const numberOfDoors = IriTerm.prevalidated(
    'http://schema.org/numberOfDoors',
  );

  /// numberOfForwardGears [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The total number of forward gears available for the transmission system of the vehicle.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const numberOfForwardGears = IriTerm.prevalidated(
    'http://schema.org/numberOfForwardGears',
  );

  /// numberOfPreviousOwners [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The number of owners of the vehicle, including the current one.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const numberOfPreviousOwners = IriTerm.prevalidated(
    'http://schema.org/numberOfPreviousOwners',
  );

  /// pattern [Expects: http://schema.org/DefinedTerm, http://schema.org/Text]
  ///
  /// A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Product
  ///
  static const pattern = IriTerm.prevalidated('http://schema.org/pattern');

  /// payload [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of {[weight]} and {[payload]}\n* Note 2: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 3: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 4: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const payload = IriTerm.prevalidated('http://schema.org/payload');

  /// positiveNotes [Expects: http://schema.org/ItemList, http://schema.org/ListItem, http://schema.org/Text, http://schema.org/WebContent]
  ///
  /// Provides positive considerations regarding something, for example product highlights or (alongside {[negativeNotes]}) pro/con lists for reviews.
  ///
  /// In the case of a {[Review]}, the property describes the {[itemReviewed]} from the perspective of the review; in the case of a {[Product]}, the product itself is being described.
  ///
  /// The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Review
  ///
  static const positiveNotes = IriTerm.prevalidated(
    'http://schema.org/positiveNotes',
  );

  /// potentialAction [Expects: http://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'http://schema.org/potentialAction',
  );

  /// productID [Expects: http://schema.org/Text]
  ///
  /// The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const productID = IriTerm.prevalidated('http://schema.org/productID');

  /// productionDate [Expects: http://schema.org/Date]
  ///
  /// The date of production of the item, e.g. vehicle.
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Vehicle
  ///
  static const productionDate = IriTerm.prevalidated(
    'http://schema.org/productionDate',
  );

  /// purchaseDate [Expects: http://schema.org/Date]
  ///
  /// The date the item, e.g. vehicle, was purchased by the current owner.
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/Vehicle
  ///
  static const purchaseDate = IriTerm.prevalidated(
    'http://schema.org/purchaseDate',
  );

  /// releaseDate [Expects: http://schema.org/Date]
  ///
  /// The release date of a product or product model. This can be used to distinguish the exact variant of a product.
  ///
  /// Can be used on: http://schema.org/Product
  ///
  static const releaseDate = IriTerm.prevalidated(
    'http://schema.org/releaseDate',
  );

  /// reviews [Expects: http://schema.org/Review]
  ///
  /// Review of the item.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Offer, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product
  ///
  static const reviews = IriTerm.prevalidated('http://schema.org/reviews');

  /// sameAs [Expects: http://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('http://schema.org/sameAs');

  /// seatingCapacity [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const seatingCapacity = IriTerm.prevalidated(
    'http://schema.org/seatingCapacity',
  );

  /// size [Expects: http://schema.org/DefinedTerm, http://schema.org/QuantitativeValue, http://schema.org/SizeSpecification, http://schema.org/Text]
  ///
  /// A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured {[SizeSpecification]}; in other cases, the {[width]}, {[height]}, {[depth]} and {[weight]} properties may be more applicable.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Product
  ///
  static const size = IriTerm.prevalidated('http://schema.org/size');

  /// sku [Expects: http://schema.org/Text]
  ///
  /// The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const sku = IriTerm.prevalidated('http://schema.org/sku');

  /// slogan [Expects: http://schema.org/Text]
  ///
  /// A slogan or motto associated with the item.
  ///
  /// Can be used on: http://schema.org/Brand, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product, http://schema.org/Service
  ///
  static const slogan = IriTerm.prevalidated('http://schema.org/slogan');

  /// speed [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by {[maxValue]}) should be the maximum speed achievable under regular conditions.\n\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\n\n*Note 1: Use {[minValue]} and {[maxValue]} to indicate the range. Typically, the minimal value is zero.\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the {[valueReference]} property.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const speed = IriTerm.prevalidated('http://schema.org/speed');

  /// steeringPosition [Expects: http://schema.org/SteeringPositionValue]
  ///
  /// The position of the steering wheel or similar device (mostly for cars).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const steeringPosition = IriTerm.prevalidated(
    'http://schema.org/steeringPosition',
  );

  /// tongueWeight [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const tongueWeight = IriTerm.prevalidated(
    'http://schema.org/tongueWeight',
  );

  /// trailerWeight [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The permitted weight of a trailer attached to the vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const trailerWeight = IriTerm.prevalidated(
    'http://schema.org/trailerWeight',
  );

  /// url [Expects: http://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('http://schema.org/url');

  /// vehicleConfiguration [Expects: http://schema.org/Text]
  ///
  /// A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleConfiguration = IriTerm.prevalidated(
    'http://schema.org/vehicleConfiguration',
  );

  /// vehicleEngine [Expects: http://schema.org/EngineSpecification]
  ///
  /// Information about the engine or engines of the vehicle.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleEngine = IriTerm.prevalidated(
    'http://schema.org/vehicleEngine',
  );

  /// vehicleIdentificationNumber [Expects: http://schema.org/Text]
  ///
  /// The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleIdentificationNumber = IriTerm.prevalidated(
    'http://schema.org/vehicleIdentificationNumber',
  );

  /// vehicleInteriorColor [Expects: http://schema.org/Text]
  ///
  /// The color or color combination of the interior of the vehicle.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleInteriorColor = IriTerm.prevalidated(
    'http://schema.org/vehicleInteriorColor',
  );

  /// vehicleInteriorType [Expects: http://schema.org/Text]
  ///
  /// The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleInteriorType = IriTerm.prevalidated(
    'http://schema.org/vehicleInteriorType',
  );

  /// vehicleModelDate [Expects: http://schema.org/Date]
  ///
  /// The release date of a vehicle model (often used to differentiate versions of the same make and model).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleModelDate = IriTerm.prevalidated(
    'http://schema.org/vehicleModelDate',
  );

  /// vehicleSeatingCapacity [Expects: http://schema.org/Number, http://schema.org/QuantitativeValue]
  ///
  /// The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleSeatingCapacity = IriTerm.prevalidated(
    'http://schema.org/vehicleSeatingCapacity',
  );

  /// vehicleSpecialUsage [Expects: http://schema.org/CarUsageType, http://schema.org/Text]
  ///
  /// Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleSpecialUsage = IriTerm.prevalidated(
    'http://schema.org/vehicleSpecialUsage',
  );

  /// vehicleTransmission [Expects: http://schema.org/QualitativeValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const vehicleTransmission = IriTerm.prevalidated(
    'http://schema.org/vehicleTransmission',
  );

  /// weight [Expects: http://schema.org/Mass, http://schema.org/QuantitativeValue]
  ///
  /// The weight of the product or person.
  ///
  /// Can be used on: http://schema.org/OfferShippingDetails, http://schema.org/Person, http://schema.org/Product, http://schema.org/ShippingConditions, http://schema.org/VisualArtwork
  ///
  static const weight = IriTerm.prevalidated('http://schema.org/weight');

  /// weightTotal [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const weightTotal = IriTerm.prevalidated(
    'http://schema.org/weightTotal',
  );

  /// wheelbase [Expects: http://schema.org/QuantitativeValue]
  ///
  /// The distance between the centers of the front and rear wheels.\n\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet.
  ///
  /// Can be used on: http://schema.org/Vehicle
  ///
  static const wheelbase = IriTerm.prevalidated('http://schema.org/wheelbase');

  /// width [Expects: http://schema.org/Distance, http://schema.org/QuantitativeValue]
  ///
  /// The width of the item.
  ///
  /// Can be used on: http://schema.org/MediaObject, http://schema.org/OfferShippingDetails, http://schema.org/Product, http://schema.org/ShippingConditions, http://schema.org/VisualArtwork
  ///
  static const width = IriTerm.prevalidated('http://schema.org/width');

  /// alternateName [Expects: http://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'http://schema.org/alternateName',
  );

  /// audience [Expects: http://schema.org/Audience]
  ///
  /// An intended audience, i.e. a group for whom something was created.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Event, http://schema.org/LodgingBusiness, http://schema.org/PlayAction, http://schema.org/Product, http://schema.org/Service
  ///
  static const audience = IriTerm.prevalidated('http://schema.org/audience');

  /// award [Expects: http://schema.org/Text]
  ///
  /// An award won by or for this item.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Organization, http://schema.org/Person, http://schema.org/Product, http://schema.org/Service
  ///
  static const award = IriTerm.prevalidated('http://schema.org/award');

  /// category [Expects: http://schema.org/CategoryCode, http://schema.org/PhysicalActivityCategory, http://schema.org/Text, http://schema.org/Thing, http://schema.org/URL]
  ///
  /// A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
  ///
  /// Can be used on: http://schema.org/ActionAccessSpecification, http://schema.org/Invoice, http://schema.org/Offer, http://schema.org/PhysicalActivity, http://schema.org/Product, http://schema.org/Recommendation, http://schema.org/Service, http://schema.org/SpecialAnnouncement
  ///
  static const category = IriTerm.prevalidated('http://schema.org/category');

  /// funding [Expects: http://schema.org/Grant]
  ///
  /// A {[Grant]} that directly or indirectly provide funding or sponsorship for this item. See also {[ownershipFundingInfo]}.
  ///
  /// Can be used on: http://schema.org/BioChemEntity, http://schema.org/CreativeWork, http://schema.org/Event, http://schema.org/MedicalEntity, http://schema.org/Organization, http://schema.org/Person, http://schema.org/Product
  ///
  static const funding = IriTerm.prevalidated('http://schema.org/funding');

  /// isVariantOf [Expects: http://schema.org/ProductGroup, http://schema.org/ProductModel]
  ///
  /// Indicates the kind of product that this is a variant of. In the case of {[ProductModel]}, this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a {[ProductGroup]}, the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with {[ProductGroup]}, this property can apply to any {[Product]} included in the group.
  ///
  /// Can be used on: http://schema.org/Product, http://schema.org/ProductModel
  ///
  static const isVariantOf = IriTerm.prevalidated(
    'http://schema.org/isVariantOf',
  );

  /// mainEntityOfPage [Expects: http://schema.org/CreativeWork, http://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'http://schema.org/mainEntityOfPage',
  );

  /// offers [Expects: http://schema.org/Demand, http://schema.org/Offer]
  ///
  /// An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use {[businessFunction]} to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a {[Demand]}. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
  ///
  ///
  /// Can be used on: http://schema.org/AggregateOffer, http://schema.org/CreativeWork, http://schema.org/EducationalOccupationalProgram, http://schema.org/Event, http://schema.org/MenuItem, http://schema.org/Product, http://schema.org/Service, http://schema.org/Trip
  ///
  static const offers = IriTerm.prevalidated('http://schema.org/offers');

  /// review [Expects: http://schema.org/Review]
  ///
  /// A review of the item.
  ///
  /// Can be used on: http://schema.org/Brand, http://schema.org/CreativeWork, http://schema.org/Event, http://schema.org/Offer, http://schema.org/Organization, http://schema.org/Place, http://schema.org/Product, http://schema.org/Service
  ///
  static const review = IriTerm.prevalidated('http://schema.org/review');

  /// subjectOf [Expects: http://schema.org/CreativeWork, http://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('http://schema.org/subjectOf');

  /// material [Expects: http://schema.org/Product, http://schema.org/Text, http://schema.org/URL]
  ///
  /// A material that something is made from, e.g. leather, wool, cotton, paper.
  ///
  /// Can be used on: http://schema.org/CreativeWork, http://schema.org/Product
  ///
  static const material = IriTerm.prevalidated('http://schema.org/material');

  /// description [Expects: http://schema.org/Text, http://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'http://schema.org/description',
  );

  /// gtin [Expects: http://schema.org/Text, http://schema.org/URL]
  ///
  /// A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
  ///
  /// A correct {[gtin]} value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The {[gtin]} property generalizes the earlier {[gtin8]}, {[gtin12]}, {[gtin13]}, and {[gtin14]} properties.
  ///
  /// The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) expresses GTINs as URLs (URIs, IRIs, etc.).
  /// Digital Links should be populated into the {[hasGS1DigitalLink]} attribute.
  ///
  /// Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
  ///
  /// Can be used on: http://schema.org/Demand, http://schema.org/Offer, http://schema.org/Product
  ///
  static const gtin = IriTerm.prevalidated('http://schema.org/gtin');

  /// image [Expects: http://schema.org/ImageObject, http://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('http://schema.org/image');

  /// identifier [Expects: http://schema.org/PropertyValue, http://schema.org/Text, http://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: http://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'http://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('http://schema.org/source');

  /// type from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// The subject is an instance of a class.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfType = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
  );

  /// value from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfValue = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#value',
  );

  /// comment from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A description of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsComment = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#comment',
  );

  /// label from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A human-readable name for the subject.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsLabel = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#label',
  );

  /// seeAlso from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Further information about the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsSeeAlso = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#seeAlso',
  );

  /// isDefinedBy from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The definition of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsIsDefinedBy = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#isDefinedBy',
  );

  /// member from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// A member of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsMember = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#member',
  );

  /// annotatedProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the predicate of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedProperty',
  );

  /// annotatedSource from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the subject of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedSource = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedSource',
  );

  /// annotatedTarget from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the object of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedTarget = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedTarget',
  );

  /// deprecated from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that indicates that a given entity has been deprecated.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlDeprecated = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#deprecated',
  );

  /// members from owl vocabulary [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#List]
  ///
  /// The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlMembers = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#members',
  );

  /// versionInfo from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that provides version information for an ontology or another OWL construct.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlVersionInfo = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#versionInfo',
  );

  /// abstract_ from bibo vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A summary of the resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const biboAbstract_ = IriTerm.prevalidated(
    'http://purl.org/ontology/bibo/abstract',
  );
}
