// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Universal Properties for the Vcard vocabulary
///
/// Universal properties are RDF properties that have no explicitly defined domain
/// and can therefore be applied to any resource within this vocabulary's context.
/// In RDF, when a property has no rdfs:domain constraint, it can theoretically be
/// used with any subject, but best practice is to use them only within
/// the intended vocabulary context.
///
/// This class collects all such properties from the Vcard vocabulary to make them
/// easily accessible without cluttering the class-specific property interfaces.
class VcardUniversalProperties {
  // Private constructor prevents instantiation
  const VcardUniversalProperties._();

  /// adr
  ///
  /// This object property has been mapped
  ///
  static const adr = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#adr',
  );

  /// agent
  ///
  /// This object property has been deprecated
  ///
  static const agent = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#agent',
  );

  /// email
  ///
  /// This object property has been mapped
  ///
  static const email = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#email',
  );

  /// geo
  ///
  /// This object property has been mapped
  ///
  static const geo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#geo',
  );

  /// hasAdditionalName
  ///
  /// Used to support property parameters for the additional name data property
  ///
  static const hasAdditionalName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasAdditionalName',
  );

  /// hasAddress [Expects: http://www.w3.org/2006/vcard/ns#Address]
  ///
  /// To specify the components of the delivery address for the object
  ///
  static const hasAddress = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasAddress',
  );

  /// hasCalendarBusy
  ///
  /// To specify the busy time associated with the object. (Was called FBURL in RFC6350)
  ///
  static const hasCalendarBusy = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarBusy',
  );

  /// hasCalendarLink
  ///
  /// To specify the calendar associated with the object. (Was called CALURI in RFC6350)
  ///
  static const hasCalendarLink = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarLink',
  );

  /// hasCalendarRequest
  ///
  /// To specify the calendar user address to which a scheduling request be sent for the object. (Was called CALADRURI in RFC6350)
  ///
  static const hasCalendarRequest = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarRequest',
  );

  /// hasCategory
  ///
  /// Used to support property parameters for the category data property
  ///
  static const hasCategory = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCategory',
  );

  /// hasCountryName
  ///
  /// Used to support property parameters for the country name data property
  ///
  static const hasCountryName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCountryName',
  );

  /// hasEmail [Expects: http://www.w3.org/2006/vcard/ns#Email]
  ///
  /// To specify the electronic mail address for communication with the object
  ///
  static const hasEmail = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasEmail',
  );

  /// hasFN
  ///
  /// Used to support property parameters for the formatted name data property
  ///
  static const hasFN = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasFN',
  );

  /// hasFamilyName
  ///
  /// Used to support property parameters for the family name data property
  ///
  static const hasFamilyName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasFamilyName',
  );

  /// hasGender
  ///
  /// To specify the sex or gender identity of the object. URIs are recommended to enable interoperable sex and gender codes to be used.
  ///
  static const hasGender = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGender',
  );

  /// hasGeo
  ///
  /// To specify information related to the global positioning of the object. May also be used as a property parameter.
  ///
  static const hasGeo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGeo',
  );

  /// hasGivenName
  ///
  /// Used to support property parameters for the given name data property
  ///
  static const hasGivenName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGivenName',
  );

  /// hasHonorificPrefix
  ///
  /// Used to support property parameters for the honorific prefix data property
  ///
  static const hasHonorificPrefix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasHonorificPrefix',
  );

  /// hasHonorificSuffix
  ///
  /// Used to support property parameters for the honorific suffix data property
  ///
  static const hasHonorificSuffix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasHonorificSuffix',
  );

  /// hasInstantMessage
  ///
  /// To specify the instant messaging and presence protocol communications with the object. (Was called IMPP in RFC6350)
  ///
  static const hasInstantMessage = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasInstantMessage',
  );

  /// hasKey
  ///
  /// To specify a public key or authentication certificate associated with the object
  ///
  static const hasKey = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasKey',
  );

  /// hasLanguage
  ///
  /// Used to support property parameters for the language data property
  ///
  static const hasLanguage = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLanguage',
  );

  /// hasLocality
  ///
  /// Used to support property parameters for the locality data property
  ///
  static const hasLocality = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLocality',
  );

  /// hasLogo
  ///
  /// To specify a graphic image of a logo associated with the object
  ///
  static const hasLogo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLogo',
  );

  /// hasName [Expects: http://www.w3.org/2006/vcard/ns#Name]
  ///
  /// To specify the components of the name of the object
  ///
  static const hasName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasName',
  );

  /// hasNickname
  ///
  /// Used to support property parameters for the nickname data property
  ///
  /// [See also](http://www.w3.org/2006/vcard/ns#nickname)
  ///
  static const hasNickname = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasNickname',
  );

  /// hasNote
  ///
  /// Used to support property parameters for the note data property
  ///
  static const hasNote = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasNote',
  );

  /// hasOrganizationName
  ///
  /// Used to support property parameters for the organization name data property
  ///
  static const hasOrganizationName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasOrganizationName',
  );

  /// hasOrganizationUnit
  ///
  /// Used to support property parameters for the organization unit name data property
  ///
  static const hasOrganizationUnit = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasOrganizationUnit',
  );

  /// hasPhoto
  ///
  /// To specify an image or photograph information that annotates some aspect of the object
  ///
  static const hasPhoto = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasPhoto',
  );

  /// hasPostalCode
  ///
  /// Used to support property parameters for the postal code data property
  ///
  static const hasPostalCode = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasPostalCode',
  );

  /// hasRegion
  ///
  /// Used to support property parameters for the region data property
  ///
  static const hasRegion = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRegion',
  );

  /// hasRelated
  ///
  /// To specify a relationship between another entity and the entity represented by this object
  ///
  static const hasRelated = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRelated',
  );

  /// hasRole
  ///
  /// Used to support property parameters for the role data property
  ///
  static const hasRole = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRole',
  );

  /// hasSound
  ///
  /// To specify a digital sound content information that annotates some aspect of the object
  ///
  static const hasSound = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasSound',
  );

  /// hasSource
  ///
  /// To identify the source of directory information of the object
  ///
  static const hasSource = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasSource',
  );

  /// hasStreetAddress
  ///
  /// Used to support property parameters for the street address data property
  ///
  static const hasStreetAddress = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasStreetAddress',
  );

  /// hasTelephone
  ///
  /// To specify the telephone number for telephony communication with the object
  ///
  static const hasTelephone = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasTelephone',
  );

  /// hasTitle
  ///
  /// Used to support property parameters for the title data property
  ///
  static const hasTitle = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasTitle',
  );

  /// hasUID
  ///
  /// To specify a value that represents a globally unique identifier corresponding to the object
  ///
  static const hasUID = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasUID',
  );

  /// hasURL
  ///
  /// To specify a uniform resource locator associated with the object
  ///
  static const hasURL = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasURL',
  );

  /// hasValue
  ///
  /// Used to indicate the resource value of an object property that requires property parameters
  ///
  static const hasValue = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasValue',
  );

  /// key
  ///
  /// This object property has been mapped
  ///
  static const key = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#key',
  );

  /// logo
  ///
  /// This object property has been mapped
  ///
  static const logo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#logo',
  );

  /// n
  ///
  /// This object property has been mapped
  ///
  static const n = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#n');

  /// org
  ///
  /// This object property has been mapped. Use the organization-name data property.
  ///
  static const org = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#org',
  );

  /// photo
  ///
  /// This object property has been mapped
  ///
  static const photo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#photo',
  );

  /// sound
  ///
  /// This object property has been mapped
  ///
  static const sound = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#sound',
  );

  /// tel
  ///
  /// This object property has been mapped
  ///
  static const tel = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#tel',
  );

  /// url
  ///
  /// This object property has been mapped
  ///
  static const url = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#url',
  );

  /// additional_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The additional name associated with the object
  ///
  static const additional_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#additional-name',
  );

  /// anniversary
  ///
  /// The date of marriage, or equivalent, of the object
  ///
  static const anniversary = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#anniversary',
  );

  /// bday
  ///
  /// To specify the birth date of the object
  ///
  static const bday = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#bday',
  );

  /// category [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The category information about the object, also known as tags
  ///
  static const category = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#category',
  );

  /// class_
  ///
  /// This data property has been deprecated
  ///
  static const class_ = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#class',
  );

  /// country_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The country name associated with the address of the object
  ///
  static const country_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#country-name',
  );

  /// extended_address
  ///
  /// This data property has been deprecated
  ///
  static const extended_address = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#extended-address',
  );

  /// family_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The family name associated with the object
  ///
  static const family_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#family-name',
  );

  /// fn [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The formatted text corresponding to the name of the object
  ///
  static const fn = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#fn');

  /// given_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The given name associated with the object
  ///
  static const given_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#given-name',
  );

  /// honorific_prefix [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The honorific prefix of the name associated with the object
  ///
  static const honorific_prefix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#honorific-prefix',
  );

  /// honorific_suffix [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The honorific suffix of the name associated with the object
  ///
  static const honorific_suffix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#honorific-suffix',
  );

  /// label
  ///
  /// This data property has been deprecated
  ///
  static const label = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#label',
  );

  /// language
  ///
  /// To specify the language that may be used for contacting the object. May also be used as a property parameter.
  ///
  static const language = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#language',
  );

  /// latitude
  ///
  /// This data property has been deprecated. See hasGeo
  ///
  static const latitude = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#latitude',
  );

  /// locality [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The locality (e.g. city or town) associated with the address of the object
  ///
  static const locality = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#locality',
  );

  /// longitude
  ///
  /// This data property has been deprecated. See hasGeo
  ///
  static const longitude = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#longitude',
  );

  /// mailer
  ///
  /// This data property has been deprecated
  ///
  static const mailer = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#mailer',
  );

  /// nickname [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The nick name associated with the object
  ///
  static const nickname = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#nickname',
  );

  /// note [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// A note associated with the object
  ///
  static const note = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#note',
  );

  /// organization_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the organizational name associated with the object
  ///
  static const organization_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#organization-name',
  );

  /// organization_unit [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the organizational unit name associated with the object
  ///
  static const organization_unit = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#organization-unit',
  );

  /// post_office_box
  ///
  /// This data property has been deprecated
  ///
  static const post_office_box = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#post-office-box',
  );

  /// postal_code [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The postal code associated with the address of the object
  ///
  static const postal_code = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#postal-code',
  );

  /// prodid [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the identifier for the product that created the object
  ///
  static const prodid = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#prodid',
  );

  /// region [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The region (e.g. state or province) associated with the address of the object
  ///
  static const region = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#region',
  );

  /// rev [Expects: http://www.w3.org/2001/XMLSchema#dateTime]
  ///
  /// To specify revision information about the object
  ///
  static const rev = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#rev',
  );

  /// role [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the function or part played in a particular situation by the object
  ///
  static const role = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#role',
  );

  /// sort_string [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the string to be used for national-language-specific sorting. Used as a property parameter only.
  ///
  static const sort_string = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#sort-string',
  );

  /// street_address [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The street address associated with the address of the object
  ///
  static const street_address = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#street-address',
  );

  /// title [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the position or job of the object
  ///
  static const title = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#title',
  );

  /// tz [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To indicate time zone information that is specific to the object. May also be used as a property parameter.
  ///
  static const tz = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#tz');

  /// value
  ///
  /// Used to indicate the literal value of a data property that requires property parameters
  ///
  static const value = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#value',
  );
}
