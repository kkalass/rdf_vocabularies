// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Main Vcard vocabulary class containing all terms
///
/// Contains all terms defined in the http://www.w3.org/2006/vcard/ns# vocabulary.
class Vcard {
  // Private constructor prevents instantiation
  const Vcard._();

  /// Base IRI for Vcard vocabulary
  /// [Spec](http://www.w3.org/2006/vcard/ns#)
  static const String namespace = 'http://www.w3.org/2006/vcard/ns#';
  static const String prefix = 'vcard';

  /// IRI for vcard:Acquaintance
  ///
  ///
  ///
  static const Acquaintance = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Acquaintance',
  );

  /// IRI for vcard:Address
  ///
  /// To specify the components of the delivery address for the object
  ///
  static const Address = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Address',
  );

  /// IRI for vcard:Agent
  ///
  ///
  ///
  static const Agent = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Agent',
  );

  /// IRI for vcard:BBS
  ///
  /// This class is deprecated
  ///
  static const BBS = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#BBS',
  );

  /// IRI for vcard:Car
  ///
  /// This class is deprecated
  ///
  static const Car = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Car',
  );

  /// IRI for vcard:Cell
  ///
  /// Also called mobile telephone
  ///
  static const Cell = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Cell',
  );

  /// IRI for vcard:Child
  ///
  ///
  ///
  static const Child = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Child',
  );

  /// IRI for vcard:Colleague
  ///
  ///
  ///
  static const Colleague = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Colleague',
  );

  /// IRI for vcard:Contact
  ///
  ///
  ///
  static const Contact = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Contact',
  );

  /// IRI for vcard:Coresident
  ///
  ///
  ///
  static const Coresident = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Coresident',
  );

  /// IRI for vcard:Coworker
  ///
  ///
  ///
  static const Coworker = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Coworker',
  );

  /// IRI for vcard:Crush
  ///
  ///
  ///
  static const Crush = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Crush',
  );

  /// IRI for vcard:Date
  ///
  ///
  ///
  static const Date = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Date',
  );

  /// IRI for vcard:Dom
  ///
  /// This class is deprecated
  ///
  static const Dom = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Dom',
  );

  /// IRI for vcard:Email
  ///
  /// To specify the electronic mail address for communication with the object the vCard represents. Use the hasEmail object property.
  ///
  static const Email = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Email',
  );

  /// IRI for vcard:Emergency
  ///
  ///
  ///
  static const Emergency = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Emergency',
  );

  /// IRI for vcard:Fax
  ///
  ///
  ///
  static const Fax = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Fax',
  );

  /// IRI for vcard:Female
  ///
  ///
  ///
  static const Female = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Female',
  );

  /// IRI for vcard:Friend
  ///
  ///
  ///
  static const Friend = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Friend',
  );

  /// IRI for vcard:Gender
  ///
  /// Used for gender codes. The URI of the gender code must be used as the value for Gender.
  ///
  static const Gender = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Gender',
  );

  /// IRI for vcard:Group
  ///
  /// Object representing a group of persons or entities. A group object will usually contain hasMember properties to specify the members of the group.
  ///
  static const Group = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Group',
  );

  /// IRI for vcard:Home
  ///
  /// This implies that the property is related to an individual's personal life
  ///
  static const Home = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Home',
  );

  /// IRI for vcard:ISDN
  ///
  /// This class is deprecated
  ///
  static const ISDN = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#ISDN',
  );

  /// IRI for vcard:Individual
  ///
  /// An object representing a single person or entity
  ///
  static const Individual = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Individual',
  );

  /// IRI for vcard:Internet
  ///
  /// This class is deprecated
  ///
  static const Internet = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Internet',
  );

  /// IRI for vcard:Intl
  ///
  /// This class is deprecated
  ///
  static const Intl = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Intl',
  );

  /// IRI for vcard:Kin
  ///
  ///
  ///
  static const Kin = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Kin',
  );

  /// IRI for vcard:Kind
  ///
  /// The parent class for all objects
  ///
  static const Kind = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Kind',
  );

  /// IRI for vcard:Label
  ///
  /// This class is deprecated
  ///
  static const Label = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Label',
  );

  /// IRI for vcard:Location
  ///
  /// An object representing a named geographical place
  ///
  static const Location = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Location',
  );

  /// IRI for vcard:Male
  ///
  ///
  ///
  static const Male = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Male',
  );

  /// IRI for vcard:Me
  ///
  ///
  ///
  static const Me = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#Me');

  /// IRI for vcard:Met
  ///
  ///
  ///
  static const Met = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Met',
  );

  /// IRI for vcard:Modem
  ///
  /// This class is deprecated
  ///
  static const Modem = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Modem',
  );

  /// IRI for vcard:Msg
  ///
  /// This class is deprecated
  ///
  static const Msg = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Msg',
  );

  /// IRI for vcard:Muse
  ///
  ///
  ///
  static const Muse = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Muse',
  );

  /// IRI for vcard:Name
  ///
  /// To specify the components of the name of the object
  ///
  static const Name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Name',
  );

  /// IRI for vcard:Neighbor
  ///
  ///
  ///
  static const Neighbor = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Neighbor',
  );

  /// IRI for vcard:None
  ///
  ///
  ///
  static const None = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#None',
  );

  /// IRI for vcard:Organization
  ///
  /// An object representing an organization. An organization is a single entity, and might represent a business or government, a department or division within a business or government, a club, an association, or the like.
  ///
  static const Organization = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Organization',
  );

  /// IRI for vcard:Other
  ///
  ///
  ///
  static const Other = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Other',
  );

  /// IRI for vcard:PCS
  ///
  /// This class is deprecated
  ///
  static const PCS = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#PCS',
  );

  /// IRI for vcard:Pager
  ///
  ///
  ///
  static const Pager = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Pager',
  );

  /// IRI for vcard:Parcel
  ///
  /// This class is deprecated
  ///
  static const Parcel = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Parcel',
  );

  /// IRI for vcard:Parent
  ///
  ///
  ///
  static const Parent = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Parent',
  );

  /// IRI for vcard:Postal
  ///
  /// This class is deprecated
  ///
  static const Postal = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Postal',
  );

  /// IRI for vcard:Pref
  ///
  /// This class is deprecated
  ///
  static const Pref = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Pref',
  );

  /// IRI for vcard:RelatedType
  ///
  /// Used for relation type codes. The URI of the relation type code must be used as the value for the Relation Type.
  ///
  static const RelatedType = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#RelatedType',
  );

  /// IRI for vcard:Sibling
  ///
  ///
  ///
  static const Sibling = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Sibling',
  );

  /// IRI for vcard:Spouse
  ///
  ///
  ///
  static const Spouse = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Spouse',
  );

  /// IRI for vcard:Sweetheart
  ///
  ///
  ///
  static const Sweetheart = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Sweetheart',
  );

  /// IRI for vcard:Tel
  ///
  /// This class is deprecated. Use the hasTelephone object property.
  ///
  static const Tel = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Tel',
  );

  /// IRI for vcard:TelephoneType
  ///
  /// Used for telephone type codes. The URI of the telephone type code must be used as the value for the Telephone Type.
  ///
  static const TelephoneType = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#TelephoneType',
  );

  /// IRI for vcard:Text
  ///
  /// Also called sms telephone
  ///
  static const Text = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Text',
  );

  /// IRI for vcard:TextPhone
  ///
  ///
  ///
  static const TextPhone = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#TextPhone',
  );

  /// IRI for vcard:Type
  ///
  /// Used for type codes. The URI of the type code must be used as the value for Type.
  ///
  static const Type = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Type',
  );

  /// IRI for vcard:Unknown
  ///
  ///
  ///
  static const Unknown = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Unknown',
  );

  /// IRI for vcard:VCard
  ///
  /// The vCard class is equivalent to the new Kind class, which is the parent for the four explicit types of vCards (Individual, Organization, Location, Group)
  ///
  static const VCard = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#VCard',
  );

  /// IRI for vcard:Video
  ///
  ///
  ///
  static const Video = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Video',
  );

  /// IRI for vcard:Voice
  ///
  ///
  ///
  static const Voice = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Voice',
  );

  /// IRI for vcard:Work
  ///
  /// This implies that the property is related to an individual's work place
  ///
  static const Work = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#Work',
  );

  /// IRI for vcard:X400
  ///
  /// This class is deprecated
  ///
  static const X400 = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#X400',
  );

  /// IRI for vcard:AddressBook
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const AddressBook = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#AddressBook',
  );

  /// IRI for vcard:groupIndex
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const groupIndex = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#groupIndex',
  );

  /// IRI for vcard:includesGroup
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const includesGroup = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#includesGroup',
  );

  /// IRI for vcard:nameEmailIndex
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const nameEmailIndex = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#nameEmailIndex',
  );

  /// IRI for vcard:inAddressBook
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const inAddressBook = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#inAddressBook',
  );

  /// IRI for vcard:WebID
  ///
  /// This term is not part of vCard as defined by the IETF
  ///
  static const WebID = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#WebID',
  );

  /// IRI for vcard:adr
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const adr = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#adr',
  );

  /// IRI for vcard:agent
  ///
  /// This object property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const agent = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#agent',
  );

  /// IRI for vcard:email
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const email = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#email',
  );

  /// IRI for vcard:geo
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const geo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#geo',
  );

  /// IRI for vcard:hasAdditionalName
  ///
  /// Used to support property parameters for the additional name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasAdditionalName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasAdditionalName',
  );

  /// IRI for vcard:hasAddress [Expects: http://www.w3.org/2006/vcard/ns#Address]
  ///
  /// To specify the components of the delivery address for the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasAddress = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasAddress',
  );

  /// IRI for vcard:hasCalendarBusy
  ///
  /// To specify the busy time associated with the object. (Was called FBURL in RFC6350)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasCalendarBusy = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarBusy',
  );

  /// IRI for vcard:hasCalendarLink
  ///
  /// To specify the calendar associated with the object. (Was called CALURI in RFC6350)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasCalendarLink = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarLink',
  );

  /// IRI for vcard:hasCalendarRequest
  ///
  /// To specify the calendar user address to which a scheduling request be sent for the object. (Was called CALADRURI in RFC6350)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasCalendarRequest = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCalendarRequest',
  );

  /// IRI for vcard:hasCategory
  ///
  /// Used to support property parameters for the category data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasCategory = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCategory',
  );

  /// IRI for vcard:hasCountryName
  ///
  /// Used to support property parameters for the country name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasCountryName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasCountryName',
  );

  /// IRI for vcard:hasEmail [Expects: http://www.w3.org/2006/vcard/ns#Email]
  ///
  /// To specify the electronic mail address for communication with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasEmail = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasEmail',
  );

  /// IRI for vcard:hasFN
  ///
  /// Used to support property parameters for the formatted name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasFN = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasFN',
  );

  /// IRI for vcard:hasFamilyName
  ///
  /// Used to support property parameters for the family name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasFamilyName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasFamilyName',
  );

  /// IRI for vcard:hasGender
  ///
  /// To specify the sex or gender identity of the object. URIs are recommended to enable interoperable sex and gender codes to be used.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasGender = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGender',
  );

  /// IRI for vcard:hasGeo
  ///
  /// To specify information related to the global positioning of the object. May also be used as a property parameter.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasGeo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGeo',
  );

  /// IRI for vcard:hasGivenName
  ///
  /// Used to support property parameters for the given name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasGivenName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasGivenName',
  );

  /// IRI for vcard:hasHonorificPrefix
  ///
  /// Used to support property parameters for the honorific prefix data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasHonorificPrefix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasHonorificPrefix',
  );

  /// IRI for vcard:hasHonorificSuffix
  ///
  /// Used to support property parameters for the honorific suffix data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasHonorificSuffix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasHonorificSuffix',
  );

  /// IRI for vcard:hasInstantMessage
  ///
  /// To specify the instant messaging and presence protocol communications with the object. (Was called IMPP in RFC6350)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasInstantMessage = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasInstantMessage',
  );

  /// IRI for vcard:hasKey
  ///
  /// To specify a public key or authentication certificate associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasKey = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasKey',
  );

  /// IRI for vcard:hasLanguage
  ///
  /// Used to support property parameters for the language data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasLanguage = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLanguage',
  );

  /// IRI for vcard:hasLocality
  ///
  /// Used to support property parameters for the locality data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasLocality = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLocality',
  );

  /// IRI for vcard:hasLogo
  ///
  /// To specify a graphic image of a logo associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasLogo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasLogo',
  );

  /// IRI for vcard:hasMember [Expects: http://www.w3.org/2006/vcard/ns#Kind]
  ///
  /// To include a member in the group this object represents. (This property can only be used by Group individuals)
  ///
  /// Can be used on: http://www.w3.org/2006/vcard/ns#Group
  ///
  static const hasMember = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasMember',
  );

  /// IRI for vcard:hasName [Expects: http://www.w3.org/2006/vcard/ns#Name]
  ///
  /// To specify the components of the name of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasName',
  );

  /// IRI for vcard:hasNickname
  ///
  /// Used to support property parameters for the nickname data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  /// [See also](http://www.w3.org/2006/vcard/ns#nickname)
  ///
  static const hasNickname = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasNickname',
  );

  /// IRI for vcard:hasNote
  ///
  /// Used to support property parameters for the note data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasNote = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasNote',
  );

  /// IRI for vcard:hasOrganizationName
  ///
  /// Used to support property parameters for the organization name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasOrganizationName = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasOrganizationName',
  );

  /// IRI for vcard:hasOrganizationUnit
  ///
  /// Used to support property parameters for the organization unit name data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasOrganizationUnit = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasOrganizationUnit',
  );

  /// IRI for vcard:hasPhoto
  ///
  /// To specify an image or photograph information that annotates some aspect of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasPhoto = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasPhoto',
  );

  /// IRI for vcard:hasPostalCode
  ///
  /// Used to support property parameters for the postal code data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasPostalCode = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasPostalCode',
  );

  /// IRI for vcard:hasRegion
  ///
  /// Used to support property parameters for the region data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasRegion = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRegion',
  );

  /// IRI for vcard:hasRelated
  ///
  /// To specify a relationship between another entity and the entity represented by this object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasRelated = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRelated',
  );

  /// IRI for vcard:hasRole
  ///
  /// Used to support property parameters for the role data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasRole = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasRole',
  );

  /// IRI for vcard:hasSound
  ///
  /// To specify a digital sound content information that annotates some aspect of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasSound = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasSound',
  );

  /// IRI for vcard:hasSource
  ///
  /// To identify the source of directory information of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasSource = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasSource',
  );

  /// IRI for vcard:hasStreetAddress
  ///
  /// Used to support property parameters for the street address data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasStreetAddress = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasStreetAddress',
  );

  /// IRI for vcard:hasTelephone
  ///
  /// To specify the telephone number for telephony communication with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasTelephone = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasTelephone',
  );

  /// IRI for vcard:hasTitle
  ///
  /// Used to support property parameters for the title data property
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasTitle = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasTitle',
  );

  /// IRI for vcard:hasUID
  ///
  /// To specify a value that represents a globally unique identifier corresponding to the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasUID = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasUID',
  );

  /// IRI for vcard:hasURL
  ///
  /// To specify a uniform resource locator associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasURL = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasURL',
  );

  /// IRI for vcard:hasValue
  ///
  /// Used to indicate the resource value of an object property that requires property parameters
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hasValue = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#hasValue',
  );

  /// IRI for vcard:key
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const key = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#key',
  );

  /// IRI for vcard:logo
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const logo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#logo',
  );

  /// IRI for vcard:n
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const n = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#n');

  /// IRI for vcard:org
  ///
  /// This object property has been mapped. Use the organization-name data property.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const org = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#org',
  );

  /// IRI for vcard:photo
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const photo = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#photo',
  );

  /// IRI for vcard:sound
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const sound = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#sound',
  );

  /// IRI for vcard:tel
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const tel = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#tel',
  );

  /// IRI for vcard:url
  ///
  /// This object property has been mapped
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const url = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#url',
  );

  /// IRI for vcard:additional_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The additional name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const additional_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#additional-name',
  );

  /// IRI for vcard:anniversary
  ///
  /// The date of marriage, or equivalent, of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const anniversary = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#anniversary',
  );

  /// IRI for vcard:bday
  ///
  /// To specify the birth date of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const bday = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#bday',
  );

  /// IRI for vcard:category [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The category information about the object, also known as tags
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const category = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#category',
  );

  /// IRI for vcard:class_
  ///
  /// This data property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const class_ = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#class',
  );

  /// IRI for vcard:country_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The country name associated with the address of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const country_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#country-name',
  );

  /// IRI for vcard:extended_address
  ///
  /// This data property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const extended_address = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#extended-address',
  );

  /// IRI for vcard:family_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The family name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const family_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#family-name',
  );

  /// IRI for vcard:fn [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The formatted text corresponding to the name of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const fn = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#fn');

  /// IRI for vcard:given_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The given name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const given_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#given-name',
  );

  /// IRI for vcard:honorific_prefix [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The honorific prefix of the name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const honorific_prefix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#honorific-prefix',
  );

  /// IRI for vcard:honorific_suffix [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The honorific suffix of the name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const honorific_suffix = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#honorific-suffix',
  );

  /// IRI for vcard:label
  ///
  /// This data property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const label = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#label',
  );

  /// IRI for vcard:language
  ///
  /// To specify the language that may be used for contacting the object. May also be used as a property parameter.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const language = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#language',
  );

  /// IRI for vcard:latitude
  ///
  /// This data property has been deprecated. See hasGeo
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const latitude = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#latitude',
  );

  /// IRI for vcard:locality [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The locality (e.g. city or town) associated with the address of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const locality = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#locality',
  );

  /// IRI for vcard:longitude
  ///
  /// This data property has been deprecated. See hasGeo
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const longitude = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#longitude',
  );

  /// IRI for vcard:mailer
  ///
  /// This data property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const mailer = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#mailer',
  );

  /// IRI for vcard:nickname [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The nick name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const nickname = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#nickname',
  );

  /// IRI for vcard:note [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// A note associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const note = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#note',
  );

  /// IRI for vcard:organization_name [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the organizational name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const organization_name = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#organization-name',
  );

  /// IRI for vcard:organization_unit [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the organizational unit name associated with the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const organization_unit = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#organization-unit',
  );

  /// IRI for vcard:post_office_box
  ///
  /// This data property has been deprecated
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const post_office_box = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#post-office-box',
  );

  /// IRI for vcard:postal_code [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The postal code associated with the address of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const postal_code = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#postal-code',
  );

  /// IRI for vcard:prodid [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the identifier for the product that created the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const prodid = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#prodid',
  );

  /// IRI for vcard:region [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The region (e.g. state or province) associated with the address of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const region = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#region',
  );

  /// IRI for vcard:rev [Expects: http://www.w3.org/2001/XMLSchema#dateTime]
  ///
  /// To specify revision information about the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const rev = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#rev',
  );

  /// IRI for vcard:role [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the function or part played in a particular situation by the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const role = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#role',
  );

  /// IRI for vcard:sort_string [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the string to be used for national-language-specific sorting. Used as a property parameter only.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const sort_string = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#sort-string',
  );

  /// IRI for vcard:street_address [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// The street address associated with the address of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const street_address = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#street-address',
  );

  /// IRI for vcard:title [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To specify the position or job of the object
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const title = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#title',
  );

  /// IRI for vcard:tz [Expects: http://www.w3.org/2001/XMLSchema#string]
  ///
  /// To indicate time zone information that is specific to the object. May also be used as a property parameter.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const tz = IriTerm.prevalidated('http://www.w3.org/2006/vcard/ns#tz');

  /// IRI for vcard:value
  ///
  /// Used to indicate the literal value of a data property that requires property parameters
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const value = IriTerm.prevalidated(
    'http://www.w3.org/2006/vcard/ns#value',
  );
}
