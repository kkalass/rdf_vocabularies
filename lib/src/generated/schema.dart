// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Main Schema vocabulary class containing all terms
///
/// Contains all terms defined in the https://schema.org/ vocabulary.
class Schema {
  // Private constructor prevents instantiation
  const Schema._();

  /// Base IRI for Schema vocabulary
  /// [Spec](https://schema.org/)
  static const String namespace = 'https://schema.org/';
  static const String prefix = 'schema';

  /// IRI for schema:n3DModel
  ///
  /// A 3D model represents some kind of 3D content, which may have {[encoding]}s in one or more {[MediaObject]}s. Many 3D formats are available (e.g. see [Wikipedia](https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats)); specific encoding formats can be represented using the {[encodingFormat]} property applied to the relevant {[MediaObject]}. For the
  /// case of a single file published after Zip compression, the convention of appending '+zip' to the {[encodingFormat]} can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using {[3DModel]}.
  ///
  static const n3DModel = IriTerm.prevalidated('https://schema.org/3DModel');

  /// IRI for schema:AMRadioChannel
  ///
  /// A radio channel that uses AM.
  ///
  static const AMRadioChannel = IriTerm.prevalidated(
    'https://schema.org/AMRadioChannel',
  );

  /// IRI for schema:APIReference
  ///
  /// Reference documentation for application programming interfaces (APIs).
  ///
  static const APIReference = IriTerm.prevalidated(
    'https://schema.org/APIReference',
  );

  /// IRI for schema:AboutPage
  ///
  /// Web page type: About page.
  ///
  static const AboutPage = IriTerm.prevalidated('https://schema.org/AboutPage');

  /// IRI for schema:AcceptAction
  ///
  /// The act of committing to/adopting an object.\n\nRelated actions:\n\n* {[RejectAction]}: The antonym of AcceptAction.
  ///
  static const AcceptAction = IriTerm.prevalidated(
    'https://schema.org/AcceptAction',
  );

  /// IRI for schema:Accommodation
  ///
  /// An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
  /// For more specific types of accommodations not defined in schema.org, one can use {[additionalType]} with external vocabularies.
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Accommodation = IriTerm.prevalidated(
    'https://schema.org/Accommodation',
  );

  /// IRI for schema:AccountingService
  ///
  /// Accountancy business.\n\nAs a {[LocalBusiness]} it can be described as a {[provider]} of one or more {[Service]}\(s).
  ///
  ///
  static const AccountingService = IriTerm.prevalidated(
    'https://schema.org/AccountingService',
  );

  /// IRI for schema:AchieveAction
  ///
  /// The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.
  ///
  static const AchieveAction = IriTerm.prevalidated(
    'https://schema.org/AchieveAction',
  );

  /// IRI for schema:Action
  ///
  /// An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\n\nSee also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) and [Actions overview document](https://schema.org/docs/actions.html).
  ///
  static const Action = IriTerm.prevalidated('https://schema.org/Action');

  /// IRI for schema:ActionAccessSpecification
  ///
  /// A set of requirements that must be fulfilled in order to perform an Action.
  ///
  static const ActionAccessSpecification = IriTerm.prevalidated(
    'https://schema.org/ActionAccessSpecification',
  );

  /// IRI for schema:ActionStatusType
  ///
  /// The status of an Action.
  ///
  static const ActionStatusType = IriTerm.prevalidated(
    'https://schema.org/ActionStatusType',
  );

  /// IRI for schema:ActivateAction
  ///
  /// The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).
  ///
  static const ActivateAction = IriTerm.prevalidated(
    'https://schema.org/ActivateAction',
  );

  /// IRI for schema:AddAction
  ///
  /// The act of editing by adding an object to a collection.
  ///
  static const AddAction = IriTerm.prevalidated('https://schema.org/AddAction');

  /// IRI for schema:AdministrativeArea
  ///
  /// A geographical region, typically under the jurisdiction of a particular government.
  ///
  static const AdministrativeArea = IriTerm.prevalidated(
    'https://schema.org/AdministrativeArea',
  );

  /// IRI for schema:AdultEntertainment
  ///
  /// An adult entertainment establishment.
  ///
  static const AdultEntertainment = IriTerm.prevalidated(
    'https://schema.org/AdultEntertainment',
  );

  /// IRI for schema:AdultOrientedEnumeration
  ///
  /// Enumeration of considerations that make a product relevant or potentially restricted for adults only.
  ///
  static const AdultOrientedEnumeration = IriTerm.prevalidated(
    'https://schema.org/AdultOrientedEnumeration',
  );

  /// IRI for schema:AdvertiserContentArticle
  ///
  /// An {[Article]} that an external entity has paid to place or to produce to its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), sponsored content, native advertising and other paid content.
  ///
  static const AdvertiserContentArticle = IriTerm.prevalidated(
    'https://schema.org/AdvertiserContentArticle',
  );

  /// IRI for schema:AggregateOffer
  ///
  /// When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\n\nNote: AggregateOffers are normally expected to associate multiple offers that all share the same defined {[businessFunction]} value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined.
  ///
  static const AggregateOffer = IriTerm.prevalidated(
    'https://schema.org/AggregateOffer',
  );

  /// IRI for schema:AggregateRating
  ///
  /// The average rating based on multiple ratings or reviews.
  ///
  static const AggregateRating = IriTerm.prevalidated(
    'https://schema.org/AggregateRating',
  );

  /// IRI for schema:AgreeAction
  ///
  /// The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
  ///
  static const AgreeAction = IriTerm.prevalidated(
    'https://schema.org/AgreeAction',
  );

  /// IRI for schema:Airline
  ///
  /// An organization that provides flights for passengers.
  ///
  static const Airline = IriTerm.prevalidated('https://schema.org/Airline');

  /// IRI for schema:Airport
  ///
  /// An airport.
  ///
  static const Airport = IriTerm.prevalidated('https://schema.org/Airport');

  /// IRI for schema:AlignmentObject
  ///
  /// An intangible item that describes an alignment between a learning resource and a node in an educational framework.
  ///
  /// Should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource {[teaches]} or {[assesses]} a competency.
  ///
  static const AlignmentObject = IriTerm.prevalidated(
    'https://schema.org/AlignmentObject',
  );

  /// IRI for schema:AllocateAction
  ///
  /// The act of organizing tasks/objects/events by associating resources to it.
  ///
  static const AllocateAction = IriTerm.prevalidated(
    'https://schema.org/AllocateAction',
  );

  /// IRI for schema:AmpStory
  ///
  /// A creative work with a visual storytelling format intended to be viewed online, particularly on mobile devices.
  ///
  static const AmpStory = IriTerm.prevalidated('https://schema.org/AmpStory');

  /// IRI for schema:AmusementPark
  ///
  /// An amusement park.
  ///
  static const AmusementPark = IriTerm.prevalidated(
    'https://schema.org/AmusementPark',
  );

  /// IRI for schema:AnalysisNewsArticle
  ///
  /// An AnalysisNewsArticle is a {[NewsArticle]} that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.
  ///
  static const AnalysisNewsArticle = IriTerm.prevalidated(
    'https://schema.org/AnalysisNewsArticle',
  );

  /// IRI for schema:AnatomicalStructure
  ///
  /// Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.
  ///
  static const AnatomicalStructure = IriTerm.prevalidated(
    'https://schema.org/AnatomicalStructure',
  );

  /// IRI for schema:AnatomicalSystem
  ///
  /// An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can include circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.
  ///
  static const AnatomicalSystem = IriTerm.prevalidated(
    'https://schema.org/AnatomicalSystem',
  );

  /// IRI for schema:AnimalShelter
  ///
  /// Animal shelter.
  ///
  static const AnimalShelter = IriTerm.prevalidated(
    'https://schema.org/AnimalShelter',
  );

  /// IRI for schema:Answer
  ///
  /// An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
  ///
  static const Answer = IriTerm.prevalidated('https://schema.org/Answer');

  /// IRI for schema:Apartment
  ///
  /// An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
  ///
  static const Apartment = IriTerm.prevalidated('https://schema.org/Apartment');

  /// IRI for schema:ApartmentComplex
  ///
  /// Residence type: Apartment complex.
  ///
  static const ApartmentComplex = IriTerm.prevalidated(
    'https://schema.org/ApartmentComplex',
  );

  /// IRI for schema:AppendAction
  ///
  /// The act of inserting at the end if an ordered collection.
  ///
  static const AppendAction = IriTerm.prevalidated(
    'https://schema.org/AppendAction',
  );

  /// IRI for schema:ApplyAction
  ///
  /// The act of registering to an organization/service without the guarantee to receive it.\n\nRelated actions:\n\n* {[RegisterAction]}: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.
  ///
  static const ApplyAction = IriTerm.prevalidated(
    'https://schema.org/ApplyAction',
  );

  /// IRI for schema:ApprovedIndication
  ///
  /// An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.
  ///
  static const ApprovedIndication = IriTerm.prevalidated(
    'https://schema.org/ApprovedIndication',
  );

  /// IRI for schema:Aquarium
  ///
  /// Aquarium.
  ///
  static const Aquarium = IriTerm.prevalidated('https://schema.org/Aquarium');

  /// IRI for schema:ArchiveComponent
  ///
  /// An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections.
  ///
  static const ArchiveComponent = IriTerm.prevalidated(
    'https://schema.org/ArchiveComponent',
  );

  /// IRI for schema:ArchiveOrganization
  ///
  /// An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public.
  ///
  static const ArchiveOrganization = IriTerm.prevalidated(
    'https://schema.org/ArchiveOrganization',
  );

  /// IRI for schema:ArriveAction
  ///
  /// The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.
  ///
  static const ArriveAction = IriTerm.prevalidated(
    'https://schema.org/ArriveAction',
  );

  /// IRI for schema:ArtGallery
  ///
  /// An art gallery.
  ///
  static const ArtGallery = IriTerm.prevalidated(
    'https://schema.org/ArtGallery',
  );

  /// IRI for schema:Artery
  ///
  /// A type of blood vessel that specifically carries blood away from the heart.
  ///
  static const Artery = IriTerm.prevalidated('https://schema.org/Artery');

  /// IRI for schema:Article
  ///
  /// An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
  ///
  static const Article = IriTerm.prevalidated('https://schema.org/Article');

  /// IRI for schema:AskAction
  ///
  /// The act of posing a question / favor to someone.\n\nRelated actions:\n\n* {[ReplyAction]}: Appears generally as a response to AskAction.
  ///
  static const AskAction = IriTerm.prevalidated('https://schema.org/AskAction');

  /// IRI for schema:AskPublicNewsArticle
  ///
  /// A {[NewsArticle]} expressing an open call by a {[NewsMediaOrganization]} asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.
  ///
  static const AskPublicNewsArticle = IriTerm.prevalidated(
    'https://schema.org/AskPublicNewsArticle',
  );

  /// IRI for schema:AssessAction
  ///
  /// The act of forming one's opinion, reaction or sentiment.
  ///
  static const AssessAction = IriTerm.prevalidated(
    'https://schema.org/AssessAction',
  );

  /// IRI for schema:AssignAction
  ///
  /// The act of allocating an action/event/task to some destination (someone or something).
  ///
  static const AssignAction = IriTerm.prevalidated(
    'https://schema.org/AssignAction',
  );

  /// IRI for schema:Atlas
  ///
  /// A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.
  ///
  static const Atlas = IriTerm.prevalidated('https://schema.org/Atlas');

  /// IRI for schema:Attorney
  ///
  /// Professional service: Attorney. \n\nThis type is deprecated - {[LegalService]} is more inclusive and less ambiguous.
  ///
  static const Attorney = IriTerm.prevalidated('https://schema.org/Attorney');

  /// IRI for schema:Audience
  ///
  /// Intended audience for an item, i.e. the group for whom the item was created.
  ///
  static const Audience = IriTerm.prevalidated('https://schema.org/Audience');

  /// IRI for schema:AudioObject
  ///
  /// An audio file.
  ///
  static const AudioObject = IriTerm.prevalidated(
    'https://schema.org/AudioObject',
  );

  /// IRI for schema:AudioObjectSnapshot
  ///
  /// A specific and exact (byte-for-byte) version of an {[AudioObject]}. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
  ///
  static const AudioObjectSnapshot = IriTerm.prevalidated(
    'https://schema.org/AudioObjectSnapshot',
  );

  /// IRI for schema:Audiobook
  ///
  /// An audiobook.
  ///
  static const Audiobook = IriTerm.prevalidated('https://schema.org/Audiobook');

  /// IRI for schema:AuthorizeAction
  ///
  /// The act of granting permission to an object.
  ///
  static const AuthorizeAction = IriTerm.prevalidated(
    'https://schema.org/AuthorizeAction',
  );

  /// IRI for schema:AutoBodyShop
  ///
  /// Auto body shop.
  ///
  static const AutoBodyShop = IriTerm.prevalidated(
    'https://schema.org/AutoBodyShop',
  );

  /// IRI for schema:AutoDealer
  ///
  /// An car dealership.
  ///
  static const AutoDealer = IriTerm.prevalidated(
    'https://schema.org/AutoDealer',
  );

  /// IRI for schema:AutoPartsStore
  ///
  /// An auto parts store.
  ///
  static const AutoPartsStore = IriTerm.prevalidated(
    'https://schema.org/AutoPartsStore',
  );

  /// IRI for schema:AutoRental
  ///
  /// A car rental business.
  ///
  static const AutoRental = IriTerm.prevalidated(
    'https://schema.org/AutoRental',
  );

  /// IRI for schema:AutoRepair
  ///
  /// Car repair business.
  ///
  static const AutoRepair = IriTerm.prevalidated(
    'https://schema.org/AutoRepair',
  );

  /// IRI for schema:AutoWash
  ///
  /// A car wash business.
  ///
  static const AutoWash = IriTerm.prevalidated('https://schema.org/AutoWash');

  /// IRI for schema:AutomatedTeller
  ///
  /// ATM/cash machine.
  ///
  static const AutomatedTeller = IriTerm.prevalidated(
    'https://schema.org/AutomatedTeller',
  );

  /// IRI for schema:AutomotiveBusiness
  ///
  /// Car repair, sales, or parts.
  ///
  static const AutomotiveBusiness = IriTerm.prevalidated(
    'https://schema.org/AutomotiveBusiness',
  );

  /// IRI for schema:BackgroundNewsArticle
  ///
  /// A {[NewsArticle]} providing historical context, definition and detail on a specific topic (aka "explainer" or "backgrounder"). For example, an in-depth article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using {[Book]} or {[Article]}, in particular {[ScholarlyArticle]}. See also {[NewsArticle]} for related vocabulary from a learning/education perspective.
  ///
  static const BackgroundNewsArticle = IriTerm.prevalidated(
    'https://schema.org/BackgroundNewsArticle',
  );

  /// IRI for schema:Bakery
  ///
  /// A bakery.
  ///
  static const Bakery = IriTerm.prevalidated('https://schema.org/Bakery');

  /// IRI for schema:BankAccount
  ///
  /// A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.
  ///
  static const BankAccount = IriTerm.prevalidated(
    'https://schema.org/BankAccount',
  );

  /// IRI for schema:BankOrCreditUnion
  ///
  /// Bank or credit union.
  ///
  static const BankOrCreditUnion = IriTerm.prevalidated(
    'https://schema.org/BankOrCreditUnion',
  );

  /// IRI for schema:BarOrPub
  ///
  /// A bar or pub.
  ///
  static const BarOrPub = IriTerm.prevalidated('https://schema.org/BarOrPub');

  /// IRI for schema:Barcode
  ///
  /// An image of a visual machine-readable code such as a barcode or QR code.
  ///
  static const Barcode = IriTerm.prevalidated('https://schema.org/Barcode');

  /// IRI for schema:Beach
  ///
  /// Beach.
  ///
  static const Beach = IriTerm.prevalidated('https://schema.org/Beach');

  /// IRI for schema:BeautySalon
  ///
  /// Beauty salon.
  ///
  static const BeautySalon = IriTerm.prevalidated(
    'https://schema.org/BeautySalon',
  );

  /// IRI for schema:BedAndBreakfast
  ///
  /// Bed and breakfast.
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const BedAndBreakfast = IriTerm.prevalidated(
    'https://schema.org/BedAndBreakfast',
  );

  /// IRI for schema:BedDetails
  ///
  /// An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also {[BedType]} (under development).
  ///
  static const BedDetails = IriTerm.prevalidated(
    'https://schema.org/BedDetails',
  );

  /// IRI for schema:BedType
  ///
  /// A type of bed. This is used for indicating the bed or beds available in an accommodation.
  ///
  static const BedType = IriTerm.prevalidated('https://schema.org/BedType');

  /// IRI for schema:BefriendAction
  ///
  /// The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.\n\nRelated actions:\n\n* {[FollowAction]}: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.
  ///
  static const BefriendAction = IriTerm.prevalidated(
    'https://schema.org/BefriendAction',
  );

  /// IRI for schema:BikeStore
  ///
  /// A bike store.
  ///
  static const BikeStore = IriTerm.prevalidated('https://schema.org/BikeStore');

  /// IRI for schema:BioChemEntity
  ///
  /// Any biological, chemical, or biochemical thing. For example: a protein; a gene; a chemical; a synthetic chemical.
  ///
  static const BioChemEntity = IriTerm.prevalidated(
    'https://schema.org/BioChemEntity',
  );

  /// IRI for schema:Blog
  ///
  /// A [blog](https://en.wikipedia.org/wiki/Blog), sometimes known as a "weblog". Note that the individual posts ({[BlogPosting]}s) in a {[Blog]} are often colloquially referred to by the same term.
  ///
  static const Blog = IriTerm.prevalidated('https://schema.org/Blog');

  /// IRI for schema:BlogPosting
  ///
  /// A blog post.
  ///
  static const BlogPosting = IriTerm.prevalidated(
    'https://schema.org/BlogPosting',
  );

  /// IRI for schema:BloodTest
  ///
  /// A medical test performed on a sample of a patient's blood.
  ///
  static const BloodTest = IriTerm.prevalidated('https://schema.org/BloodTest');

  /// IRI for schema:BoardingPolicyType
  ///
  /// A type of boarding policy used by an airline.
  ///
  static const BoardingPolicyType = IriTerm.prevalidated(
    'https://schema.org/BoardingPolicyType',
  );

  /// IRI for schema:BoatReservation
  ///
  /// A reservation for boat travel.
  ///
  /// Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const BoatReservation = IriTerm.prevalidated(
    'https://schema.org/BoatReservation',
  );

  /// IRI for schema:BoatTerminal
  ///
  /// A terminal for boats, ships, and other water vessels.
  ///
  static const BoatTerminal = IriTerm.prevalidated(
    'https://schema.org/BoatTerminal',
  );

  /// IRI for schema:BoatTrip
  ///
  /// A trip on a commercial ferry line.
  ///
  static const BoatTrip = IriTerm.prevalidated('https://schema.org/BoatTrip');

  /// IRI for schema:BodyMeasurementTypeEnumeration
  ///
  /// Enumerates types (or dimensions) of a person's body measurements, for example for fitting of clothes.
  ///
  static const BodyMeasurementTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementTypeEnumeration',
  );

  /// IRI for schema:BodyOfWater
  ///
  /// A body of water, such as a sea, ocean, or lake.
  ///
  static const BodyOfWater = IriTerm.prevalidated(
    'https://schema.org/BodyOfWater',
  );

  /// IRI for schema:Bone
  ///
  /// Rigid connective tissue that comprises up the skeletal structure of the human body.
  ///
  static const Bone = IriTerm.prevalidated('https://schema.org/Bone');

  /// IRI for schema:Book
  ///
  /// A book.
  ///
  static const Book = IriTerm.prevalidated('https://schema.org/Book');

  /// IRI for schema:BookFormatType
  ///
  /// The publication format of the book.
  ///
  static const BookFormatType = IriTerm.prevalidated(
    'https://schema.org/BookFormatType',
  );

  /// IRI for schema:BookSeries
  ///
  /// A series of books. Included books can be indicated with the hasPart property.
  ///
  static const BookSeries = IriTerm.prevalidated(
    'https://schema.org/BookSeries',
  );

  /// IRI for schema:BookStore
  ///
  /// A bookstore.
  ///
  static const BookStore = IriTerm.prevalidated('https://schema.org/BookStore');

  /// IRI for schema:BookmarkAction
  ///
  /// An agent bookmarks/flags/labels/tags/marks an object.
  ///
  static const BookmarkAction = IriTerm.prevalidated(
    'https://schema.org/BookmarkAction',
  );

  /// IRI for schema:Boolean
  ///
  /// Boolean: True or False.
  ///
  static const Boolean = IriTerm.prevalidated('https://schema.org/Boolean');

  /// IRI for schema:BorrowAction
  ///
  /// The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.\n\nRelated actions:\n\n* {[LendAction]}: Reciprocal of BorrowAction.
  ///
  static const BorrowAction = IriTerm.prevalidated(
    'https://schema.org/BorrowAction',
  );

  /// IRI for schema:BowlingAlley
  ///
  /// A bowling alley.
  ///
  static const BowlingAlley = IriTerm.prevalidated(
    'https://schema.org/BowlingAlley',
  );

  /// IRI for schema:BrainStructure
  ///
  /// Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.
  ///
  static const BrainStructure = IriTerm.prevalidated(
    'https://schema.org/BrainStructure',
  );

  /// IRI for schema:Brand
  ///
  /// A brand is a name used by an organization or business person for labeling a product, product group, or similar.
  ///
  static const Brand = IriTerm.prevalidated('https://schema.org/Brand');

  /// IRI for schema:BreadcrumbList
  ///
  /// A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.\n\nThe {[position]} property is used to reconstruct the order of the items in a BreadcrumbList. The convention is that a breadcrumb list has an {[itemListOrder]} of {[ItemListOrderAscending]} (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
  ///
  ///
  static const BreadcrumbList = IriTerm.prevalidated(
    'https://schema.org/BreadcrumbList',
  );

  /// IRI for schema:Brewery
  ///
  /// Brewery.
  ///
  static const Brewery = IriTerm.prevalidated('https://schema.org/Brewery');

  /// IRI for schema:Bridge
  ///
  /// A bridge.
  ///
  static const Bridge = IriTerm.prevalidated('https://schema.org/Bridge');

  /// IRI for schema:BroadcastChannel
  ///
  /// A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
  ///
  static const BroadcastChannel = IriTerm.prevalidated(
    'https://schema.org/BroadcastChannel',
  );

  /// IRI for schema:BroadcastEvent
  ///
  /// An over the air or online broadcast event.
  ///
  static const BroadcastEvent = IriTerm.prevalidated(
    'https://schema.org/BroadcastEvent',
  );

  /// IRI for schema:BroadcastFrequencySpecification
  ///
  /// The frequency in MHz and the modulation used for a particular BroadcastService.
  ///
  static const BroadcastFrequencySpecification = IriTerm.prevalidated(
    'https://schema.org/BroadcastFrequencySpecification',
  );

  /// IRI for schema:BroadcastService
  ///
  /// A delivery service through which content is provided via broadcast over the air or online.
  ///
  static const BroadcastService = IriTerm.prevalidated(
    'https://schema.org/BroadcastService',
  );

  /// IRI for schema:BrokerageAccount
  ///
  /// An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.
  ///
  static const BrokerageAccount = IriTerm.prevalidated(
    'https://schema.org/BrokerageAccount',
  );

  /// IRI for schema:BuddhistTemple
  ///
  /// A Buddhist temple.
  ///
  static const BuddhistTemple = IriTerm.prevalidated(
    'https://schema.org/BuddhistTemple',
  );

  /// IRI for schema:BusOrCoach
  ///
  /// A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury buses, usually in service for long distance travel.
  ///
  static const BusOrCoach = IriTerm.prevalidated(
    'https://schema.org/BusOrCoach',
  );

  /// IRI for schema:BusReservation
  ///
  /// A reservation for bus travel. \n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const BusReservation = IriTerm.prevalidated(
    'https://schema.org/BusReservation',
  );

  /// IRI for schema:BusStation
  ///
  /// A bus station.
  ///
  static const BusStation = IriTerm.prevalidated(
    'https://schema.org/BusStation',
  );

  /// IRI for schema:BusStop
  ///
  /// A bus stop.
  ///
  static const BusStop = IriTerm.prevalidated('https://schema.org/BusStop');

  /// IRI for schema:BusTrip
  ///
  /// A trip on a commercial bus line.
  ///
  static const BusTrip = IriTerm.prevalidated('https://schema.org/BusTrip');

  /// IRI for schema:BusinessAudience
  ///
  /// A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
  ///
  static const BusinessAudience = IriTerm.prevalidated(
    'https://schema.org/BusinessAudience',
  );

  /// IRI for schema:BusinessEntityType
  ///
  /// A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#Business\n* http://purl.org/goodrelations/v1#Enduser\n* http://purl.org/goodrelations/v1#PublicInstitution\n* http://purl.org/goodrelations/v1#Reseller
  ///
  ///
  static const BusinessEntityType = IriTerm.prevalidated(
    'https://schema.org/BusinessEntityType',
  );

  /// IRI for schema:BusinessEvent
  ///
  /// Event type: Business event.
  ///
  static const BusinessEvent = IriTerm.prevalidated(
    'https://schema.org/BusinessEvent',
  );

  /// IRI for schema:BusinessFunction
  ///
  /// The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#ConstructionInstallation\n* http://purl.org/goodrelations/v1#Dispose\n* http://purl.org/goodrelations/v1#LeaseOut\n* http://purl.org/goodrelations/v1#Maintain\n* http://purl.org/goodrelations/v1#ProvideService\n* http://purl.org/goodrelations/v1#Repair\n* http://purl.org/goodrelations/v1#Sell\n* http://purl.org/goodrelations/v1#Buy
  ///
  ///
  static const BusinessFunction = IriTerm.prevalidated(
    'https://schema.org/BusinessFunction',
  );

  /// IRI for schema:BuyAction
  ///
  /// The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
  ///
  static const BuyAction = IriTerm.prevalidated('https://schema.org/BuyAction');

  /// IRI for schema:CDCPMDRecord
  ///
  /// A CDCPMDRecord is a data structure representing a record in a CDC tabular data format
  /// used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative
  /// definitions used as the source here.
  ///
  ///
  static const CDCPMDRecord = IriTerm.prevalidated(
    'https://schema.org/CDCPMDRecord',
  );

  /// IRI for schema:CableOrSatelliteService
  ///
  /// A service which provides access to media programming like TV or radio. Access may be via cable or satellite.
  ///
  static const CableOrSatelliteService = IriTerm.prevalidated(
    'https://schema.org/CableOrSatelliteService',
  );

  /// IRI for schema:CafeOrCoffeeShop
  ///
  /// A cafe or coffee shop.
  ///
  static const CafeOrCoffeeShop = IriTerm.prevalidated(
    'https://schema.org/CafeOrCoffeeShop',
  );

  /// IRI for schema:Campground
  ///
  /// A camping site, campsite, or {[Campground]} is a place used for overnight stay in the outdoors, typically containing individual {[CampingPitch]} locations. \n\n
  /// In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\n\n
  ///
  /// See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
  ///
  ///
  static const Campground = IriTerm.prevalidated(
    'https://schema.org/Campground',
  );

  /// IRI for schema:CampingPitch
  ///
  /// A {[CampingPitch]} is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or {[Campground]}.\n\n
  /// In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
  /// (Source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite).)\n\n
  /// See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
  ///
  ///
  static const CampingPitch = IriTerm.prevalidated(
    'https://schema.org/CampingPitch',
  );

  /// IRI for schema:Canal
  ///
  /// A canal, like the Panama Canal.
  ///
  static const Canal = IriTerm.prevalidated('https://schema.org/Canal');

  /// IRI for schema:CancelAction
  ///
  /// The act of asserting that a future event/action is no longer going to happen.\n\nRelated actions:\n\n* {[ConfirmAction]}: The antonym of CancelAction.
  ///
  static const CancelAction = IriTerm.prevalidated(
    'https://schema.org/CancelAction',
  );

  /// IRI for schema:Car
  ///
  /// A car is a wheeled, self-powered motor vehicle used for transportation.
  ///
  static const Car = IriTerm.prevalidated('https://schema.org/Car');

  /// IRI for schema:CarUsageType
  ///
  /// A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.
  ///
  static const CarUsageType = IriTerm.prevalidated(
    'https://schema.org/CarUsageType',
  );

  /// IRI for schema:Casino
  ///
  /// A casino.
  ///
  static const Casino = IriTerm.prevalidated('https://schema.org/Casino');

  /// IRI for schema:CategoryCode
  ///
  /// A Category Code.
  ///
  static const CategoryCode = IriTerm.prevalidated(
    'https://schema.org/CategoryCode',
  );

  /// IRI for schema:CategoryCodeSet
  ///
  /// A set of Category Code values.
  ///
  static const CategoryCodeSet = IriTerm.prevalidated(
    'https://schema.org/CategoryCodeSet',
  );

  /// IRI for schema:CatholicChurch
  ///
  /// A Catholic church.
  ///
  static const CatholicChurch = IriTerm.prevalidated(
    'https://schema.org/CatholicChurch',
  );

  /// IRI for schema:Cemetery
  ///
  /// A graveyard.
  ///
  static const Cemetery = IriTerm.prevalidated('https://schema.org/Cemetery');

  /// IRI for schema:Certification
  ///
  /// A Certification is an official and authoritative statement about a subject, for example a product, service, person, or organization. A certification is typically issued by an indendent certification body, for example a professional organization or government. It formally attests certain characteristics about the subject, for example Organizations can be ISO certified, Food products can be certified Organic or Vegan, a Person can be a certified professional, a Place can be certified for food processing. There are certifications for many domains: regulatory, organizational, recycling, food, efficiency, educational, ecological, etc. A certification is a form of credential, as are accreditations and licenses. Mapped from the [gs1:CertificationDetails](https://www.gs1.org/voc/CertificationDetails) class in the GS1 Web Vocabulary.
  ///
  static const Certification = IriTerm.prevalidated(
    'https://schema.org/Certification',
  );

  /// IRI for schema:CertificationStatusEnumeration
  ///
  /// Enumerates the different statuses of a Certification (Active and Inactive).
  ///
  static const CertificationStatusEnumeration = IriTerm.prevalidated(
    'https://schema.org/CertificationStatusEnumeration',
  );

  /// IRI for schema:Chapter
  ///
  /// One of the sections into which a book is divided. A chapter usually has a section number or a name.
  ///
  static const Chapter = IriTerm.prevalidated('https://schema.org/Chapter');

  /// IRI for schema:CheckAction
  ///
  /// An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.
  ///
  static const CheckAction = IriTerm.prevalidated(
    'https://schema.org/CheckAction',
  );

  /// IRI for schema:CheckInAction
  ///
  /// The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check-in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).\n\nRelated actions:\n\n* {[CheckOutAction]}: The antonym of CheckInAction.\n* {[ArriveAction]}: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.\n* {[ConfirmAction]}: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.
  ///
  static const CheckInAction = IriTerm.prevalidated(
    'https://schema.org/CheckInAction',
  );

  /// IRI for schema:CheckOutAction
  ///
  /// The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check-in) or place (e.g. hotel).\n\nRelated actions:\n\n* {[CheckInAction]}: The antonym of CheckOutAction.\n* {[DepartAction]}: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\n* {[CancelAction]}: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.
  ///
  static const CheckOutAction = IriTerm.prevalidated(
    'https://schema.org/CheckOutAction',
  );

  /// IRI for schema:CheckoutPage
  ///
  /// Web page type: Checkout page.
  ///
  static const CheckoutPage = IriTerm.prevalidated(
    'https://schema.org/CheckoutPage',
  );

  /// IRI for schema:ChemicalSubstance
  ///
  /// A chemical substance is 'a portion of matter of constant composition, composed of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).
  ///
  static const ChemicalSubstance = IriTerm.prevalidated(
    'https://schema.org/ChemicalSubstance',
  );

  /// IRI for schema:ChildCare
  ///
  /// A Childcare center.
  ///
  static const ChildCare = IriTerm.prevalidated('https://schema.org/ChildCare');

  /// IRI for schema:ChildrensEvent
  ///
  /// Event type: Children's event.
  ///
  static const ChildrensEvent = IriTerm.prevalidated(
    'https://schema.org/ChildrensEvent',
  );

  /// IRI for schema:ChooseAction
  ///
  /// The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
  ///
  static const ChooseAction = IriTerm.prevalidated(
    'https://schema.org/ChooseAction',
  );

  /// IRI for schema:Church
  ///
  /// A church.
  ///
  static const Church = IriTerm.prevalidated('https://schema.org/Church');

  /// IRI for schema:City
  ///
  /// A city or town.
  ///
  static const City = IriTerm.prevalidated('https://schema.org/City');

  /// IRI for schema:CityHall
  ///
  /// A city hall.
  ///
  static const CityHall = IriTerm.prevalidated('https://schema.org/CityHall');

  /// IRI for schema:CivicStructure
  ///
  /// A public structure, such as a town hall or concert hall.
  ///
  static const CivicStructure = IriTerm.prevalidated(
    'https://schema.org/CivicStructure',
  );

  /// IRI for schema:Claim
  ///
  /// A {[Claim]} in Schema.org represents a specific, factually-oriented claim that could be the {[itemReviewed]} in a {[ClaimReview]}. The content of a claim can be summarized with the {[text]} property. Variations on well known claims can have their common identity indicated via {[sameAs]} links, and summarized with a {[name]}. Ideally, a {[Claim]} description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.
  ///
  /// Beyond {[ClaimReview]}, the Claim type can be associated with related creative works - for example a {[ScholarlyArticle]} or {[Question]} might be {[about]} some {[Claim]}.
  ///
  /// At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.
  ///
  ///
  static const Claim = IriTerm.prevalidated('https://schema.org/Claim');

  /// IRI for schema:ClaimReview
  ///
  /// A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).
  ///
  static const ClaimReview = IriTerm.prevalidated(
    'https://schema.org/ClaimReview',
  );

  /// IRI for schema:Class
  ///
  /// A class, also often called a 'Type'; equivalent to rdfs:Class.
  ///
  static const Class = IriTerm.prevalidated('https://schema.org/Class');

  /// IRI for schema:Clip
  ///
  /// A short TV or radio program or a segment/part of a program.
  ///
  static const Clip = IriTerm.prevalidated('https://schema.org/Clip');

  /// IRI for schema:ClothingStore
  ///
  /// A clothing store.
  ///
  static const ClothingStore = IriTerm.prevalidated(
    'https://schema.org/ClothingStore',
  );

  /// IRI for schema:Code
  ///
  /// Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
  ///
  static const Code = IriTerm.prevalidated('https://schema.org/Code');

  /// IRI for schema:Collection
  ///
  /// A collection of items, e.g. creative works or products.
  ///
  static const Collection = IriTerm.prevalidated(
    'https://schema.org/Collection',
  );

  /// IRI for schema:CollectionPage
  ///
  /// Web page type: Collection page.
  ///
  static const CollectionPage = IriTerm.prevalidated(
    'https://schema.org/CollectionPage',
  );

  /// IRI for schema:CollegeOrUniversity
  ///
  /// A college, university, or other third-level educational institution.
  ///
  static const CollegeOrUniversity = IriTerm.prevalidated(
    'https://schema.org/CollegeOrUniversity',
  );

  /// IRI for schema:ComedyClub
  ///
  /// A comedy club.
  ///
  static const ComedyClub = IriTerm.prevalidated(
    'https://schema.org/ComedyClub',
  );

  /// IRI for schema:ComedyEvent
  ///
  /// Event type: Comedy event.
  ///
  static const ComedyEvent = IriTerm.prevalidated(
    'https://schema.org/ComedyEvent',
  );

  /// IRI for schema:ComicCoverArt
  ///
  /// The artwork on the cover of a comic.
  ///
  static const ComicCoverArt = IriTerm.prevalidated(
    'https://schema.org/ComicCoverArt',
  );

  /// IRI for schema:ComicIssue
  ///
  /// Individual comic issues are serially published as
  /// part of a larger series. For the sake of consistency, even one-shot issues
  /// belong to a series comprised of a single issue. All comic issues can be
  /// uniquely identified by: the combination of the name and volume number of the
  /// series to which the issue belongs; the issue number; and the variant
  /// description of the issue (if any).
  ///
  static const ComicIssue = IriTerm.prevalidated(
    'https://schema.org/ComicIssue',
  );

  /// IRI for schema:ComicSeries
  ///
  /// A sequential publication of comic stories under a
  /// unifying title, for example "The Amazing Spider-Man" or "Groo the
  /// Wanderer".
  ///
  static const ComicSeries = IriTerm.prevalidated(
    'https://schema.org/ComicSeries',
  );

  /// IRI for schema:ComicStory
  ///
  /// The term "story" is any indivisible, re-printable
  /// unit of a comic, including the interior stories, covers, and backmatter. Most
  /// comics have at least two stories: a cover (ComicCoverArt) and an interior story.
  ///
  static const ComicStory = IriTerm.prevalidated(
    'https://schema.org/ComicStory',
  );

  /// IRI for schema:Comment
  ///
  /// A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the {[text]} property, and its topic via {[about]}, properties shared with all CreativeWorks.
  ///
  static const Comment = IriTerm.prevalidated('https://schema.org/Comment');

  /// IRI for schema:CommentAction
  ///
  /// The act of generating a comment about a subject.
  ///
  static const CommentAction = IriTerm.prevalidated(
    'https://schema.org/CommentAction',
  );

  /// IRI for schema:CommunicateAction
  ///
  /// The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
  ///
  static const CommunicateAction = IriTerm.prevalidated(
    'https://schema.org/CommunicateAction',
  );

  /// IRI for schema:CompleteDataFeed
  ///
  /// A {[CompleteDataFeed]} is a {[DataFeed]} whose standard representation includes content for every item currently in the feed.
  ///
  /// This is the equivalent of Atom's element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), for example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. "Top Twenty Records") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.
  ///
  static const CompleteDataFeed = IriTerm.prevalidated(
    'https://schema.org/CompleteDataFeed',
  );

  /// IRI for schema:CompoundPriceSpecification
  ///
  /// A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning").
  ///
  static const CompoundPriceSpecification = IriTerm.prevalidated(
    'https://schema.org/CompoundPriceSpecification',
  );

  /// IRI for schema:ComputerLanguage
  ///
  /// This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the {[Language]} type.
  ///
  static const ComputerLanguage = IriTerm.prevalidated(
    'https://schema.org/ComputerLanguage',
  );

  /// IRI for schema:ComputerStore
  ///
  /// A computer store.
  ///
  static const ComputerStore = IriTerm.prevalidated(
    'https://schema.org/ComputerStore',
  );

  /// IRI for schema:ConfirmAction
  ///
  /// The act of notifying someone that a future event/action is going to happen as expected.\n\nRelated actions:\n\n* {[CancelAction]}: The antonym of ConfirmAction.
  ///
  static const ConfirmAction = IriTerm.prevalidated(
    'https://schema.org/ConfirmAction',
  );

  /// IRI for schema:Consortium
  ///
  /// A Consortium is a membership {[Organization]} whose members are typically Organizations.
  ///
  static const Consortium = IriTerm.prevalidated(
    'https://schema.org/Consortium',
  );

  /// IRI for schema:ConstraintNode
  ///
  /// The ConstraintNode type is provided to support usecases in which a node in a structured data graph is described with properties which appear to describe a single entity, but are being used in a situation where they serve a more abstract purpose. A {[ConstraintNode]} can be described using {[constraintProperty]} and {[numConstraints]}. These constraint properties can serve a
  /// variety of purposes, and their values may sometimes be understood to indicate sets of possible values rather than single, exact and specific values.
  ///
  static const ConstraintNode = IriTerm.prevalidated(
    'https://schema.org/ConstraintNode',
  );

  /// IRI for schema:ConsumeAction
  ///
  /// The act of ingesting information/resources/food.
  ///
  static const ConsumeAction = IriTerm.prevalidated(
    'https://schema.org/ConsumeAction',
  );

  /// IRI for schema:ContactPage
  ///
  /// Web page type: Contact page.
  ///
  static const ContactPage = IriTerm.prevalidated(
    'https://schema.org/ContactPage',
  );

  /// IRI for schema:ContactPoint
  ///
  /// A contact point&#x2014;for example, a Customer Complaints department.
  ///
  static const ContactPoint = IriTerm.prevalidated(
    'https://schema.org/ContactPoint',
  );

  /// IRI for schema:ContactPointOption
  ///
  /// Enumerated options related to a ContactPoint.
  ///
  static const ContactPointOption = IriTerm.prevalidated(
    'https://schema.org/ContactPointOption',
  );

  /// IRI for schema:Continent
  ///
  /// One of the continents (for example, Europe or Africa).
  ///
  static const Continent = IriTerm.prevalidated('https://schema.org/Continent');

  /// IRI for schema:ControlAction
  ///
  /// An agent controls a device or application.
  ///
  static const ControlAction = IriTerm.prevalidated(
    'https://schema.org/ControlAction',
  );

  /// IRI for schema:ConvenienceStore
  ///
  /// A convenience store.
  ///
  static const ConvenienceStore = IriTerm.prevalidated(
    'https://schema.org/ConvenienceStore',
  );

  /// IRI for schema:Conversation
  ///
  /// One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
  ///
  static const Conversation = IriTerm.prevalidated(
    'https://schema.org/Conversation',
  );

  /// IRI for schema:CookAction
  ///
  /// The act of producing/preparing food.
  ///
  static const CookAction = IriTerm.prevalidated(
    'https://schema.org/CookAction',
  );

  /// IRI for schema:Cooperative
  ///
  /// An organization that is a joint project of multiple organizations or persons.
  ///
  static const Cooperative = IriTerm.prevalidated(
    'https://schema.org/Cooperative',
  );

  /// IRI for schema:Corporation
  ///
  /// Organization: A business corporation.
  ///
  static const Corporation = IriTerm.prevalidated(
    'https://schema.org/Corporation',
  );

  /// IRI for schema:CorrectionComment
  ///
  /// A {[comment]} that corrects {[CreativeWork]}.
  ///
  static const CorrectionComment = IriTerm.prevalidated(
    'https://schema.org/CorrectionComment',
  );

  /// IRI for schema:Country
  ///
  /// A country.
  ///
  static const Country = IriTerm.prevalidated('https://schema.org/Country');

  /// IRI for schema:Course
  ///
  /// A description of an educational course which may be offered as distinct instances which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.
  ///
  static const Course = IriTerm.prevalidated('https://schema.org/Course');

  /// IRI for schema:CourseInstance
  ///
  /// An instance of a {[Course]} which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.
  ///
  static const CourseInstance = IriTerm.prevalidated(
    'https://schema.org/CourseInstance',
  );

  /// IRI for schema:Courthouse
  ///
  /// A courthouse.
  ///
  static const Courthouse = IriTerm.prevalidated(
    'https://schema.org/Courthouse',
  );

  /// IRI for schema:CoverArt
  ///
  /// The artwork on the outer surface of a CreativeWork.
  ///
  static const CoverArt = IriTerm.prevalidated('https://schema.org/CoverArt');

  /// IRI for schema:CovidTestingFacility
  ///
  /// A CovidTestingFacility is a {[MedicalClinic]} where testing for the COVID-19 Coronavirus
  /// disease is available. If the facility is being made available from an established {[Pharmacy]}, {[Hotel]}, or other
  /// non-medical organization, multiple types can be listed. This makes it easier to re-use existing schema.org information
  /// about that place, e.g. contact info, address, opening hours. Note that in an emergency, such information may not always be reliable.
  ///
  ///
  static const CovidTestingFacility = IriTerm.prevalidated(
    'https://schema.org/CovidTestingFacility',
  );

  /// IRI for schema:CreateAction
  ///
  /// The act of deliberately creating/producing/generating/building a result out of the agent.
  ///
  static const CreateAction = IriTerm.prevalidated(
    'https://schema.org/CreateAction',
  );

  /// IRI for schema:CreativeWork
  ///
  /// The most generic kind of creative work, including books, movies, photographs, software programs, etc.
  ///
  static const CreativeWork = IriTerm.prevalidated(
    'https://schema.org/CreativeWork',
  );

  /// IRI for schema:CreativeWorkSeason
  ///
  /// A media season, e.g. TV, radio, video game etc.
  ///
  static const CreativeWorkSeason = IriTerm.prevalidated(
    'https://schema.org/CreativeWorkSeason',
  );

  /// IRI for schema:CreativeWorkSeries
  ///
  /// A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike {[ItemList]} which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as TV, radio and games).\n\nSpecific subtypes are available for describing {[TVSeries]}, {[RadioSeries]}, {[MovieSeries]}, {[BookSeries]}, {[Periodical]} and {[VideoGameSeries]}. In each case, the {[hasPart]} / {[isPartOf]} properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.\n\nIt is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
  ///
  ///
  static const CreativeWorkSeries = IriTerm.prevalidated(
    'https://schema.org/CreativeWorkSeries',
  );

  /// IRI for schema:CreditCard
  ///
  /// A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#AmericanExpress\n* http://purl.org/goodrelations/v1#DinersClub\n* http://purl.org/goodrelations/v1#Discover\n* http://purl.org/goodrelations/v1#JCB\n* http://purl.org/goodrelations/v1#MasterCard\n* http://purl.org/goodrelations/v1#VISA
  ///
  ///
  static const CreditCard = IriTerm.prevalidated(
    'https://schema.org/CreditCard',
  );

  /// IRI for schema:Crematorium
  ///
  /// A crematorium.
  ///
  static const Crematorium = IriTerm.prevalidated(
    'https://schema.org/Crematorium',
  );

  /// IRI for schema:CriticReview
  ///
  /// A {[CriticReview]} is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. {[CriticReview]}s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the {[UserReview]} type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.
  ///
  static const CriticReview = IriTerm.prevalidated(
    'https://schema.org/CriticReview',
  );

  /// IRI for schema:CssSelectorType
  ///
  /// Text representing a CSS selector.
  ///
  static const CssSelectorType = IriTerm.prevalidated(
    'https://schema.org/CssSelectorType',
  );

  /// IRI for schema:CurrencyConversionService
  ///
  /// A service to convert funds from one currency to another currency.
  ///
  static const CurrencyConversionService = IriTerm.prevalidated(
    'https://schema.org/CurrencyConversionService',
  );

  /// IRI for schema:DDxElement
  ///
  /// An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.
  ///
  static const DDxElement = IriTerm.prevalidated(
    'https://schema.org/DDxElement',
  );

  /// IRI for schema:DanceEvent
  ///
  /// Event type: A social dance.
  ///
  static const DanceEvent = IriTerm.prevalidated(
    'https://schema.org/DanceEvent',
  );

  /// IRI for schema:DanceGroup
  ///
  /// A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
  ///
  static const DanceGroup = IriTerm.prevalidated(
    'https://schema.org/DanceGroup',
  );

  /// IRI for schema:DataCatalog
  ///
  /// A collection of datasets.
  ///
  static const DataCatalog = IriTerm.prevalidated(
    'https://schema.org/DataCatalog',
  );

  /// IRI for schema:DataDownload
  ///
  /// All or part of a {[Dataset]} in downloadable form.
  ///
  static const DataDownload = IriTerm.prevalidated(
    'https://schema.org/DataDownload',
  );

  /// IRI for schema:DataFeed
  ///
  /// A single feed providing structured information about one or more entities or topics.
  ///
  static const DataFeed = IriTerm.prevalidated('https://schema.org/DataFeed');

  /// IRI for schema:DataFeedItem
  ///
  /// A single item within a larger data feed.
  ///
  static const DataFeedItem = IriTerm.prevalidated(
    'https://schema.org/DataFeedItem',
  );

  /// IRI for schema:DataType
  ///
  /// The basic data types such as Integers, Strings, etc.
  ///
  static const DataType = IriTerm.prevalidated('https://schema.org/DataType');

  /// IRI for schema:Dataset
  ///
  /// A body of structured information describing some topic(s) of interest.
  ///
  static const Dataset = IriTerm.prevalidated('https://schema.org/Dataset');

  /// IRI for schema:Date
  ///
  /// A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  static const Date = IriTerm.prevalidated('https://schema.org/Date');

  /// IRI for schema:DateTime
  ///
  /// A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
  ///
  static const DateTime = IriTerm.prevalidated('https://schema.org/DateTime');

  /// IRI for schema:DatedMoneySpecification
  ///
  /// A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. __Note:__ This type has been superseded by {[MonetaryAmount]}, use of that type is recommended.
  ///
  static const DatedMoneySpecification = IriTerm.prevalidated(
    'https://schema.org/DatedMoneySpecification',
  );

  /// IRI for schema:DayOfWeek
  ///
  /// The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.
  ///
  /// Originally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) were used (for {[Monday]}, {[Tuesday]}, {[Wednesday]}, {[Thursday]}, {[Friday]}, {[Saturday]}, {[Sunday]} plus a special entry for {[PublicHolidays]}); these have now been integrated directly into schema.org.
  ///
  ///
  static const DayOfWeek = IriTerm.prevalidated('https://schema.org/DayOfWeek');

  /// IRI for schema:DaySpa
  ///
  /// A day spa.
  ///
  static const DaySpa = IriTerm.prevalidated('https://schema.org/DaySpa');

  /// IRI for schema:DeactivateAction
  ///
  /// The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).
  ///
  static const DeactivateAction = IriTerm.prevalidated(
    'https://schema.org/DeactivateAction',
  );

  /// IRI for schema:DefenceEstablishment
  ///
  /// A defence establishment, such as an army or navy base.
  ///
  static const DefenceEstablishment = IriTerm.prevalidated(
    'https://schema.org/DefenceEstablishment',
  );

  /// IRI for schema:DefinedRegion
  ///
  /// A DefinedRegion is a geographic area defined by potentially arbitrary (rather than political, administrative or natural geographical) criteria. Properties are provided for defining a region by reference to sets of postal codes.
  ///
  /// Examples: a delivery destination when shopping. Region where regional pricing is configured.
  ///
  /// Requirement 1:
  /// Country: US
  /// States: "NY", "CA"
  ///
  /// Requirement 2:
  /// Country: US
  /// PostalCode Set: { [94000-94585], [97000, 97999], [13000, 13599]}
  /// { [12345, 12345], [78945, 78945], }
  /// Region = state, canton, prefecture, autonomous community...
  ///
  ///
  static const DefinedRegion = IriTerm.prevalidated(
    'https://schema.org/DefinedRegion',
  );

  /// IRI for schema:DefinedTerm
  ///
  /// A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.
  ///
  static const DefinedTerm = IriTerm.prevalidated(
    'https://schema.org/DefinedTerm',
  );

  /// IRI for schema:DefinedTermSet
  ///
  /// A set of defined terms, for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.
  ///
  static const DefinedTermSet = IriTerm.prevalidated(
    'https://schema.org/DefinedTermSet',
  );

  /// IRI for schema:DeleteAction
  ///
  /// The act of editing a recipient by removing one of its objects.
  ///
  static const DeleteAction = IriTerm.prevalidated(
    'https://schema.org/DeleteAction',
  );

  /// IRI for schema:DeliveryChargeSpecification
  ///
  /// The price for the delivery of an offer using a particular delivery method.
  ///
  static const DeliveryChargeSpecification = IriTerm.prevalidated(
    'https://schema.org/DeliveryChargeSpecification',
  );

  /// IRI for schema:DeliveryEvent
  ///
  /// An event involving the delivery of an item.
  ///
  static const DeliveryEvent = IriTerm.prevalidated(
    'https://schema.org/DeliveryEvent',
  );

  /// IRI for schema:DeliveryMethod
  ///
  /// A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#DeliveryModeDirectDownload\n* http://purl.org/goodrelations/v1#DeliveryModeFreight\n* http://purl.org/goodrelations/v1#DeliveryModeMail\n* http://purl.org/goodrelations/v1#DeliveryModeOwnFleet\n* http://purl.org/goodrelations/v1#DeliveryModePickUp\n* http://purl.org/goodrelations/v1#DHL\n* http://purl.org/goodrelations/v1#FederalExpress\n* http://purl.org/goodrelations/v1#UPS
  ///
  ///
  static const DeliveryMethod = IriTerm.prevalidated(
    'https://schema.org/DeliveryMethod',
  );

  /// IRI for schema:Demand
  ///
  /// A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
  ///
  static const Demand = IriTerm.prevalidated('https://schema.org/Demand');

  /// IRI for schema:Dentist
  ///
  /// A dentist.
  ///
  static const Dentist = IriTerm.prevalidated('https://schema.org/Dentist');

  /// IRI for schema:DepartAction
  ///
  /// The act of  departing from a place. An agent departs from a fromLocation for a destination, optionally with participants.
  ///
  static const DepartAction = IriTerm.prevalidated(
    'https://schema.org/DepartAction',
  );

  /// IRI for schema:DepartmentStore
  ///
  /// A department store.
  ///
  static const DepartmentStore = IriTerm.prevalidated(
    'https://schema.org/DepartmentStore',
  );

  /// IRI for schema:DepositAccount
  ///
  /// A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.
  ///
  static const DepositAccount = IriTerm.prevalidated(
    'https://schema.org/DepositAccount',
  );

  /// IRI for schema:DiagnosticLab
  ///
  /// A medical laboratory that offers on-site or off-site diagnostic services.
  ///
  static const DiagnosticLab = IriTerm.prevalidated(
    'https://schema.org/DiagnosticLab',
  );

  /// IRI for schema:DiagnosticProcedure
  ///
  /// A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.
  ///
  static const DiagnosticProcedure = IriTerm.prevalidated(
    'https://schema.org/DiagnosticProcedure',
  );

  /// IRI for schema:Diet
  ///
  /// A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.
  ///
  static const Diet = IriTerm.prevalidated('https://schema.org/Diet');

  /// IRI for schema:DietarySupplement
  ///
  /// A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
  ///
  static const DietarySupplement = IriTerm.prevalidated(
    'https://schema.org/DietarySupplement',
  );

  /// IRI for schema:DigitalDocument
  ///
  /// An electronic file or document.
  ///
  static const DigitalDocument = IriTerm.prevalidated(
    'https://schema.org/DigitalDocument',
  );

  /// IRI for schema:DigitalDocumentPermission
  ///
  /// A permission for a particular person or group to access a particular file.
  ///
  static const DigitalDocumentPermission = IriTerm.prevalidated(
    'https://schema.org/DigitalDocumentPermission',
  );

  /// IRI for schema:DigitalDocumentPermissionType
  ///
  /// A type of permission which can be granted for accessing a digital document.
  ///
  static const DigitalDocumentPermissionType = IriTerm.prevalidated(
    'https://schema.org/DigitalDocumentPermissionType',
  );

  /// IRI for schema:DigitalPlatformEnumeration
  ///
  /// Enumerates some common technology platforms, for use with properties such as {[actionPlatform]}. It is not supposed to be comprehensive - when a suitable code is not enumerated here, textual or URL values can be used instead. These codes are at a fairly high level and do not deal with versioning and other nuance. Additional codes can be suggested [in github](https://github.com/schemaorg/schemaorg/issues/3057).
  ///
  static const DigitalPlatformEnumeration = IriTerm.prevalidated(
    'https://schema.org/DigitalPlatformEnumeration',
  );

  /// IRI for schema:DisagreeAction
  ///
  /// The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
  ///
  static const DisagreeAction = IriTerm.prevalidated(
    'https://schema.org/DisagreeAction',
  );

  /// IRI for schema:DiscoverAction
  ///
  /// The act of discovering/finding an object.
  ///
  static const DiscoverAction = IriTerm.prevalidated(
    'https://schema.org/DiscoverAction',
  );

  /// IRI for schema:DiscussionForumPosting
  ///
  /// A posting to a discussion forum.
  ///
  static const DiscussionForumPosting = IriTerm.prevalidated(
    'https://schema.org/DiscussionForumPosting',
  );

  /// IRI for schema:DislikeAction
  ///
  /// The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
  ///
  static const DislikeAction = IriTerm.prevalidated(
    'https://schema.org/DislikeAction',
  );

  /// IRI for schema:Distance
  ///
  /// Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.
  ///
  static const Distance = IriTerm.prevalidated('https://schema.org/Distance');

  /// IRI for schema:Distillery
  ///
  /// A distillery.
  ///
  static const Distillery = IriTerm.prevalidated(
    'https://schema.org/Distillery',
  );

  /// IRI for schema:DonateAction
  ///
  /// The act of providing goods, services, or money without compensation, often for philanthropic reasons.
  ///
  static const DonateAction = IriTerm.prevalidated(
    'https://schema.org/DonateAction',
  );

  /// IRI for schema:DoseSchedule
  ///
  /// A specific dosing schedule for a drug or supplement.
  ///
  static const DoseSchedule = IriTerm.prevalidated(
    'https://schema.org/DoseSchedule',
  );

  /// IRI for schema:DownloadAction
  ///
  /// The act of downloading an object.
  ///
  static const DownloadAction = IriTerm.prevalidated(
    'https://schema.org/DownloadAction',
  );

  /// IRI for schema:DrawAction
  ///
  /// The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
  ///
  static const DrawAction = IriTerm.prevalidated(
    'https://schema.org/DrawAction',
  );

  /// IRI for schema:Drawing
  ///
  /// A picture or diagram made with a pencil, pen, or crayon rather than paint.
  ///
  static const Drawing = IriTerm.prevalidated('https://schema.org/Drawing');

  /// IRI for schema:DrinkAction
  ///
  /// The act of swallowing liquids.
  ///
  static const DrinkAction = IriTerm.prevalidated(
    'https://schema.org/DrinkAction',
  );

  /// IRI for schema:DriveWheelConfigurationValue
  ///
  /// A value indicating which roadwheels will receive torque.
  ///
  static const DriveWheelConfigurationValue = IriTerm.prevalidated(
    'https://schema.org/DriveWheelConfigurationValue',
  );

  /// IRI for schema:Drug
  ///
  /// A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge makes a clear difference between them.
  ///
  static const Drug = IriTerm.prevalidated('https://schema.org/Drug');

  /// IRI for schema:DrugClass
  ///
  /// A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.
  ///
  static const DrugClass = IriTerm.prevalidated('https://schema.org/DrugClass');

  /// IRI for schema:DrugCost
  ///
  /// The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.
  ///
  static const DrugCost = IriTerm.prevalidated('https://schema.org/DrugCost');

  /// IRI for schema:DrugCostCategory
  ///
  /// Enumerated categories of medical drug costs.
  ///
  static const DrugCostCategory = IriTerm.prevalidated(
    'https://schema.org/DrugCostCategory',
  );

  /// IRI for schema:DrugLegalStatus
  ///
  /// The legal availability status of a medical drug.
  ///
  static const DrugLegalStatus = IriTerm.prevalidated(
    'https://schema.org/DrugLegalStatus',
  );

  /// IRI for schema:DrugPregnancyCategory
  ///
  /// Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.
  ///
  static const DrugPregnancyCategory = IriTerm.prevalidated(
    'https://schema.org/DrugPregnancyCategory',
  );

  /// IRI for schema:DrugPrescriptionStatus
  ///
  /// Indicates whether this drug is available by prescription or over-the-counter.
  ///
  static const DrugPrescriptionStatus = IriTerm.prevalidated(
    'https://schema.org/DrugPrescriptionStatus',
  );

  /// IRI for schema:DrugStrength
  ///
  /// A specific strength in which a medical drug is available in a specific country.
  ///
  static const DrugStrength = IriTerm.prevalidated(
    'https://schema.org/DrugStrength',
  );

  /// IRI for schema:DryCleaningOrLaundry
  ///
  /// A dry-cleaning business.
  ///
  static const DryCleaningOrLaundry = IriTerm.prevalidated(
    'https://schema.org/DryCleaningOrLaundry',
  );

  /// IRI for schema:Duration
  ///
  /// Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  static const Duration = IriTerm.prevalidated('https://schema.org/Duration');

  /// IRI for schema:EUEnergyEfficiencyEnumeration
  ///
  /// Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ as defined in EU directive 2017/1369.
  ///
  static const EUEnergyEfficiencyEnumeration = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyEnumeration',
  );

  /// IRI for schema:EatAction
  ///
  /// The act of swallowing solid objects.
  ///
  static const EatAction = IriTerm.prevalidated('https://schema.org/EatAction');

  /// IRI for schema:EducationEvent
  ///
  /// Event type: Education event.
  ///
  static const EducationEvent = IriTerm.prevalidated(
    'https://schema.org/EducationEvent',
  );

  /// IRI for schema:EducationalAudience
  ///
  /// An EducationalAudience.
  ///
  static const EducationalAudience = IriTerm.prevalidated(
    'https://schema.org/EducationalAudience',
  );

  /// IRI for schema:EducationalOccupationalCredential
  ///
  /// An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.
  ///
  static const EducationalOccupationalCredential = IriTerm.prevalidated(
    'https://schema.org/EducationalOccupationalCredential',
  );

  /// IRI for schema:EducationalOccupationalProgram
  ///
  /// A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).
  ///
  static const EducationalOccupationalProgram = IriTerm.prevalidated(
    'https://schema.org/EducationalOccupationalProgram',
  );

  /// IRI for schema:EducationalOrganization
  ///
  /// An educational organization.
  ///
  static const EducationalOrganization = IriTerm.prevalidated(
    'https://schema.org/EducationalOrganization',
  );

  /// IRI for schema:Electrician
  ///
  /// An electrician.
  ///
  static const Electrician = IriTerm.prevalidated(
    'https://schema.org/Electrician',
  );

  /// IRI for schema:ElectronicsStore
  ///
  /// An electronics store.
  ///
  static const ElectronicsStore = IriTerm.prevalidated(
    'https://schema.org/ElectronicsStore',
  );

  /// IRI for schema:ElementarySchool
  ///
  /// An elementary school.
  ///
  static const ElementarySchool = IriTerm.prevalidated(
    'https://schema.org/ElementarySchool',
  );

  /// IRI for schema:EmailMessage
  ///
  /// An email message.
  ///
  static const EmailMessage = IriTerm.prevalidated(
    'https://schema.org/EmailMessage',
  );

  /// IRI for schema:Embassy
  ///
  /// An embassy.
  ///
  static const Embassy = IriTerm.prevalidated('https://schema.org/Embassy');

  /// IRI for schema:EmergencyService
  ///
  /// An emergency service, such as a fire station or ER.
  ///
  static const EmergencyService = IriTerm.prevalidated(
    'https://schema.org/EmergencyService',
  );

  /// IRI for schema:EmployeeRole
  ///
  /// A subclass of OrganizationRole used to describe employee relationships.
  ///
  static const EmployeeRole = IriTerm.prevalidated(
    'https://schema.org/EmployeeRole',
  );

  /// IRI for schema:EmployerAggregateRating
  ///
  /// An aggregate rating of an Organization related to its role as an employer.
  ///
  static const EmployerAggregateRating = IriTerm.prevalidated(
    'https://schema.org/EmployerAggregateRating',
  );

  /// IRI for schema:EmployerReview
  ///
  /// An {[EmployerReview]} is a review of an {[Organization]} regarding its role as an employer, written by a current or former employee of that organization.
  ///
  static const EmployerReview = IriTerm.prevalidated(
    'https://schema.org/EmployerReview',
  );

  /// IRI for schema:EmploymentAgency
  ///
  /// An employment agency.
  ///
  static const EmploymentAgency = IriTerm.prevalidated(
    'https://schema.org/EmploymentAgency',
  );

  /// IRI for schema:EndorseAction
  ///
  /// An agent approves/certifies/likes/supports/sanctions an object.
  ///
  static const EndorseAction = IriTerm.prevalidated(
    'https://schema.org/EndorseAction',
  );

  /// IRI for schema:EndorsementRating
  ///
  /// An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
  /// "Like" or "+1" on a social network. It can be considered the {[result]} of an {[EndorseAction]} in which the {[object]} of the action is rated positively by
  /// some {[agent]}. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the {[Action]}.
  ///
  /// An {[EndorsementRating]} may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
  /// endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
  ///
  ///
  static const EndorsementRating = IriTerm.prevalidated(
    'https://schema.org/EndorsementRating',
  );

  /// IRI for schema:Energy
  ///
  /// Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.
  ///
  static const Energy = IriTerm.prevalidated('https://schema.org/Energy');

  /// IRI for schema:EnergyConsumptionDetails
  ///
  /// EnergyConsumptionDetails represents information related to the energy efficiency of a product that consumes energy. The information that can be provided is based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) under the Energy Policy and Conservation Act (EPCA) in the US.
  ///
  static const EnergyConsumptionDetails = IriTerm.prevalidated(
    'https://schema.org/EnergyConsumptionDetails',
  );

  /// IRI for schema:EnergyEfficiencyEnumeration
  ///
  /// Enumerates energy efficiency levels (also known as "classes" or "ratings") and certifications that are part of several international energy efficiency standards.
  ///
  static const EnergyEfficiencyEnumeration = IriTerm.prevalidated(
    'https://schema.org/EnergyEfficiencyEnumeration',
  );

  /// IRI for schema:EnergyStarEnergyEfficiencyEnumeration
  ///
  /// Used to indicate whether a product is EnergyStar certified.
  ///
  static const EnergyStarEnergyEfficiencyEnumeration = IriTerm.prevalidated(
    'https://schema.org/EnergyStarEnergyEfficiencyEnumeration',
  );

  /// IRI for schema:EngineSpecification
  ///
  /// Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.
  ///
  static const EngineSpecification = IriTerm.prevalidated(
    'https://schema.org/EngineSpecification',
  );

  /// IRI for schema:EntertainmentBusiness
  ///
  /// A business providing entertainment.
  ///
  static const EntertainmentBusiness = IriTerm.prevalidated(
    'https://schema.org/EntertainmentBusiness',
  );

  /// IRI for schema:EntryPoint
  ///
  /// An entry point, within some Web-based protocol.
  ///
  static const EntryPoint = IriTerm.prevalidated(
    'https://schema.org/EntryPoint',
  );

  /// IRI for schema:Enumeration
  ///
  /// Lists or enumerations‚Äîfor example, a list of cuisines or music genres, etc.
  ///
  static const Enumeration = IriTerm.prevalidated(
    'https://schema.org/Enumeration',
  );

  /// IRI for schema:Episode
  ///
  /// A media episode (e.g. TV, radio, video game) which can be part of a series or season.
  ///
  static const Episode = IriTerm.prevalidated('https://schema.org/Episode');

  /// IRI for schema:Event
  ///
  /// An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the {[offers]} property. Repeated events may be structured as separate Event objects.
  ///
  static const Event = IriTerm.prevalidated('https://schema.org/Event');

  /// IRI for schema:EventAttendanceModeEnumeration
  ///
  /// An EventAttendanceModeEnumeration value is one of potentially several modes of organising an event, relating to whether it is online or offline.
  ///
  static const EventAttendanceModeEnumeration = IriTerm.prevalidated(
    'https://schema.org/EventAttendanceModeEnumeration',
  );

  /// IRI for schema:EventReservation
  ///
  /// A reservation for an event like a concert, sporting event, or lecture.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const EventReservation = IriTerm.prevalidated(
    'https://schema.org/EventReservation',
  );

  /// IRI for schema:EventSeries
  ///
  /// A series of {[Event]}s. Included events can relate with the series using the {[superEvent]} property.
  ///
  /// An EventSeries is a collection of events that share some unifying characteristic. For example, "The Olympic Games" is a series, which
  /// is repeated regularly. The "2012 London Olympics" can be presented both as an {[Event]} in the series "Olympic Games", and as an
  /// {[EventSeries]} that included a number of sporting competitions as Events.
  ///
  /// The nature of the association between the events in an {[EventSeries]} can vary, but typical examples could
  /// include a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.
  ///
  /// EventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without
  /// worrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries
  /// may seem more Event-like when the period of time is compact and when aspects such as location are fixed, but
  /// it may also sometimes prove useful to describe a longer-term series as an Event.
  ///
  ///
  static const EventSeries = IriTerm.prevalidated(
    'https://schema.org/EventSeries',
  );

  /// IRI for schema:EventStatusType
  ///
  /// EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
  ///
  static const EventStatusType = IriTerm.prevalidated(
    'https://schema.org/EventStatusType',
  );

  /// IRI for schema:EventVenue
  ///
  /// An event venue.
  ///
  static const EventVenue = IriTerm.prevalidated(
    'https://schema.org/EventVenue',
  );

  /// IRI for schema:ExchangeRateSpecification
  ///
  /// A structured value representing exchange rate.
  ///
  static const ExchangeRateSpecification = IriTerm.prevalidated(
    'https://schema.org/ExchangeRateSpecification',
  );

  /// IRI for schema:ExerciseAction
  ///
  /// The act of participating in exertive activity for the purposes of improving health and fitness.
  ///
  static const ExerciseAction = IriTerm.prevalidated(
    'https://schema.org/ExerciseAction',
  );

  /// IRI for schema:ExerciseGym
  ///
  /// A gym.
  ///
  static const ExerciseGym = IriTerm.prevalidated(
    'https://schema.org/ExerciseGym',
  );

  /// IRI for schema:ExercisePlan
  ///
  /// Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.
  ///
  static const ExercisePlan = IriTerm.prevalidated(
    'https://schema.org/ExercisePlan',
  );

  /// IRI for schema:ExhibitionEvent
  ///
  /// Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...
  ///
  static const ExhibitionEvent = IriTerm.prevalidated(
    'https://schema.org/ExhibitionEvent',
  );

  /// IRI for schema:FAQPage
  ///
  /// A {[FAQPage]} is a {[WebPage]} presenting one or more "[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)" (see also {[QAPage]}).
  ///
  static const FAQPage = IriTerm.prevalidated('https://schema.org/FAQPage');

  /// IRI for schema:FMRadioChannel
  ///
  /// A radio channel that uses FM.
  ///
  static const FMRadioChannel = IriTerm.prevalidated(
    'https://schema.org/FMRadioChannel',
  );

  /// IRI for schema:FastFoodRestaurant
  ///
  /// A fast-food restaurant.
  ///
  static const FastFoodRestaurant = IriTerm.prevalidated(
    'https://schema.org/FastFoodRestaurant',
  );

  /// IRI for schema:Festival
  ///
  /// Event type: Festival.
  ///
  static const Festival = IriTerm.prevalidated('https://schema.org/Festival');

  /// IRI for schema:FilmAction
  ///
  /// The act of capturing sound and moving images on film, video, or digitally.
  ///
  static const FilmAction = IriTerm.prevalidated(
    'https://schema.org/FilmAction',
  );

  /// IRI for schema:FinancialIncentive
  ///
  /// <p>Represents financial incentives for goods/services offered by an organization (or individual).</p>
  ///
  /// <p>Typically contains the {[name]} of the incentive, the {[incentivizedItem]}, the {[incentiveAmount]}, the {[incentiveStatus]}, {[incentiveType]}, the {[provider]} of the incentive, and {[eligibleWithSupplier]}.</p>
  ///
  /// <p>Optionally contains criteria on whether the incentive is limited based on {[purchaseType]}, {[purchasePriceLimit]}, {[incomeLimit]}, and the {[qualifiedExpense]}.
  ///
  ///
  static const FinancialIncentive = IriTerm.prevalidated(
    'https://schema.org/FinancialIncentive',
  );

  /// IRI for schema:FinancialProduct
  ///
  /// A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.
  ///
  static const FinancialProduct = IriTerm.prevalidated(
    'https://schema.org/FinancialProduct',
  );

  /// IRI for schema:FinancialService
  ///
  /// Financial services business.
  ///
  static const FinancialService = IriTerm.prevalidated(
    'https://schema.org/FinancialService',
  );

  /// IRI for schema:FindAction
  ///
  /// The act of finding an object.\n\nRelated actions:\n\n* {[SearchAction]}: FindAction is generally lead by a SearchAction, but not necessarily.
  ///
  static const FindAction = IriTerm.prevalidated(
    'https://schema.org/FindAction',
  );

  /// IRI for schema:FireStation
  ///
  /// A fire station. With firemen.
  ///
  static const FireStation = IriTerm.prevalidated(
    'https://schema.org/FireStation',
  );

  /// IRI for schema:Flight
  ///
  /// An airline flight.
  ///
  static const Flight = IriTerm.prevalidated('https://schema.org/Flight');

  /// IRI for schema:FlightReservation
  ///
  /// A reservation for air travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const FlightReservation = IriTerm.prevalidated(
    'https://schema.org/FlightReservation',
  );

  /// IRI for schema:Float
  ///
  /// Data type: Floating number.
  ///
  static const Float = IriTerm.prevalidated('https://schema.org/Float');

  /// IRI for schema:FloorPlan
  ///
  /// A FloorPlan is an explicit representation of a collection of similar accommodations, allowing the provision of common information (room counts, sizes, layout diagrams) and offers for rental or sale. In typical use, some {[ApartmentComplex]} has an {[accommodationFloorPlan]} which is a {[FloorPlan]}.  A FloorPlan is always in the context of a particular place, either a larger {[ApartmentComplex]} or a single {[Apartment]}. The visual/spatial aspects of a floor plan (i.e. room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can be indicated using {[image]}.
  ///
  static const FloorPlan = IriTerm.prevalidated('https://schema.org/FloorPlan');

  /// IRI for schema:Florist
  ///
  /// A florist.
  ///
  static const Florist = IriTerm.prevalidated('https://schema.org/Florist');

  /// IRI for schema:FollowAction
  ///
  /// The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.\n\nRelated actions:\n\n* {[BefriendAction]}: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.\n* {[SubscribeAction]}: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.\n* {[RegisterAction]}: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.\n* {[JoinAction]}: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.\n* {[TrackAction]}: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).
  ///
  static const FollowAction = IriTerm.prevalidated(
    'https://schema.org/FollowAction',
  );

  /// IRI for schema:FoodEstablishment
  ///
  /// A food-related business.
  ///
  static const FoodEstablishment = IriTerm.prevalidated(
    'https://schema.org/FoodEstablishment',
  );

  /// IRI for schema:FoodEstablishmentReservation
  ///
  /// A reservation to dine at a food-related business.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
  ///
  static const FoodEstablishmentReservation = IriTerm.prevalidated(
    'https://schema.org/FoodEstablishmentReservation',
  );

  /// IRI for schema:FoodEvent
  ///
  /// Event type: Food event.
  ///
  static const FoodEvent = IriTerm.prevalidated('https://schema.org/FoodEvent');

  /// IRI for schema:FoodService
  ///
  /// A food service, like breakfast, lunch, or dinner.
  ///
  static const FoodService = IriTerm.prevalidated(
    'https://schema.org/FoodService',
  );

  /// IRI for schema:FulfillmentTypeEnumeration
  ///
  /// A type of product fulfillment.
  ///
  static const FulfillmentTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypeEnumeration',
  );

  /// IRI for schema:FundingAgency
  ///
  /// A FundingAgency is an organization that implements one or more {[FundingScheme]}s and manages
  /// the granting process (via {[Grant]}s, typically {[MonetaryGrant]}s).
  /// A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.
  ///
  /// Examples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation, ...
  ///
  ///
  static const FundingAgency = IriTerm.prevalidated(
    'https://schema.org/FundingAgency',
  );

  /// IRI for schema:FundingScheme
  ///
  /// A FundingScheme combines organizational, project and policy aspects of grant-based funding
  /// that sets guidelines, principles and mechanisms to support other kinds of projects and activities.
  /// Funding is typically organized via {[Grant]} funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - {[FundingAgency]}s such as ERC, REA, ...
  ///
  static const FundingScheme = IriTerm.prevalidated(
    'https://schema.org/FundingScheme',
  );

  /// IRI for schema:FurnitureStore
  ///
  /// A furniture store.
  ///
  static const FurnitureStore = IriTerm.prevalidated(
    'https://schema.org/FurnitureStore',
  );

  /// IRI for schema:Game
  ///
  /// The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
  ///
  static const Game = IriTerm.prevalidated('https://schema.org/Game');

  /// IRI for schema:GameAvailabilityEnumeration
  ///
  /// For a {[VideoGame]}, such as used with a {[PlayGameAction]}, an enumeration of the kind of game availability offered.
  ///
  static const GameAvailabilityEnumeration = IriTerm.prevalidated(
    'https://schema.org/GameAvailabilityEnumeration',
  );

  /// IRI for schema:GamePlayMode
  ///
  /// Indicates whether this game is multi-player, co-op or single-player.
  ///
  static const GamePlayMode = IriTerm.prevalidated(
    'https://schema.org/GamePlayMode',
  );

  /// IRI for schema:GameServer
  ///
  /// Server that provides game interaction in a multiplayer game.
  ///
  static const GameServer = IriTerm.prevalidated(
    'https://schema.org/GameServer',
  );

  /// IRI for schema:GameServerStatus
  ///
  /// Status of a game server.
  ///
  static const GameServerStatus = IriTerm.prevalidated(
    'https://schema.org/GameServerStatus',
  );

  /// IRI for schema:GardenStore
  ///
  /// A garden store.
  ///
  static const GardenStore = IriTerm.prevalidated(
    'https://schema.org/GardenStore',
  );

  /// IRI for schema:GasStation
  ///
  /// A gas station.
  ///
  static const GasStation = IriTerm.prevalidated(
    'https://schema.org/GasStation',
  );

  /// IRI for schema:GatedResidenceCommunity
  ///
  /// Residence type: Gated community.
  ///
  static const GatedResidenceCommunity = IriTerm.prevalidated(
    'https://schema.org/GatedResidenceCommunity',
  );

  /// IRI for schema:GenderType
  ///
  /// An enumeration of genders.
  ///
  static const GenderType = IriTerm.prevalidated(
    'https://schema.org/GenderType',
  );

  /// IRI for schema:Gene
  ///
  /// A discrete unit of inheritance which affects one or more biological traits (Source: [https://en.wikipedia.org/wiki/Gene](https://en.wikipedia.org/wiki/Gene)). Examples include FOXP2 (Forkhead box protein P2), SCARNA21 (small Cajal body-specific RNA 21), A- (agouti genotype).
  ///
  static const Gene = IriTerm.prevalidated('https://schema.org/Gene');

  /// IRI for schema:GeneralContractor
  ///
  /// A general contractor.
  ///
  static const GeneralContractor = IriTerm.prevalidated(
    'https://schema.org/GeneralContractor',
  );

  /// IRI for schema:GeoCircle
  ///
  /// A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
  /// it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
  /// The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
  ///
  ///
  static const GeoCircle = IriTerm.prevalidated('https://schema.org/GeoCircle');

  /// IRI for schema:GeoCoordinates
  ///
  /// The geographic coordinates of a place or event.
  ///
  static const GeoCoordinates = IriTerm.prevalidated(
    'https://schema.org/GeoCoordinates',
  );

  /// IRI for schema:GeoShape
  ///
  /// The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.
  ///
  static const GeoShape = IriTerm.prevalidated('https://schema.org/GeoShape');

  /// IRI for schema:GeospatialGeometry
  ///
  /// (Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.
  ///
  static const GeospatialGeometry = IriTerm.prevalidated(
    'https://schema.org/GeospatialGeometry',
  );

  /// IRI for schema:GiveAction
  ///
  /// The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.\n\nRelated actions:\n\n* {[TakeAction]}: Reciprocal of GiveAction.\n* {[SendAction]}: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).
  ///
  static const GiveAction = IriTerm.prevalidated(
    'https://schema.org/GiveAction',
  );

  /// IRI for schema:GolfCourse
  ///
  /// A golf course.
  ///
  static const GolfCourse = IriTerm.prevalidated(
    'https://schema.org/GolfCourse',
  );

  /// IRI for schema:GovernmentBenefitsType
  ///
  /// GovernmentBenefitsType enumerates several kinds of government benefits to support the COVID-19 situation. Note that this structure may not capture all benefits offered.
  ///
  static const GovernmentBenefitsType = IriTerm.prevalidated(
    'https://schema.org/GovernmentBenefitsType',
  );

  /// IRI for schema:GovernmentBuilding
  ///
  /// A government building.
  ///
  static const GovernmentBuilding = IriTerm.prevalidated(
    'https://schema.org/GovernmentBuilding',
  );

  /// IRI for schema:GovernmentOffice
  ///
  /// A government office&#x2014;for example, an IRS or DMV office.
  ///
  static const GovernmentOffice = IriTerm.prevalidated(
    'https://schema.org/GovernmentOffice',
  );

  /// IRI for schema:GovernmentOrganization
  ///
  /// A governmental organization or agency.
  ///
  static const GovernmentOrganization = IriTerm.prevalidated(
    'https://schema.org/GovernmentOrganization',
  );

  /// IRI for schema:GovernmentPermit
  ///
  /// A permit issued by a government agency.
  ///
  static const GovernmentPermit = IriTerm.prevalidated(
    'https://schema.org/GovernmentPermit',
  );

  /// IRI for schema:GovernmentService
  ///
  /// A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
  ///
  static const GovernmentService = IriTerm.prevalidated(
    'https://schema.org/GovernmentService',
  );

  /// IRI for schema:Grant
  ///
  /// A grant, typically financial or otherwise quantifiable, of resources. Typically a {[funder]} sponsors some {[MonetaryAmount]} to an {[Organization]} or {[Person]},
  /// sometimes not necessarily via a dedicated or long-lived {[Project]}, resulting in one or more outputs, or {[fundedItem]}s. For financial sponsorship, indicate the {[funder]} of a {[MonetaryGrant]}. For non-financial support, indicate {[sponsor]} of {[Grant]}s of resources (e.g. office space).
  ///
  /// Grants support  activities directed towards some agreed collective goals, often but not always organized as {[Project]}s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.
  ///
  /// The amount of a {[Grant]} is represented using {[amount]} as a {[MonetaryAmount]}.
  ///
  ///
  static const Grant = IriTerm.prevalidated('https://schema.org/Grant');

  /// IRI for schema:GroceryStore
  ///
  /// A grocery store.
  ///
  static const GroceryStore = IriTerm.prevalidated(
    'https://schema.org/GroceryStore',
  );

  /// IRI for schema:Guide
  ///
  /// {[Guide]} is a page or article that recommends specific products or services, or aspects of a thing for a user to consider. A {[Guide]} may represent a Buying Guide and detail aspects of products or services for a user to consider. A {[Guide]} may represent a Product Guide and recommend specific products or services. A {[Guide]} may represent a Ranked List and recommend specific products or services with ranking.
  ///
  static const Guide = IriTerm.prevalidated('https://schema.org/Guide');

  /// IRI for schema:HVACBusiness
  ///
  /// A business that provides Heating, Ventilation and Air Conditioning services.
  ///
  static const HVACBusiness = IriTerm.prevalidated(
    'https://schema.org/HVACBusiness',
  );

  /// IRI for schema:Hackathon
  ///
  /// A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.
  ///
  static const Hackathon = IriTerm.prevalidated('https://schema.org/Hackathon');

  /// IRI for schema:HairSalon
  ///
  /// A hair salon.
  ///
  static const HairSalon = IriTerm.prevalidated('https://schema.org/HairSalon');

  /// IRI for schema:HardwareStore
  ///
  /// A hardware store.
  ///
  static const HardwareStore = IriTerm.prevalidated(
    'https://schema.org/HardwareStore',
  );

  /// IRI for schema:HealthAndBeautyBusiness
  ///
  /// Health and beauty.
  ///
  static const HealthAndBeautyBusiness = IriTerm.prevalidated(
    'https://schema.org/HealthAndBeautyBusiness',
  );

  /// IRI for schema:HealthAspectEnumeration
  ///
  /// HealthAspectEnumeration enumerates several aspects of health content online, each of which might be described using {[hasHealthAspect]} and {[HealthTopicContent]}.
  ///
  static const HealthAspectEnumeration = IriTerm.prevalidated(
    'https://schema.org/HealthAspectEnumeration',
  );

  /// IRI for schema:HealthClub
  ///
  /// A health club.
  ///
  static const HealthClub = IriTerm.prevalidated(
    'https://schema.org/HealthClub',
  );

  /// IRI for schema:HealthInsurancePlan
  ///
  /// A US-style health insurance plan, including PPOs, EPOs, and HMOs.
  ///
  static const HealthInsurancePlan = IriTerm.prevalidated(
    'https://schema.org/HealthInsurancePlan',
  );

  /// IRI for schema:HealthPlanCostSharingSpecification
  ///
  /// A description of costs to the patient under a given network or formulary.
  ///
  static const HealthPlanCostSharingSpecification = IriTerm.prevalidated(
    'https://schema.org/HealthPlanCostSharingSpecification',
  );

  /// IRI for schema:HealthPlanFormulary
  ///
  /// For a given health insurance plan, the specification for costs and coverage of prescription drugs.
  ///
  static const HealthPlanFormulary = IriTerm.prevalidated(
    'https://schema.org/HealthPlanFormulary',
  );

  /// IRI for schema:HealthPlanNetwork
  ///
  /// A US-style health insurance plan network.
  ///
  static const HealthPlanNetwork = IriTerm.prevalidated(
    'https://schema.org/HealthPlanNetwork',
  );

  /// IRI for schema:HealthTopicContent
  ///
  /// {[HealthTopicContent]} is {[WebContent]} that is about some aspect of a health topic, e.g. a condition, its symptoms or treatments. Such content may be comprised of several parts or sections and use different types of media. Multiple instances of {[WebContent]} (and hence {[HealthTopicContent]}) can be related using {[hasPart]} / {[isPartOf]} where there is some kind of content hierarchy, and their content described with {[about]} and {[mentions]} e.g. building upon the existing {[MedicalCondition]} vocabulary.
  ///
  ///
  static const HealthTopicContent = IriTerm.prevalidated(
    'https://schema.org/HealthTopicContent',
  );

  /// IRI for schema:HighSchool
  ///
  /// A high school.
  ///
  static const HighSchool = IriTerm.prevalidated(
    'https://schema.org/HighSchool',
  );

  /// IRI for schema:HinduTemple
  ///
  /// A Hindu temple.
  ///
  static const HinduTemple = IriTerm.prevalidated(
    'https://schema.org/HinduTemple',
  );

  /// IRI for schema:HobbyShop
  ///
  /// A store that sells materials useful or necessary for various hobbies.
  ///
  static const HobbyShop = IriTerm.prevalidated('https://schema.org/HobbyShop');

  /// IRI for schema:HomeAndConstructionBusiness
  ///
  /// A construction business.\n\nA HomeAndConstructionBusiness is a {[LocalBusiness]} that provides services around homes and buildings.\n\nAs a {[LocalBusiness]} it can be described as a {[provider]} of one or more {[Service]}\(s).
  ///
  static const HomeAndConstructionBusiness = IriTerm.prevalidated(
    'https://schema.org/HomeAndConstructionBusiness',
  );

  /// IRI for schema:HomeGoodsStore
  ///
  /// A home goods store.
  ///
  static const HomeGoodsStore = IriTerm.prevalidated(
    'https://schema.org/HomeGoodsStore',
  );

  /// IRI for schema:Hospital
  ///
  /// A hospital.
  ///
  static const Hospital = IriTerm.prevalidated('https://schema.org/Hospital');

  /// IRI for schema:Hostel
  ///
  /// A hostel - cheap accommodation, often in shared dormitories.
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Hostel = IriTerm.prevalidated('https://schema.org/Hostel');

  /// IRI for schema:Hotel
  ///
  /// A hotel is an establishment that provides lodging paid on a short-term basis (source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Hotel = IriTerm.prevalidated('https://schema.org/Hotel');

  /// IRI for schema:HotelRoom
  ///
  /// A hotel room is a single room in a hotel.
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const HotelRoom = IriTerm.prevalidated('https://schema.org/HotelRoom');

  /// IRI for schema:House
  ///
  /// A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
  ///
  static const House = IriTerm.prevalidated('https://schema.org/House');

  /// IRI for schema:HousePainter
  ///
  /// A house painting service.
  ///
  static const HousePainter = IriTerm.prevalidated(
    'https://schema.org/HousePainter',
  );

  /// IRI for schema:HowTo
  ///
  /// Instructions that explain how to achieve a result by performing a sequence of steps.
  ///
  static const HowTo = IriTerm.prevalidated('https://schema.org/HowTo');

  /// IRI for schema:HowToDirection
  ///
  /// A direction indicating a single action to do in the instructions for how to achieve a result.
  ///
  static const HowToDirection = IriTerm.prevalidated(
    'https://schema.org/HowToDirection',
  );

  /// IRI for schema:HowToItem
  ///
  /// An item used as either a tool or supply when performing the instructions for how to achieve a result.
  ///
  static const HowToItem = IriTerm.prevalidated('https://schema.org/HowToItem');

  /// IRI for schema:HowToSection
  ///
  /// A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).
  ///
  static const HowToSection = IriTerm.prevalidated(
    'https://schema.org/HowToSection',
  );

  /// IRI for schema:HowToStep
  ///
  /// A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.
  ///
  static const HowToStep = IriTerm.prevalidated('https://schema.org/HowToStep');

  /// IRI for schema:HowToSupply
  ///
  /// A supply consumed when performing the instructions for how to achieve a result.
  ///
  static const HowToSupply = IriTerm.prevalidated(
    'https://schema.org/HowToSupply',
  );

  /// IRI for schema:HowToTip
  ///
  /// An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).
  ///
  static const HowToTip = IriTerm.prevalidated('https://schema.org/HowToTip');

  /// IRI for schema:HowToTool
  ///
  /// A tool used (but not consumed) when performing instructions for how to achieve a result.
  ///
  static const HowToTool = IriTerm.prevalidated('https://schema.org/HowToTool');

  /// IRI for schema:HyperToc
  ///
  /// A HyperToc represents a hypertext table of contents for complex media objects, such as {[VideoObject]}, {[AudioObject]}. Items in the table of contents are indicated using the {[tocEntry]} property, and typed {[HyperTocEntry]}. For cases where the same larger work is split into multiple files, {[associatedMedia]} can be used on individual {[HyperTocEntry]} items.
  ///
  static const HyperToc = IriTerm.prevalidated('https://schema.org/HyperToc');

  /// IRI for schema:HyperTocEntry
  ///
  /// A HyperToEntry is an item within a {[HyperToc]}, which represents a hypertext table of contents for complex media objects, such as {[VideoObject]}, {[AudioObject]}. The media object itself is indicated using {[associatedMedia]}. Each section of interest within that content can be described with a {[HyperTocEntry]}, with associated {[startOffset]} and {[endOffset]}. When several entries are all from the same file, {[associatedMedia]} is used on the overarching {[HyperTocEntry]}; if the content has been split into multiple files, they can be referenced using {[associatedMedia]} on each {[HyperTocEntry]}.
  ///
  static const HyperTocEntry = IriTerm.prevalidated(
    'https://schema.org/HyperTocEntry',
  );

  /// IRI for schema:IPTCDigitalSourceEnumeration
  ///
  /// <a href="https://www.iptc.org/">IPTC</a> "Digital Source" codes for use with the {[digitalSourceType]} property, providing information about the source for a digital media object.
  /// In general these codes are not declared here to be mutually exclusive, although some combinations would be contradictory if applied simultaneously, or might be considered mutually incompatible by upstream maintainers of the definitions. See the IPTC <a href="https://www.iptc.org/std/photometadata/documentation/userguide/">documentation</a>
  /// for <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">detailed definitions</a> of all terms.
  ///
  static const IPTCDigitalSourceEnumeration = IriTerm.prevalidated(
    'https://schema.org/IPTCDigitalSourceEnumeration',
  );

  /// IRI for schema:IceCreamShop
  ///
  /// An ice cream shop.
  ///
  static const IceCreamShop = IriTerm.prevalidated(
    'https://schema.org/IceCreamShop',
  );

  /// IRI for schema:IgnoreAction
  ///
  /// The act of intentionally disregarding the object. An agent ignores an object.
  ///
  static const IgnoreAction = IriTerm.prevalidated(
    'https://schema.org/IgnoreAction',
  );

  /// IRI for schema:ImageGallery
  ///
  /// Web page type: Image gallery page.
  ///
  static const ImageGallery = IriTerm.prevalidated(
    'https://schema.org/ImageGallery',
  );

  /// IRI for schema:ImageObject
  ///
  /// An image file.
  ///
  static const ImageObject = IriTerm.prevalidated(
    'https://schema.org/ImageObject',
  );

  /// IRI for schema:ImageObjectSnapshot
  ///
  /// A specific and exact (byte-for-byte) version of an {[ImageObject]}. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata (e.g. XMP, EXIF) the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
  ///
  static const ImageObjectSnapshot = IriTerm.prevalidated(
    'https://schema.org/ImageObjectSnapshot',
  );

  /// IRI for schema:ImagingTest
  ///
  /// Any medical imaging modality typically used for diagnostic purposes.
  ///
  static const ImagingTest = IriTerm.prevalidated(
    'https://schema.org/ImagingTest',
  );

  /// IRI for schema:IncentiveQualifiedExpenseType
  ///
  /// The types of expenses that are covered by the incentive. For example some incentives are only for the goods (tangible items) but the services (labor) are excluded.
  ///
  static const IncentiveQualifiedExpenseType = IriTerm.prevalidated(
    'https://schema.org/IncentiveQualifiedExpenseType',
  );

  /// IRI for schema:IncentiveStatus
  ///
  /// Enumerates a status for an incentive, such as whether it is active.
  ///
  static const IncentiveStatus = IriTerm.prevalidated(
    'https://schema.org/IncentiveStatus',
  );

  /// IRI for schema:IncentiveType
  ///
  /// Enumerates common financial incentives for products, including tax credits, tax deductions, rebates and subsidies, etc.
  ///
  static const IncentiveType = IriTerm.prevalidated(
    'https://schema.org/IncentiveType',
  );

  /// IRI for schema:IndividualPhysician
  ///
  /// An individual medical practitioner. For their official address use {[address]}, for affiliations to hospitals use {[hospitalAffiliation]}.
  /// The {[practicesAt]} property can be used to indicate {[MedicalOrganization]} hospitals, clinics, pharmacies etc. where this physician practices.
  ///
  static const IndividualPhysician = IriTerm.prevalidated(
    'https://schema.org/IndividualPhysician',
  );

  /// IRI for schema:IndividualProduct
  ///
  /// A single, identifiable product instance (e.g. a laptop with a particular serial number).
  ///
  static const IndividualProduct = IriTerm.prevalidated(
    'https://schema.org/IndividualProduct',
  );

  /// IRI for schema:InfectiousAgentClass
  ///
  /// Classes of agents or pathogens that transmit infectious diseases. Enumerated type.
  ///
  static const InfectiousAgentClass = IriTerm.prevalidated(
    'https://schema.org/InfectiousAgentClass',
  );

  /// IRI for schema:InfectiousDisease
  ///
  /// An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.
  ///
  static const InfectiousDisease = IriTerm.prevalidated(
    'https://schema.org/InfectiousDisease',
  );

  /// IRI for schema:InformAction
  ///
  /// The act of notifying someone of information pertinent to them, with no expectation of a response.
  ///
  static const InformAction = IriTerm.prevalidated(
    'https://schema.org/InformAction',
  );

  /// IRI for schema:InsertAction
  ///
  /// The act of adding at a specific location in an ordered collection.
  ///
  static const InsertAction = IriTerm.prevalidated(
    'https://schema.org/InsertAction',
  );

  /// IRI for schema:InstallAction
  ///
  /// The act of installing an application.
  ///
  static const InstallAction = IriTerm.prevalidated(
    'https://schema.org/InstallAction',
  );

  /// IRI for schema:InsuranceAgency
  ///
  /// An Insurance agency.
  ///
  static const InsuranceAgency = IriTerm.prevalidated(
    'https://schema.org/InsuranceAgency',
  );

  /// IRI for schema:Intangible
  ///
  /// A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
  ///
  static const Intangible = IriTerm.prevalidated(
    'https://schema.org/Intangible',
  );

  /// IRI for schema:Integer
  ///
  /// Data type: Integer.
  ///
  static const Integer = IriTerm.prevalidated('https://schema.org/Integer');

  /// IRI for schema:InteractAction
  ///
  /// The act of interacting with another person or organization.
  ///
  static const InteractAction = IriTerm.prevalidated(
    'https://schema.org/InteractAction',
  );

  /// IRI for schema:InteractionCounter
  ///
  /// A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.
  ///
  static const InteractionCounter = IriTerm.prevalidated(
    'https://schema.org/InteractionCounter',
  );

  /// IRI for schema:InternetCafe
  ///
  /// An internet cafe.
  ///
  static const InternetCafe = IriTerm.prevalidated(
    'https://schema.org/InternetCafe',
  );

  /// IRI for schema:InvestmentFund
  ///
  /// A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.
  ///
  static const InvestmentFund = IriTerm.prevalidated(
    'https://schema.org/InvestmentFund',
  );

  /// IRI for schema:InvestmentOrDeposit
  ///
  /// A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.
  ///
  static const InvestmentOrDeposit = IriTerm.prevalidated(
    'https://schema.org/InvestmentOrDeposit',
  );

  /// IRI for schema:InviteAction
  ///
  /// The act of asking someone to attend an event. Reciprocal of RsvpAction.
  ///
  static const InviteAction = IriTerm.prevalidated(
    'https://schema.org/InviteAction',
  );

  /// IRI for schema:Invoice
  ///
  /// A statement of the money due for goods or services; a bill.
  ///
  static const Invoice = IriTerm.prevalidated('https://schema.org/Invoice');

  /// IRI for schema:ItemAvailability
  ///
  /// A list of possible product availability options.
  ///
  static const ItemAvailability = IriTerm.prevalidated(
    'https://schema.org/ItemAvailability',
  );

  /// IRI for schema:ItemList
  ///
  /// A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
  ///
  static const ItemList = IriTerm.prevalidated('https://schema.org/ItemList');

  /// IRI for schema:ItemListOrderType
  ///
  /// Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.
  ///
  static const ItemListOrderType = IriTerm.prevalidated(
    'https://schema.org/ItemListOrderType',
  );

  /// IRI for schema:ItemPage
  ///
  /// A page devoted to a single item, such as a particular product or hotel.
  ///
  static const ItemPage = IriTerm.prevalidated('https://schema.org/ItemPage');

  /// IRI for schema:JewelryStore
  ///
  /// A jewelry store.
  ///
  static const JewelryStore = IriTerm.prevalidated(
    'https://schema.org/JewelryStore',
  );

  /// IRI for schema:JobPosting
  ///
  /// A listing that describes a job opening in a certain organization.
  ///
  static const JobPosting = IriTerm.prevalidated(
    'https://schema.org/JobPosting',
  );

  /// IRI for schema:JoinAction
  ///
  /// An agent joins an event/group with participants/friends at a location.\n\nRelated actions:\n\n* {[RegisterAction]}: Unlike RegisterAction, JoinAction refers to joining a group/team of people.\n* {[SubscribeAction]}: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.\n* {[FollowAction]}: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.
  ///
  static const JoinAction = IriTerm.prevalidated(
    'https://schema.org/JoinAction',
  );

  /// IRI for schema:Joint
  ///
  /// The anatomical location at which two or more bones make contact.
  ///
  static const Joint = IriTerm.prevalidated('https://schema.org/Joint');

  /// IRI for schema:LakeBodyOfWater
  ///
  /// A lake (for example, Lake Pontrachain).
  ///
  static const LakeBodyOfWater = IriTerm.prevalidated(
    'https://schema.org/LakeBodyOfWater',
  );

  /// IRI for schema:Landform
  ///
  /// A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
  ///
  static const Landform = IriTerm.prevalidated('https://schema.org/Landform');

  /// IRI for schema:LandmarksOrHistoricalBuildings
  ///
  /// An historical landmark or building.
  ///
  static const LandmarksOrHistoricalBuildings = IriTerm.prevalidated(
    'https://schema.org/LandmarksOrHistoricalBuildings',
  );

  /// IRI for schema:Language
  ///
  /// Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) can be used via the {[alternateName]} property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using {[ComputerLanguage]}.
  ///
  static const Language = IriTerm.prevalidated('https://schema.org/Language');

  /// IRI for schema:LearningResource
  ///
  /// The LearningResource type can be used to indicate {[CreativeWork]}s (whether physical or digital) that have a particular and explicit orientation towards learning, education, skill acquisition, and other educational purposes.
  ///
  /// {[LearningResource]} is expected to be used as an addition to a primary type such as {[Book]}, {[VideoObject]}, {[Product]} etc.
  ///
  /// {[EducationEvent]} serves a similar purpose for event-like things (e.g. a {[Trip]}). A {[LearningResource]} may be created as a result of an {[EducationEvent]}, for example by recording one.
  ///
  static const LearningResource = IriTerm.prevalidated(
    'https://schema.org/LearningResource',
  );

  /// IRI for schema:LeaveAction
  ///
  /// An agent leaves an event / group with participants/friends at a location.\n\nRelated actions:\n\n* {[JoinAction]}: The antonym of LeaveAction.\n* {[UnRegisterAction]}: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.
  ///
  static const LeaveAction = IriTerm.prevalidated(
    'https://schema.org/LeaveAction',
  );

  /// IRI for schema:LegalForceStatus
  ///
  /// A list of possible statuses for the legal force of a legislation.
  ///
  static const LegalForceStatus = IriTerm.prevalidated(
    'https://schema.org/LegalForceStatus',
  );

  /// IRI for schema:LegalService
  ///
  /// A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.\n\nAs a {[LocalBusiness]} it can be described as a {[provider]} of one or more {[Service]}\(s).
  ///
  static const LegalService = IriTerm.prevalidated(
    'https://schema.org/LegalService',
  );

  /// IRI for schema:LegalValueLevel
  ///
  /// A list of possible levels for the legal validity of a legislation.
  ///
  static const LegalValueLevel = IriTerm.prevalidated(
    'https://schema.org/LegalValueLevel',
  );

  /// IRI for schema:Legislation
  ///
  /// A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).
  ///
  static const Legislation = IriTerm.prevalidated(
    'https://schema.org/Legislation',
  );

  /// IRI for schema:LegislationObject
  ///
  /// A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.
  ///
  static const LegislationObject = IriTerm.prevalidated(
    'https://schema.org/LegislationObject',
  );

  /// IRI for schema:LegislativeBuilding
  ///
  /// A legislative building&#x2014;for example, the state capitol.
  ///
  static const LegislativeBuilding = IriTerm.prevalidated(
    'https://schema.org/LegislativeBuilding',
  );

  /// IRI for schema:LendAction
  ///
  /// The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.\n\nRelated actions:\n\n* {[BorrowAction]}: Reciprocal of LendAction.
  ///
  static const LendAction = IriTerm.prevalidated(
    'https://schema.org/LendAction',
  );

  /// IRI for schema:Library
  ///
  /// A library.
  ///
  static const Library = IriTerm.prevalidated('https://schema.org/Library');

  /// IRI for schema:LibrarySystem
  ///
  /// A {[LibrarySystem]} is a collaborative system amongst several libraries.
  ///
  static const LibrarySystem = IriTerm.prevalidated(
    'https://schema.org/LibrarySystem',
  );

  /// IRI for schema:LifestyleModification
  ///
  /// A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.
  ///
  static const LifestyleModification = IriTerm.prevalidated(
    'https://schema.org/LifestyleModification',
  );

  /// IRI for schema:Ligament
  ///
  /// A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.
  ///
  static const Ligament = IriTerm.prevalidated('https://schema.org/Ligament');

  /// IRI for schema:LikeAction
  ///
  /// The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
  ///
  static const LikeAction = IriTerm.prevalidated(
    'https://schema.org/LikeAction',
  );

  /// IRI for schema:LinkRole
  ///
  /// A Role that represents a Web link, e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types, e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.
  ///
  static const LinkRole = IriTerm.prevalidated('https://schema.org/LinkRole');

  /// IRI for schema:LiquorStore
  ///
  /// A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
  ///
  static const LiquorStore = IriTerm.prevalidated(
    'https://schema.org/LiquorStore',
  );

  /// IRI for schema:ListItem
  ///
  /// An list item, e.g. a step in a checklist or how-to description.
  ///
  static const ListItem = IriTerm.prevalidated('https://schema.org/ListItem');

  /// IRI for schema:ListenAction
  ///
  /// The act of consuming audio content.
  ///
  static const ListenAction = IriTerm.prevalidated(
    'https://schema.org/ListenAction',
  );

  /// IRI for schema:LiteraryEvent
  ///
  /// Event type: Literary event.
  ///
  static const LiteraryEvent = IriTerm.prevalidated(
    'https://schema.org/LiteraryEvent',
  );

  /// IRI for schema:LiveBlogPosting
  ///
  /// A {[LiveBlogPosting]} is a {[BlogPosting]} intended to provide a rolling textual coverage of an ongoing event through continuous updates.
  ///
  static const LiveBlogPosting = IriTerm.prevalidated(
    'https://schema.org/LiveBlogPosting',
  );

  /// IRI for schema:LoanOrCredit
  ///
  /// A financial product for the loaning of an amount of money, or line of credit, under agreed terms and charges.
  ///
  static const LoanOrCredit = IriTerm.prevalidated(
    'https://schema.org/LoanOrCredit',
  );

  /// IRI for schema:LocalBusiness
  ///
  /// A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
  ///
  static const LocalBusiness = IriTerm.prevalidated(
    'https://schema.org/LocalBusiness',
  );

  /// IRI for schema:LocationFeatureSpecification
  ///
  /// Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.
  ///
  static const LocationFeatureSpecification = IriTerm.prevalidated(
    'https://schema.org/LocationFeatureSpecification',
  );

  /// IRI for schema:Locksmith
  ///
  /// A locksmith.
  ///
  static const Locksmith = IriTerm.prevalidated('https://schema.org/Locksmith');

  /// IRI for schema:LodgingBusiness
  ///
  /// A lodging business, such as a motel, hotel, or inn.
  ///
  static const LodgingBusiness = IriTerm.prevalidated(
    'https://schema.org/LodgingBusiness',
  );

  /// IRI for schema:LodgingReservation
  ///
  /// A reservation for lodging at a hotel, motel, inn, etc.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
  ///
  static const LodgingReservation = IriTerm.prevalidated(
    'https://schema.org/LodgingReservation',
  );

  /// IRI for schema:LoseAction
  ///
  /// The act of being defeated in a competitive activity.
  ///
  static const LoseAction = IriTerm.prevalidated(
    'https://schema.org/LoseAction',
  );

  /// IRI for schema:LymphaticVessel
  ///
  /// A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.
  ///
  static const LymphaticVessel = IriTerm.prevalidated(
    'https://schema.org/LymphaticVessel',
  );

  /// IRI for schema:Manuscript
  ///
  /// A book, document, or piece of music written by hand rather than typed or printed.
  ///
  static const Manuscript = IriTerm.prevalidated(
    'https://schema.org/Manuscript',
  );

  /// IRI for schema:Map
  ///
  /// A map.
  ///
  static const Map = IriTerm.prevalidated('https://schema.org/Map');

  /// IRI for schema:MapCategoryType
  ///
  /// An enumeration of several kinds of Map.
  ///
  static const MapCategoryType = IriTerm.prevalidated(
    'https://schema.org/MapCategoryType',
  );

  /// IRI for schema:MarryAction
  ///
  /// The act of marrying a person.
  ///
  static const MarryAction = IriTerm.prevalidated(
    'https://schema.org/MarryAction',
  );

  /// IRI for schema:Mass
  ///
  /// Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.
  ///
  static const Mass = IriTerm.prevalidated('https://schema.org/Mass');

  /// IRI for schema:MathSolver
  ///
  /// A math solver which is capable of solving a subset of mathematical problems.
  ///
  static const MathSolver = IriTerm.prevalidated(
    'https://schema.org/MathSolver',
  );

  /// IRI for schema:MaximumDoseSchedule
  ///
  /// The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
  ///
  static const MaximumDoseSchedule = IriTerm.prevalidated(
    'https://schema.org/MaximumDoseSchedule',
  );

  /// IRI for schema:MeasurementMethodEnum
  ///
  /// Enumeration(s) for use with {[measurementMethod]}.
  ///
  static const MeasurementMethodEnum = IriTerm.prevalidated(
    'https://schema.org/MeasurementMethodEnum',
  );

  /// IRI for schema:MeasurementTypeEnumeration
  ///
  /// Enumeration of common measurement types (or dimensions), for example "chest" for a person, "inseam" for pants, "gauge" for screws, or "wheel" for bicycles.
  ///
  static const MeasurementTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/MeasurementTypeEnumeration',
  );

  /// IRI for schema:MediaEnumeration
  ///
  /// MediaEnumeration enumerations are lists of codes, labels etc. useful for describing media objects. They may be reflections of externally developed lists, or created at schema.org, or a combination.
  ///
  static const MediaEnumeration = IriTerm.prevalidated(
    'https://schema.org/MediaEnumeration',
  );

  /// IRI for schema:MediaGallery
  ///
  /// Web page type: Media gallery page. A mixed-media page that can contain media such as images, videos, and other multimedia.
  ///
  static const MediaGallery = IriTerm.prevalidated(
    'https://schema.org/MediaGallery',
  );

  /// IRI for schema:MediaManipulationRatingEnumeration
  ///
  /// Codes for use with the {[mediaAuthenticityCategory]} property, indicating the authenticity of a media object (in the context of how it was published or shared). In general these codes are not mutually exclusive, although some combinations (such as 'original' versus 'transformed', 'edited' and 'staged') would be contradictory if applied in the same {[MediaReview]}. Note that the application of these codes is with regard to a piece of media shared or published in a particular context.
  ///
  static const MediaManipulationRatingEnumeration = IriTerm.prevalidated(
    'https://schema.org/MediaManipulationRatingEnumeration',
  );

  /// IRI for schema:MediaObject
  ///
  /// A media object, such as an image, video, audio, or text object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
  ///
  static const MediaObject = IriTerm.prevalidated(
    'https://schema.org/MediaObject',
  );

  /// IRI for schema:MediaReview
  ///
  /// A {[MediaReview]} is a more specialized form of Review dedicated to the evaluation of media content online, typically in the context of fact-checking and misinformation.
  /// For more general reviews of media in the broader sense, use {[UserReview]}, {[CriticReview]} or other {[Review]} types. This definition is
  /// a work in progress. While the {[MediaManipulationRatingEnumeration]} list reflects significant community review amongst fact-checkers and others working
  /// to combat misinformation, the specific structures for representing media objects, their versions and publication context, are still evolving. Similarly, best practices for the relationship between {[MediaReview]} and {[ClaimReview]} markup have not yet been finalized.
  ///
  static const MediaReview = IriTerm.prevalidated(
    'https://schema.org/MediaReview',
  );

  /// IRI for schema:MediaReviewItem
  ///
  /// Represents an item or group of closely related items treated as a unit for the sake of evaluation in a {[MediaReview]}. Authorship etc. apply to the items rather than to the curation/grouping or reviewing party.
  ///
  static const MediaReviewItem = IriTerm.prevalidated(
    'https://schema.org/MediaReviewItem',
  );

  /// IRI for schema:MediaSubscription
  ///
  /// A subscription which allows a user to access media including audio, video, books, etc.
  ///
  static const MediaSubscription = IriTerm.prevalidated(
    'https://schema.org/MediaSubscription',
  );

  /// IRI for schema:MedicalAudience
  ///
  /// Target audiences for medical web pages.
  ///
  static const MedicalAudience = IriTerm.prevalidated(
    'https://schema.org/MedicalAudience',
  );

  /// IRI for schema:MedicalAudienceType
  ///
  /// Target audiences types for medical web pages. Enumerated type.
  ///
  static const MedicalAudienceType = IriTerm.prevalidated(
    'https://schema.org/MedicalAudienceType',
  );

  /// IRI for schema:MedicalBusiness
  ///
  /// A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include different businesses run by health professionals.
  ///
  static const MedicalBusiness = IriTerm.prevalidated(
    'https://schema.org/MedicalBusiness',
  );

  /// IRI for schema:MedicalCause
  ///
  /// The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.
  ///
  static const MedicalCause = IriTerm.prevalidated(
    'https://schema.org/MedicalCause',
  );

  /// IRI for schema:MedicalClinic
  ///
  /// A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.
  ///
  static const MedicalClinic = IriTerm.prevalidated(
    'https://schema.org/MedicalClinic',
  );

  /// IRI for schema:MedicalCode
  ///
  /// A code for a medical entity.
  ///
  static const MedicalCode = IriTerm.prevalidated(
    'https://schema.org/MedicalCode',
  );

  /// IRI for schema:MedicalCondition
  ///
  /// Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
  ///
  static const MedicalCondition = IriTerm.prevalidated(
    'https://schema.org/MedicalCondition',
  );

  /// IRI for schema:MedicalConditionStage
  ///
  /// A stage of a medical condition, such as 'Stage IIIa'.
  ///
  static const MedicalConditionStage = IriTerm.prevalidated(
    'https://schema.org/MedicalConditionStage',
  );

  /// IRI for schema:MedicalContraindication
  ///
  /// A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but these risks may be outweighed by other considerations or mitigated by other measures).
  ///
  static const MedicalContraindication = IriTerm.prevalidated(
    'https://schema.org/MedicalContraindication',
  );

  /// IRI for schema:MedicalDevice
  ///
  /// Any object used in a medical capacity, such as to diagnose or treat a patient.
  ///
  static const MedicalDevice = IriTerm.prevalidated(
    'https://schema.org/MedicalDevice',
  );

  /// IRI for schema:MedicalDevicePurpose
  ///
  /// Categories of medical devices, organized by the purpose or intended use of the device.
  ///
  static const MedicalDevicePurpose = IriTerm.prevalidated(
    'https://schema.org/MedicalDevicePurpose',
  );

  /// IRI for schema:MedicalEntity
  ///
  /// The most generic type of entity related to health and the practice of medicine.
  ///
  static const MedicalEntity = IriTerm.prevalidated(
    'https://schema.org/MedicalEntity',
  );

  /// IRI for schema:MedicalEnumeration
  ///
  /// Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.
  ///
  static const MedicalEnumeration = IriTerm.prevalidated(
    'https://schema.org/MedicalEnumeration',
  );

  /// IRI for schema:MedicalEvidenceLevel
  ///
  /// Level of evidence for a medical guideline. Enumerated type.
  ///
  static const MedicalEvidenceLevel = IriTerm.prevalidated(
    'https://schema.org/MedicalEvidenceLevel',
  );

  /// IRI for schema:MedicalGuideline
  ///
  /// Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.
  ///
  static const MedicalGuideline = IriTerm.prevalidated(
    'https://schema.org/MedicalGuideline',
  );

  /// IRI for schema:MedicalGuidelineContraindication
  ///
  /// A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.
  ///
  static const MedicalGuidelineContraindication = IriTerm.prevalidated(
    'https://schema.org/MedicalGuidelineContraindication',
  );

  /// IRI for schema:MedicalGuidelineRecommendation
  ///
  /// A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.
  ///
  static const MedicalGuidelineRecommendation = IriTerm.prevalidated(
    'https://schema.org/MedicalGuidelineRecommendation',
  );

  /// IRI for schema:MedicalImagingTechnique
  ///
  /// Any medical imaging modality typically used for diagnostic purposes. Enumerated type.
  ///
  static const MedicalImagingTechnique = IriTerm.prevalidated(
    'https://schema.org/MedicalImagingTechnique',
  );

  /// IRI for schema:MedicalIndication
  ///
  /// A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.
  ///
  static const MedicalIndication = IriTerm.prevalidated(
    'https://schema.org/MedicalIndication',
  );

  /// IRI for schema:MedicalIntangible
  ///
  /// A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.
  ///
  static const MedicalIntangible = IriTerm.prevalidated(
    'https://schema.org/MedicalIntangible',
  );

  /// IRI for schema:MedicalObservationalStudy
  ///
  /// An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.
  ///
  static const MedicalObservationalStudy = IriTerm.prevalidated(
    'https://schema.org/MedicalObservationalStudy',
  );

  /// IRI for schema:MedicalObservationalStudyDesign
  ///
  /// Design models for observational medical studies. Enumerated type.
  ///
  static const MedicalObservationalStudyDesign = IriTerm.prevalidated(
    'https://schema.org/MedicalObservationalStudyDesign',
  );

  /// IRI for schema:MedicalOrganization
  ///
  /// A medical organization (physical or not), such as hospital, institution or clinic.
  ///
  static const MedicalOrganization = IriTerm.prevalidated(
    'https://schema.org/MedicalOrganization',
  );

  /// IRI for schema:MedicalProcedure
  ///
  /// A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.
  ///
  static const MedicalProcedure = IriTerm.prevalidated(
    'https://schema.org/MedicalProcedure',
  );

  /// IRI for schema:MedicalProcedureType
  ///
  /// An enumeration that describes different types of medical procedures.
  ///
  static const MedicalProcedureType = IriTerm.prevalidated(
    'https://schema.org/MedicalProcedureType',
  );

  /// IRI for schema:MedicalRiskCalculator
  ///
  /// A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.
  ///
  static const MedicalRiskCalculator = IriTerm.prevalidated(
    'https://schema.org/MedicalRiskCalculator',
  );

  /// IRI for schema:MedicalRiskEstimator
  ///
  /// Any rule set or interactive tool for estimating the risk of developing a complication or condition.
  ///
  static const MedicalRiskEstimator = IriTerm.prevalidated(
    'https://schema.org/MedicalRiskEstimator',
  );

  /// IRI for schema:MedicalRiskFactor
  ///
  /// A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.
  ///
  static const MedicalRiskFactor = IriTerm.prevalidated(
    'https://schema.org/MedicalRiskFactor',
  );

  /// IRI for schema:MedicalRiskScore
  ///
  /// A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.
  ///
  static const MedicalRiskScore = IriTerm.prevalidated(
    'https://schema.org/MedicalRiskScore',
  );

  /// IRI for schema:MedicalScholarlyArticle
  ///
  /// A scholarly article in the medical domain.
  ///
  static const MedicalScholarlyArticle = IriTerm.prevalidated(
    'https://schema.org/MedicalScholarlyArticle',
  );

  /// IRI for schema:MedicalSign
  ///
  /// Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.
  ///
  static const MedicalSign = IriTerm.prevalidated(
    'https://schema.org/MedicalSign',
  );

  /// IRI for schema:MedicalSignOrSymptom
  ///
  /// Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.
  ///
  static const MedicalSignOrSymptom = IriTerm.prevalidated(
    'https://schema.org/MedicalSignOrSymptom',
  );

  /// IRI for schema:MedicalSpecialty
  ///
  /// Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.
  ///
  static const MedicalSpecialty = IriTerm.prevalidated(
    'https://schema.org/MedicalSpecialty',
  );

  /// IRI for schema:MedicalStudy
  ///
  /// A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.
  ///
  static const MedicalStudy = IriTerm.prevalidated(
    'https://schema.org/MedicalStudy',
  );

  /// IRI for schema:MedicalStudyStatus
  ///
  /// The status of a medical study. Enumerated type.
  ///
  static const MedicalStudyStatus = IriTerm.prevalidated(
    'https://schema.org/MedicalStudyStatus',
  );

  /// IRI for schema:MedicalSymptom
  ///
  /// Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.
  ///
  static const MedicalSymptom = IriTerm.prevalidated(
    'https://schema.org/MedicalSymptom',
  );

  /// IRI for schema:MedicalTest
  ///
  /// Any medical test, typically performed for diagnostic purposes.
  ///
  static const MedicalTest = IriTerm.prevalidated(
    'https://schema.org/MedicalTest',
  );

  /// IRI for schema:MedicalTestPanel
  ///
  /// Any collection of tests commonly ordered together.
  ///
  static const MedicalTestPanel = IriTerm.prevalidated(
    'https://schema.org/MedicalTestPanel',
  );

  /// IRI for schema:MedicalTherapy
  ///
  /// Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.
  ///
  static const MedicalTherapy = IriTerm.prevalidated(
    'https://schema.org/MedicalTherapy',
  );

  /// IRI for schema:MedicalTrial
  ///
  /// A medical trial is a type of medical study that uses a scientific process to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.
  ///
  static const MedicalTrial = IriTerm.prevalidated(
    'https://schema.org/MedicalTrial',
  );

  /// IRI for schema:MedicalTrialDesign
  ///
  /// Design models for medical trials. Enumerated type.
  ///
  static const MedicalTrialDesign = IriTerm.prevalidated(
    'https://schema.org/MedicalTrialDesign',
  );

  /// IRI for schema:MedicalWebPage
  ///
  /// A web page that provides medical information.
  ///
  static const MedicalWebPage = IriTerm.prevalidated(
    'https://schema.org/MedicalWebPage',
  );

  /// IRI for schema:MedicineSystem
  ///
  /// Systems of medical practice.
  ///
  static const MedicineSystem = IriTerm.prevalidated(
    'https://schema.org/MedicineSystem',
  );

  /// IRI for schema:MeetingRoom
  ///
  /// A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const MeetingRoom = IriTerm.prevalidated(
    'https://schema.org/MeetingRoom',
  );

  /// IRI for schema:MemberProgram
  ///
  /// A MemberProgram defines a loyalty (or membership) program that provides its members with certain benefits, for example better pricing, free shipping or returns, or the ability to earn loyalty points. Member programs may have multiple tiers, for example silver and gold members, each with different benefits.
  ///
  static const MemberProgram = IriTerm.prevalidated(
    'https://schema.org/MemberProgram',
  );

  /// IRI for schema:MemberProgramTier
  ///
  /// A MemberProgramTier specifies a tier under a loyalty (member) program, for example "gold".
  ///
  static const MemberProgramTier = IriTerm.prevalidated(
    'https://schema.org/MemberProgramTier',
  );

  /// IRI for schema:MensClothingStore
  ///
  /// A men's clothing store.
  ///
  static const MensClothingStore = IriTerm.prevalidated(
    'https://schema.org/MensClothingStore',
  );

  /// IRI for schema:Menu
  ///
  /// A structured representation of food or drink items available from a FoodEstablishment.
  ///
  static const Menu = IriTerm.prevalidated('https://schema.org/Menu');

  /// IRI for schema:MenuItem
  ///
  /// A food or drink item listed in a menu or menu section.
  ///
  static const MenuItem = IriTerm.prevalidated('https://schema.org/MenuItem');

  /// IRI for schema:MenuSection
  ///
  /// A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.
  ///
  static const MenuSection = IriTerm.prevalidated(
    'https://schema.org/MenuSection',
  );

  /// IRI for schema:MerchantReturnEnumeration
  ///
  /// Enumerates several kinds of product return policies.
  ///
  static const MerchantReturnEnumeration = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnEnumeration',
  );

  /// IRI for schema:MerchantReturnPolicy
  ///
  /// A MerchantReturnPolicy provides information about product return policies associated with an {[Organization]}, {[Product]}, or {[Offer]}.
  ///
  static const MerchantReturnPolicy = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnPolicy',
  );

  /// IRI for schema:MerchantReturnPolicySeasonalOverride
  ///
  /// A seasonal override of a return policy, for example used for holidays.
  ///
  static const MerchantReturnPolicySeasonalOverride = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnPolicySeasonalOverride',
  );

  /// IRI for schema:Message
  ///
  /// A single message from a sender to one or more organizations or people.
  ///
  static const Message = IriTerm.prevalidated('https://schema.org/Message');

  /// IRI for schema:MiddleSchool
  ///
  /// A middle school (typically for children aged around 11-14, although this varies somewhat).
  ///
  static const MiddleSchool = IriTerm.prevalidated(
    'https://schema.org/MiddleSchool',
  );

  /// IRI for schema:MobileApplication
  ///
  /// A software application designed specifically to work well on a mobile device such as a telephone.
  ///
  static const MobileApplication = IriTerm.prevalidated(
    'https://schema.org/MobileApplication',
  );

  /// IRI for schema:MobilePhoneStore
  ///
  /// A store that sells mobile phones and related accessories.
  ///
  static const MobilePhoneStore = IriTerm.prevalidated(
    'https://schema.org/MobilePhoneStore',
  );

  /// IRI for schema:MolecularEntity
  ///
  /// Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer etc., identifiable as a separately distinguishable entity.
  ///
  static const MolecularEntity = IriTerm.prevalidated(
    'https://schema.org/MolecularEntity',
  );

  /// IRI for schema:MonetaryAmount
  ///
  /// A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between ¬£1,000 and ¬£1,000,000 GBP, or the value of a salary, etc. It is recommended to use {[PriceSpecification]} Types to describe the price of an Offer, Invoice, etc.
  ///
  static const MonetaryAmount = IriTerm.prevalidated(
    'https://schema.org/MonetaryAmount',
  );

  /// IRI for schema:MonetaryAmountDistribution
  ///
  /// A statistical distribution of monetary amounts.
  ///
  static const MonetaryAmountDistribution = IriTerm.prevalidated(
    'https://schema.org/MonetaryAmountDistribution',
  );

  /// IRI for schema:MonetaryGrant
  ///
  /// A monetary grant.
  ///
  static const MonetaryGrant = IriTerm.prevalidated(
    'https://schema.org/MonetaryGrant',
  );

  /// IRI for schema:MoneyTransfer
  ///
  /// The act of transferring money from one place to another place. This may occur electronically or physically.
  ///
  static const MoneyTransfer = IriTerm.prevalidated(
    'https://schema.org/MoneyTransfer',
  );

  /// IRI for schema:MortgageLoan
  ///
  /// A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)
  ///
  static const MortgageLoan = IriTerm.prevalidated(
    'https://schema.org/MortgageLoan',
  );

  /// IRI for schema:Mosque
  ///
  /// A mosque.
  ///
  static const Mosque = IriTerm.prevalidated('https://schema.org/Mosque');

  /// IRI for schema:Motel
  ///
  /// A motel.
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Motel = IriTerm.prevalidated('https://schema.org/Motel');

  /// IRI for schema:Motorcycle
  ///
  /// A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
  ///
  static const Motorcycle = IriTerm.prevalidated(
    'https://schema.org/Motorcycle',
  );

  /// IRI for schema:MotorcycleDealer
  ///
  /// A motorcycle dealer.
  ///
  static const MotorcycleDealer = IriTerm.prevalidated(
    'https://schema.org/MotorcycleDealer',
  );

  /// IRI for schema:MotorcycleRepair
  ///
  /// A motorcycle repair shop.
  ///
  static const MotorcycleRepair = IriTerm.prevalidated(
    'https://schema.org/MotorcycleRepair',
  );

  /// IRI for schema:MotorizedBicycle
  ///
  /// A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.
  ///
  static const MotorizedBicycle = IriTerm.prevalidated(
    'https://schema.org/MotorizedBicycle',
  );

  /// IRI for schema:Mountain
  ///
  /// A mountain, like Mount Whitney or Mount Everest.
  ///
  static const Mountain = IriTerm.prevalidated('https://schema.org/Mountain');

  /// IRI for schema:MoveAction
  ///
  /// The act of an agent relocating to a place.\n\nRelated actions:\n\n* {[TransferAction]}: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.
  ///
  static const MoveAction = IriTerm.prevalidated(
    'https://schema.org/MoveAction',
  );

  /// IRI for schema:Movie
  ///
  /// A movie.
  ///
  static const Movie = IriTerm.prevalidated('https://schema.org/Movie');

  /// IRI for schema:MovieClip
  ///
  /// A short segment/part of a movie.
  ///
  static const MovieClip = IriTerm.prevalidated('https://schema.org/MovieClip');

  /// IRI for schema:MovieRentalStore
  ///
  /// A movie rental store.
  ///
  static const MovieRentalStore = IriTerm.prevalidated(
    'https://schema.org/MovieRentalStore',
  );

  /// IRI for schema:MovieSeries
  ///
  /// A series of movies. Included movies can be indicated with the hasPart property.
  ///
  static const MovieSeries = IriTerm.prevalidated(
    'https://schema.org/MovieSeries',
  );

  /// IRI for schema:MovieTheater
  ///
  /// A movie theater.
  ///
  static const MovieTheater = IriTerm.prevalidated(
    'https://schema.org/MovieTheater',
  );

  /// IRI for schema:MovingCompany
  ///
  /// A moving company.
  ///
  static const MovingCompany = IriTerm.prevalidated(
    'https://schema.org/MovingCompany',
  );

  /// IRI for schema:Muscle
  ///
  /// A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.
  ///
  static const Muscle = IriTerm.prevalidated('https://schema.org/Muscle');

  /// IRI for schema:Museum
  ///
  /// A museum.
  ///
  static const Museum = IriTerm.prevalidated('https://schema.org/Museum');

  /// IRI for schema:MusicAlbum
  ///
  /// A collection of music tracks.
  ///
  static const MusicAlbum = IriTerm.prevalidated(
    'https://schema.org/MusicAlbum',
  );

  /// IRI for schema:MusicAlbumProductionType
  ///
  /// Classification of the album by its type of content: soundtrack, live album, studio album, etc.
  ///
  static const MusicAlbumProductionType = IriTerm.prevalidated(
    'https://schema.org/MusicAlbumProductionType',
  );

  /// IRI for schema:MusicAlbumReleaseType
  ///
  /// The kind of release which this album is: single, EP or album.
  ///
  static const MusicAlbumReleaseType = IriTerm.prevalidated(
    'https://schema.org/MusicAlbumReleaseType',
  );

  /// IRI for schema:MusicComposition
  ///
  /// A musical composition.
  ///
  static const MusicComposition = IriTerm.prevalidated(
    'https://schema.org/MusicComposition',
  );

  /// IRI for schema:MusicEvent
  ///
  /// Event type: Music event.
  ///
  static const MusicEvent = IriTerm.prevalidated(
    'https://schema.org/MusicEvent',
  );

  /// IRI for schema:MusicGroup
  ///
  /// A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
  ///
  static const MusicGroup = IriTerm.prevalidated(
    'https://schema.org/MusicGroup',
  );

  /// IRI for schema:MusicPlaylist
  ///
  /// A collection of music tracks in playlist form.
  ///
  static const MusicPlaylist = IriTerm.prevalidated(
    'https://schema.org/MusicPlaylist',
  );

  /// IRI for schema:MusicRecording
  ///
  /// A music recording (track), usually a single song.
  ///
  static const MusicRecording = IriTerm.prevalidated(
    'https://schema.org/MusicRecording',
  );

  /// IRI for schema:MusicRelease
  ///
  /// A MusicRelease is a specific release of a music album.
  ///
  static const MusicRelease = IriTerm.prevalidated(
    'https://schema.org/MusicRelease',
  );

  /// IRI for schema:MusicReleaseFormatType
  ///
  /// Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).
  ///
  static const MusicReleaseFormatType = IriTerm.prevalidated(
    'https://schema.org/MusicReleaseFormatType',
  );

  /// IRI for schema:MusicStore
  ///
  /// A music store.
  ///
  static const MusicStore = IriTerm.prevalidated(
    'https://schema.org/MusicStore',
  );

  /// IRI for schema:MusicVenue
  ///
  /// A music venue.
  ///
  static const MusicVenue = IriTerm.prevalidated(
    'https://schema.org/MusicVenue',
  );

  /// IRI for schema:MusicVideoObject
  ///
  /// A music video file.
  ///
  static const MusicVideoObject = IriTerm.prevalidated(
    'https://schema.org/MusicVideoObject',
  );

  /// IRI for schema:NGO
  ///
  /// Organization: Non-governmental Organization.
  ///
  static const NGO = IriTerm.prevalidated('https://schema.org/NGO');

  /// IRI for schema:NLNonprofitType
  ///
  /// NLNonprofitType: Non-profit organization type originating from the Netherlands.
  ///
  static const NLNonprofitType = IriTerm.prevalidated(
    'https://schema.org/NLNonprofitType',
  );

  /// IRI for schema:NailSalon
  ///
  /// A nail salon.
  ///
  static const NailSalon = IriTerm.prevalidated('https://schema.org/NailSalon');

  /// IRI for schema:Nerve
  ///
  /// A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.
  ///
  static const Nerve = IriTerm.prevalidated('https://schema.org/Nerve');

  /// IRI for schema:NewsArticle
  ///
  /// A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.
  ///
  /// A more detailed overview of [schema.org News markup](/docs/news.html) is also available.
  ///
  ///
  static const NewsArticle = IriTerm.prevalidated(
    'https://schema.org/NewsArticle',
  );

  /// IRI for schema:NewsMediaOrganization
  ///
  /// A News/Media organization such as a newspaper or TV station.
  ///
  static const NewsMediaOrganization = IriTerm.prevalidated(
    'https://schema.org/NewsMediaOrganization',
  );

  /// IRI for schema:Newspaper
  ///
  /// A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.
  ///
  static const Newspaper = IriTerm.prevalidated('https://schema.org/Newspaper');

  /// IRI for schema:NightClub
  ///
  /// A nightclub or discotheque.
  ///
  static const NightClub = IriTerm.prevalidated('https://schema.org/NightClub');

  /// IRI for schema:NonprofitType
  ///
  /// NonprofitType enumerates several kinds of official non-profit types of which a non-profit organization can be.
  ///
  static const NonprofitType = IriTerm.prevalidated(
    'https://schema.org/NonprofitType',
  );

  /// IRI for schema:Notary
  ///
  /// A notary.
  ///
  static const Notary = IriTerm.prevalidated('https://schema.org/Notary');

  /// IRI for schema:NoteDigitalDocument
  ///
  /// A file containing a note, primarily for the author.
  ///
  static const NoteDigitalDocument = IriTerm.prevalidated(
    'https://schema.org/NoteDigitalDocument',
  );

  /// IRI for schema:Number
  ///
  /// Data type: Number.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  static const Number = IriTerm.prevalidated('https://schema.org/Number');

  /// IRI for schema:NutritionInformation
  ///
  /// Nutritional information about the recipe.
  ///
  static const NutritionInformation = IriTerm.prevalidated(
    'https://schema.org/NutritionInformation',
  );

  /// IRI for schema:Observation
  ///
  /// Instances of the class {[Observation]} are used to specify observations about an entity at a particular time. The principal properties of an {[Observation]} are {[observationAbout]}, {[measuredProperty]}, {[statType]}, {[value] and {[observationDate]}  and {[measuredProperty]}. Some but not all Observations represent a {[QuantitativeValue]}. Quantitative observations can be about a {[StatisticalVariable]}, which is an abstract specification about which we can make observations that are grounded at a particular location and time.
  ///
  /// Observations can also encode a subset of simple RDF-like statements (its observationAbout, a StatisticalVariable, defining the measuredPoperty; its observationAbout property indicating the entity the statement is about, and {[value]} )
  ///
  /// In the context of a quantitative knowledge graph, typical properties could include {[measuredProperty]}, {[observationAbout]}, {[observationDate]}, {[value]}, {[unitCode]}, {[unitText]}, {[measurementMethod]}.
  ///
  ///
  static const Observation = IriTerm.prevalidated(
    'https://schema.org/Observation',
  );

  /// IRI for schema:Occupation
  ///
  /// A profession, may involve prolonged training and/or a formal qualification.
  ///
  static const Occupation = IriTerm.prevalidated(
    'https://schema.org/Occupation',
  );

  /// IRI for schema:OccupationalExperienceRequirements
  ///
  /// Indicates employment-related experience requirements, e.g. {[monthsOfExperience]}.
  ///
  static const OccupationalExperienceRequirements = IriTerm.prevalidated(
    'https://schema.org/OccupationalExperienceRequirements',
  );

  /// IRI for schema:OccupationalTherapy
  ///
  /// A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.
  ///
  static const OccupationalTherapy = IriTerm.prevalidated(
    'https://schema.org/OccupationalTherapy',
  );

  /// IRI for schema:OceanBodyOfWater
  ///
  /// An ocean (for example, the Pacific).
  ///
  static const OceanBodyOfWater = IriTerm.prevalidated(
    'https://schema.org/OceanBodyOfWater',
  );

  /// IRI for schema:Offer
  ///
  /// An offer to transfer some rights to an item or to provide a service ‚Äî for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\n\nNote: As the {[businessFunction]} property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.\n\nFor [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) from [GS1](http://www.gs1.org/).
  ///
  static const Offer = IriTerm.prevalidated('https://schema.org/Offer');

  /// IRI for schema:OfferCatalog
  ///
  /// An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.
  ///
  static const OfferCatalog = IriTerm.prevalidated(
    'https://schema.org/OfferCatalog',
  );

  /// IRI for schema:OfferForLease
  ///
  /// An {[OfferForLease]} in Schema.org represents an {[Offer]} to lease out something, i.e. an {[Offer]} whose
  /// {[businessFunction]} is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
  /// background on the underlying concepts.
  ///
  ///
  static const OfferForLease = IriTerm.prevalidated(
    'https://schema.org/OfferForLease',
  );

  /// IRI for schema:OfferForPurchase
  ///
  /// An {[OfferForPurchase]} in Schema.org represents an {[Offer]} to sell something, i.e. an {[Offer]} whose
  /// {[businessFunction]} is [sell](http://purl.org/goodrelations/v1#Sell.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
  /// background on the underlying concepts.
  ///
  ///
  static const OfferForPurchase = IriTerm.prevalidated(
    'https://schema.org/OfferForPurchase',
  );

  /// IRI for schema:OfferItemCondition
  ///
  /// A list of possible conditions for the item.
  ///
  static const OfferItemCondition = IriTerm.prevalidated(
    'https://schema.org/OfferItemCondition',
  );

  /// IRI for schema:OfferShippingDetails
  ///
  /// OfferShippingDetails represents information about shipping destinations.
  ///
  /// Multiple of these entities can be used to represent different shipping rates for different destinations:
  ///
  /// One entity for Alaska/Hawaii. A different one for continental US. A different one for all France.
  ///
  /// Multiple of these entities can be used to represent different shipping costs and delivery times.
  ///
  /// Two entities that are identical but differ in rate and time:
  ///
  /// E.g. Cheaper and slower: $5 in 5-7 days
  /// or Fast and expensive: $15 in 1-2 days.
  ///
  static const OfferShippingDetails = IriTerm.prevalidated(
    'https://schema.org/OfferShippingDetails',
  );

  /// IRI for schema:OfficeEquipmentStore
  ///
  /// An office equipment store.
  ///
  static const OfficeEquipmentStore = IriTerm.prevalidated(
    'https://schema.org/OfficeEquipmentStore',
  );

  /// IRI for schema:OnDemandEvent
  ///
  /// A publication event, e.g. catch-up TV or radio podcast, during which a program is available on-demand.
  ///
  static const OnDemandEvent = IriTerm.prevalidated(
    'https://schema.org/OnDemandEvent',
  );

  /// IRI for schema:OnlineBusiness
  ///
  /// A particular online business, either standalone or the online part of a broader organization. Examples include an eCommerce site, an online travel booking site, an online learning site, an online logistics and shipping provider, an online (virtual) doctor, etc.
  ///
  static const OnlineBusiness = IriTerm.prevalidated(
    'https://schema.org/OnlineBusiness',
  );

  /// IRI for schema:OnlineStore
  ///
  /// An eCommerce site.
  ///
  static const OnlineStore = IriTerm.prevalidated(
    'https://schema.org/OnlineStore',
  );

  /// IRI for schema:OpeningHoursSpecification
  ///
  /// A structured value providing information about the opening hours of a place or a certain service inside a place.\n\n
  /// The place is __open__ if the {[opens]} property is specified, and __closed__ otherwise.\n\nIf the value for the {[closes]} property is less than the value for the {[opens]} property then the hour range is assumed to span over the next day.
  ///
  ///
  static const OpeningHoursSpecification = IriTerm.prevalidated(
    'https://schema.org/OpeningHoursSpecification',
  );

  /// IRI for schema:OpinionNewsArticle
  ///
  /// An {[OpinionNewsArticle]} is a {[NewsArticle]} that primarily expresses opinions rather than journalistic reporting of news and events. For example, a {[NewsArticle]} consisting of a column or {[Blog]}/{[BlogPosting]} entry in the Opinions section of a news publication.
  ///
  static const OpinionNewsArticle = IriTerm.prevalidated(
    'https://schema.org/OpinionNewsArticle',
  );

  /// IRI for schema:Optician
  ///
  /// A store that sells reading glasses and similar devices for improving vision.
  ///
  static const Optician = IriTerm.prevalidated('https://schema.org/Optician');

  /// IRI for schema:Order
  ///
  /// An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
  ///
  static const Order = IriTerm.prevalidated('https://schema.org/Order');

  /// IRI for schema:OrderAction
  ///
  /// An agent orders an object/product/service to be delivered/sent.
  ///
  static const OrderAction = IriTerm.prevalidated(
    'https://schema.org/OrderAction',
  );

  /// IRI for schema:OrderItem
  ///
  /// An order item is a line of an order. It includes the quantity and shipping details of a bought offer.
  ///
  static const OrderItem = IriTerm.prevalidated('https://schema.org/OrderItem');

  /// IRI for schema:OrderStatus
  ///
  /// Enumerated status values for Order.
  ///
  static const OrderStatus = IriTerm.prevalidated(
    'https://schema.org/OrderStatus',
  );

  /// IRI for schema:Organization
  ///
  /// An organization such as a school, NGO, corporation, club, etc.
  ///
  static const Organization = IriTerm.prevalidated(
    'https://schema.org/Organization',
  );

  /// IRI for schema:OrganizationRole
  ///
  /// A subclass of Role used to describe roles within organizations.
  ///
  static const OrganizationRole = IriTerm.prevalidated(
    'https://schema.org/OrganizationRole',
  );

  /// IRI for schema:OrganizeAction
  ///
  /// The act of manipulating/administering/supervising/controlling one or more objects.
  ///
  static const OrganizeAction = IriTerm.prevalidated(
    'https://schema.org/OrganizeAction',
  );

  /// IRI for schema:OutletStore
  ///
  /// An outlet store.
  ///
  static const OutletStore = IriTerm.prevalidated(
    'https://schema.org/OutletStore',
  );

  /// IRI for schema:OwnershipInfo
  ///
  /// A structured value providing information about when a certain organization or person owned a certain product.
  ///
  static const OwnershipInfo = IriTerm.prevalidated(
    'https://schema.org/OwnershipInfo',
  );

  /// IRI for schema:PaintAction
  ///
  /// The act of producing a painting, typically with paint and canvas as instruments.
  ///
  static const PaintAction = IriTerm.prevalidated(
    'https://schema.org/PaintAction',
  );

  /// IRI for schema:Painting
  ///
  /// A painting.
  ///
  static const Painting = IriTerm.prevalidated('https://schema.org/Painting');

  /// IRI for schema:PalliativeProcedure
  ///
  /// A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.
  ///
  static const PalliativeProcedure = IriTerm.prevalidated(
    'https://schema.org/PalliativeProcedure',
  );

  /// IRI for schema:ParcelDelivery
  ///
  /// The delivery of a parcel either via the postal service or a commercial service.
  ///
  static const ParcelDelivery = IriTerm.prevalidated(
    'https://schema.org/ParcelDelivery',
  );

  /// IRI for schema:ParentAudience
  ///
  /// A set of characteristics describing parents, who can be interested in viewing some content.
  ///
  static const ParentAudience = IriTerm.prevalidated(
    'https://schema.org/ParentAudience',
  );

  /// IRI for schema:Park
  ///
  /// A park.
  ///
  static const Park = IriTerm.prevalidated('https://schema.org/Park');

  /// IRI for schema:ParkingFacility
  ///
  /// A parking lot or other parking facility.
  ///
  static const ParkingFacility = IriTerm.prevalidated(
    'https://schema.org/ParkingFacility',
  );

  /// IRI for schema:PathologyTest
  ///
  /// A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.
  ///
  static const PathologyTest = IriTerm.prevalidated(
    'https://schema.org/PathologyTest',
  );

  /// IRI for schema:Patient
  ///
  /// A patient is any person recipient of health care services.
  ///
  static const Patient = IriTerm.prevalidated('https://schema.org/Patient');

  /// IRI for schema:PawnShop
  ///
  /// A shop that will buy, or lend money against the security of, personal possessions.
  ///
  static const PawnShop = IriTerm.prevalidated('https://schema.org/PawnShop');

  /// IRI for schema:PayAction
  ///
  /// An agent pays a price to a participant.
  ///
  static const PayAction = IriTerm.prevalidated('https://schema.org/PayAction');

  /// IRI for schema:PaymentCard
  ///
  /// A payment method using a credit, debit, store or other card to associate the payment with an account.
  ///
  static const PaymentCard = IriTerm.prevalidated(
    'https://schema.org/PaymentCard',
  );

  /// IRI for schema:PaymentChargeSpecification
  ///
  /// The costs of settling the payment using a particular payment method.
  ///
  static const PaymentChargeSpecification = IriTerm.prevalidated(
    'https://schema.org/PaymentChargeSpecification',
  );

  /// IRI for schema:PaymentMethod
  ///
  /// A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction. The following legacy values should be accepted:
  /// \n\n* http://purl.org/goodrelations/v1#ByBankTransferInAdvance\n* http://purl.org/goodrelations/v1#ByInvoice\n* http://purl.org/goodrelations/v1#Cash\n* http://purl.org/goodrelations/v1#CheckInAdvance\n* http://purl.org/goodrelations/v1#COD\n* http://purl.org/goodrelations/v1#DirectDebit\n* http://purl.org/goodrelations/v1#GoogleCheckout\n* http://purl.org/goodrelations/v1#PayPal\n* http://purl.org/goodrelations/v1#PaySwarm\n\nStructured values are recommended for newer payment methods.
  ///
  static const PaymentMethod = IriTerm.prevalidated(
    'https://schema.org/PaymentMethod',
  );

  /// IRI for schema:PaymentMethodType
  ///
  /// The type of payment method, only for generic payment types, specific forms of payments, like card payment should be expressed using subclasses of PaymentMethod.
  ///
  static const PaymentMethodType = IriTerm.prevalidated(
    'https://schema.org/PaymentMethodType',
  );

  /// IRI for schema:PaymentService
  ///
  /// A Service to transfer funds from a person or organization to a beneficiary person or organization.
  ///
  static const PaymentService = IriTerm.prevalidated(
    'https://schema.org/PaymentService',
  );

  /// IRI for schema:PaymentStatusType
  ///
  /// A specific payment status. For example, PaymentDue, PaymentComplete, etc.
  ///
  static const PaymentStatusType = IriTerm.prevalidated(
    'https://schema.org/PaymentStatusType',
  );

  /// IRI for schema:PeopleAudience
  ///
  /// A set of characteristics belonging to people, e.g. who compose an item's target audience.
  ///
  static const PeopleAudience = IriTerm.prevalidated(
    'https://schema.org/PeopleAudience',
  );

  /// IRI for schema:PerformAction
  ///
  /// The act of participating in performance arts.
  ///
  static const PerformAction = IriTerm.prevalidated(
    'https://schema.org/PerformAction',
  );

  /// IRI for schema:PerformanceRole
  ///
  /// A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
  ///
  static const PerformanceRole = IriTerm.prevalidated(
    'https://schema.org/PerformanceRole',
  );

  /// IRI for schema:PerformingArtsTheater
  ///
  /// A theater or other performing art center.
  ///
  static const PerformingArtsTheater = IriTerm.prevalidated(
    'https://schema.org/PerformingArtsTheater',
  );

  /// IRI for schema:PerformingGroup
  ///
  /// A performance group, such as a band, an orchestra, or a circus.
  ///
  static const PerformingGroup = IriTerm.prevalidated(
    'https://schema.org/PerformingGroup',
  );

  /// IRI for schema:Periodical
  ///
  /// A publication in any medium issued in successive parts bearing numerical or chronological designations and intended to continue indefinitely, such as a magazine, scholarly journal, or newspaper.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
  ///
  static const Periodical = IriTerm.prevalidated(
    'https://schema.org/Periodical',
  );

  /// IRI for schema:Permit
  ///
  /// A permit issued by an organization, e.g. a parking pass.
  ///
  static const Permit = IriTerm.prevalidated('https://schema.org/Permit');

  /// IRI for schema:Person
  ///
  /// A person (alive, dead, undead, or fictional).
  ///
  static const Person = IriTerm.prevalidated('https://schema.org/Person');

  /// IRI for schema:PetStore
  ///
  /// A pet store.
  ///
  static const PetStore = IriTerm.prevalidated('https://schema.org/PetStore');

  /// IRI for schema:Pharmacy
  ///
  /// A pharmacy or drugstore.
  ///
  static const Pharmacy = IriTerm.prevalidated('https://schema.org/Pharmacy');

  /// IRI for schema:Photograph
  ///
  /// A photograph.
  ///
  static const Photograph = IriTerm.prevalidated(
    'https://schema.org/Photograph',
  );

  /// IRI for schema:PhotographAction
  ///
  /// The act of capturing still images of objects using a camera.
  ///
  static const PhotographAction = IriTerm.prevalidated(
    'https://schema.org/PhotographAction',
  );

  /// IRI for schema:PhysicalActivity
  ///
  /// Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.
  ///
  static const PhysicalActivity = IriTerm.prevalidated(
    'https://schema.org/PhysicalActivity',
  );

  /// IRI for schema:PhysicalActivityCategory
  ///
  /// Categories of physical activity, organized by physiologic classification.
  ///
  static const PhysicalActivityCategory = IriTerm.prevalidated(
    'https://schema.org/PhysicalActivityCategory',
  );

  /// IRI for schema:PhysicalExam
  ///
  /// A type of physical examination of a patient performed by a physician.
  ///
  static const PhysicalExam = IriTerm.prevalidated(
    'https://schema.org/PhysicalExam',
  );

  /// IRI for schema:PhysicalTherapy
  ///
  /// A process of progressive physical care and rehabilitation aimed at improving a health condition.
  ///
  static const PhysicalTherapy = IriTerm.prevalidated(
    'https://schema.org/PhysicalTherapy',
  );

  /// IRI for schema:Physician
  ///
  /// An individual physician or a physician's office considered as a {[MedicalOrganization]}.
  ///
  static const Physician = IriTerm.prevalidated('https://schema.org/Physician');

  /// IRI for schema:PhysiciansOffice
  ///
  /// A doctor's office or clinic.
  ///
  static const PhysiciansOffice = IriTerm.prevalidated(
    'https://schema.org/PhysiciansOffice',
  );

  /// IRI for schema:Place
  ///
  /// Entities that have a somewhat fixed, physical extension.
  ///
  static const Place = IriTerm.prevalidated('https://schema.org/Place');

  /// IRI for schema:PlaceOfWorship
  ///
  /// Place of worship, such as a church, synagogue, or mosque.
  ///
  static const PlaceOfWorship = IriTerm.prevalidated(
    'https://schema.org/PlaceOfWorship',
  );

  /// IRI for schema:PlanAction
  ///
  /// The act of planning the execution of an event/task/action/reservation/plan to a future date.
  ///
  static const PlanAction = IriTerm.prevalidated(
    'https://schema.org/PlanAction',
  );

  /// IRI for schema:Play
  ///
  /// A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note: A performance of a Play would be a {[TheaterEvent]} or {[BroadcastEvent]} - the *Play* being the {[workPerformed]}.
  ///
  static const Play = IriTerm.prevalidated('https://schema.org/Play');

  /// IRI for schema:PlayAction
  ///
  /// The act of playing/exercising/training/performing for enjoyment, leisure, recreation, competition or exercise.\n\nRelated actions:\n\n* {[ListenAction]}: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.\n* {[WatchAction]}: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.
  ///
  static const PlayAction = IriTerm.prevalidated(
    'https://schema.org/PlayAction',
  );

  /// IRI for schema:PlayGameAction
  ///
  /// The act of playing a video game.
  ///
  static const PlayGameAction = IriTerm.prevalidated(
    'https://schema.org/PlayGameAction',
  );

  /// IRI for schema:Playground
  ///
  /// A playground.
  ///
  static const Playground = IriTerm.prevalidated(
    'https://schema.org/Playground',
  );

  /// IRI for schema:Plumber
  ///
  /// A plumbing service.
  ///
  static const Plumber = IriTerm.prevalidated('https://schema.org/Plumber');

  /// IRI for schema:PodcastEpisode
  ///
  /// A single episode of a podcast series.
  ///
  static const PodcastEpisode = IriTerm.prevalidated(
    'https://schema.org/PodcastEpisode',
  );

  /// IRI for schema:PodcastSeason
  ///
  /// A single season of a podcast. Many podcasts do not break down into separate seasons. In that case, PodcastSeries should be used.
  ///
  static const PodcastSeason = IriTerm.prevalidated(
    'https://schema.org/PodcastSeason',
  );

  /// IRI for schema:PodcastSeries
  ///
  /// A podcast is an episodic series of digital audio or video files which a user can download and listen to.
  ///
  static const PodcastSeries = IriTerm.prevalidated(
    'https://schema.org/PodcastSeries',
  );

  /// IRI for schema:PoliceStation
  ///
  /// A police station.
  ///
  static const PoliceStation = IriTerm.prevalidated(
    'https://schema.org/PoliceStation',
  );

  /// IRI for schema:PoliticalParty
  ///
  /// Organization: Political Party.
  ///
  static const PoliticalParty = IriTerm.prevalidated(
    'https://schema.org/PoliticalParty',
  );

  /// IRI for schema:Pond
  ///
  /// A pond.
  ///
  static const Pond = IriTerm.prevalidated('https://schema.org/Pond');

  /// IRI for schema:PostOffice
  ///
  /// A post office.
  ///
  static const PostOffice = IriTerm.prevalidated(
    'https://schema.org/PostOffice',
  );

  /// IRI for schema:PostalAddress
  ///
  /// The mailing address.
  ///
  static const PostalAddress = IriTerm.prevalidated(
    'https://schema.org/PostalAddress',
  );

  /// IRI for schema:PostalCodeRangeSpecification
  ///
  /// Indicates a range of postal codes, usually defined as the set of valid codes between {[postalCodeBegin]} and {[postalCodeEnd]}, inclusively.
  ///
  static const PostalCodeRangeSpecification = IriTerm.prevalidated(
    'https://schema.org/PostalCodeRangeSpecification',
  );

  /// IRI for schema:Poster
  ///
  /// A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.
  ///
  static const Poster = IriTerm.prevalidated('https://schema.org/Poster');

  /// IRI for schema:PreOrderAction
  ///
  /// An agent orders a (not yet released) object/product/service to be delivered/sent.
  ///
  static const PreOrderAction = IriTerm.prevalidated(
    'https://schema.org/PreOrderAction',
  );

  /// IRI for schema:PrependAction
  ///
  /// The act of inserting at the beginning if an ordered collection.
  ///
  static const PrependAction = IriTerm.prevalidated(
    'https://schema.org/PrependAction',
  );

  /// IRI for schema:Preschool
  ///
  /// A preschool.
  ///
  static const Preschool = IriTerm.prevalidated('https://schema.org/Preschool');

  /// IRI for schema:PresentationDigitalDocument
  ///
  /// A file containing slides or used for a presentation.
  ///
  static const PresentationDigitalDocument = IriTerm.prevalidated(
    'https://schema.org/PresentationDigitalDocument',
  );

  /// IRI for schema:PreventionIndication
  ///
  /// An indication for preventing an underlying condition, symptom, etc.
  ///
  static const PreventionIndication = IriTerm.prevalidated(
    'https://schema.org/PreventionIndication',
  );

  /// IRI for schema:PriceComponentTypeEnumeration
  ///
  /// Enumerates different price components that together make up the total price for an offered product.
  ///
  static const PriceComponentTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/PriceComponentTypeEnumeration',
  );

  /// IRI for schema:PriceSpecification
  ///
  /// A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use {[MonetaryAmount]} to describe independent amounts of money such as a salary, credit card limits, etc.
  ///
  static const PriceSpecification = IriTerm.prevalidated(
    'https://schema.org/PriceSpecification',
  );

  /// IRI for schema:PriceTypeEnumeration
  ///
  /// Enumerates different price types, for example list price, invoice price, and sale price.
  ///
  static const PriceTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/PriceTypeEnumeration',
  );

  /// IRI for schema:Product
  ///
  /// Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
  ///
  static const Product = IriTerm.prevalidated('https://schema.org/Product');

  /// IRI for schema:ProductCollection
  ///
  /// A set of products (either {[ProductGroup]}s or specific variants) that are listed together e.g. in an {[Offer]}.
  ///
  static const ProductCollection = IriTerm.prevalidated(
    'https://schema.org/ProductCollection',
  );

  /// IRI for schema:ProductGroup
  ///
  /// A ProductGroup represents a group of {[Product]}s that vary only in certain well-described ways, such as by {[size]}, {[color]}, {[material]} etc.
  ///
  /// While a ProductGroup itself is not directly offered for sale, the various varying products that it represents can be. The ProductGroup serves as a prototype or template, standing in for all of the products who have an {[isVariantOf]} relationship to it. As such, properties (including additional types) can be applied to the ProductGroup to represent characteristics shared by each of the (possibly very many) variants. Properties that reference a ProductGroup are not included in this mechanism; neither are the following specific properties {[variesBy]}, {[hasVariant]}, {[url]}.
  ///
  static const ProductGroup = IriTerm.prevalidated(
    'https://schema.org/ProductGroup',
  );

  /// IRI for schema:ProductModel
  ///
  /// A datasheet or vendor specification of a product (in the sense of a prototypical description).
  ///
  static const ProductModel = IriTerm.prevalidated(
    'https://schema.org/ProductModel',
  );

  /// IRI for schema:ProfessionalService
  ///
  /// Original definition: "provider of professional services."\n\nThe general {[ProfessionalService]} type for local businesses was deprecated due to confusion with {[Service]}. For reference, the types that it included were: {[Dentist]},
  /// {[AccountingService]}, {[Attorney]}, {[Notary]}, as well as types for several kinds of {[HomeAndConstructionBusiness]}: {[Electrician]}, {[GeneralContractor]},
  /// {[HousePainter]}, {[Locksmith]}, {[Plumber]}, {[RoofingContractor]}. {[LegalService]} was introduced as a more inclusive supertype of {[Attorney]}.
  ///
  static const ProfessionalService = IriTerm.prevalidated(
    'https://schema.org/ProfessionalService',
  );

  /// IRI for schema:ProfilePage
  ///
  /// Web page type: Profile page.
  ///
  static const ProfilePage = IriTerm.prevalidated(
    'https://schema.org/ProfilePage',
  );

  /// IRI for schema:ProgramMembership
  ///
  /// Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
  ///
  static const ProgramMembership = IriTerm.prevalidated(
    'https://schema.org/ProgramMembership',
  );

  /// IRI for schema:Project
  ///
  /// An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.
  /// Use properties from {[Organization]}, {[subOrganization]}/{[parentOrganization]} to indicate project sub-structures.
  ///
  ///
  static const Project = IriTerm.prevalidated('https://schema.org/Project');

  /// IRI for schema:PronounceableText
  ///
  /// Data type: PronounceableText.
  ///
  static const PronounceableText = IriTerm.prevalidated(
    'https://schema.org/PronounceableText',
  );

  /// IRI for schema:Property
  ///
  /// A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.
  ///
  static const Property = IriTerm.prevalidated('https://schema.org/Property');

  /// IRI for schema:PropertyValue
  ///
  /// A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.\n\n Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
  ///
  ///
  static const PropertyValue = IriTerm.prevalidated(
    'https://schema.org/PropertyValue',
  );

  /// IRI for schema:PropertyValueSpecification
  ///
  /// A Property value specification.
  ///
  static const PropertyValueSpecification = IriTerm.prevalidated(
    'https://schema.org/PropertyValueSpecification',
  );

  /// IRI for schema:Protein
  ///
  /// Protein is here used in its widest possible definition, as classes of amino acid based molecules. Amyloid-beta Protein in human (UniProt P05067), eukaryota (e.g. an OrthoDB group) or even a single molecule that one can point to are all of type :Protein. A protein can thus be a subclass of another protein, e.g. :Protein as a UniProt record can have multiple isoforms inside it which would also be :Protein. They can be imagined, synthetic, hypothetical or naturally occurring.
  ///
  static const Protein = IriTerm.prevalidated('https://schema.org/Protein');

  /// IRI for schema:PsychologicalTreatment
  ///
  /// A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.
  ///
  static const PsychologicalTreatment = IriTerm.prevalidated(
    'https://schema.org/PsychologicalTreatment',
  );

  /// IRI for schema:PublicSwimmingPool
  ///
  /// A public swimming pool.
  ///
  static const PublicSwimmingPool = IriTerm.prevalidated(
    'https://schema.org/PublicSwimmingPool',
  );

  /// IRI for schema:PublicToilet
  ///
  /// A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.
  ///
  static const PublicToilet = IriTerm.prevalidated(
    'https://schema.org/PublicToilet',
  );

  /// IRI for schema:PublicationEvent
  ///
  /// A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type, e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
  ///
  static const PublicationEvent = IriTerm.prevalidated(
    'https://schema.org/PublicationEvent',
  );

  /// IRI for schema:PublicationIssue
  ///
  /// A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.\n\nSee also [blog post](https://blog-schema.org/2014/09/02/schema-org-support-for-bibliographic-relationships-and-periodicals/).
  ///
  static const PublicationIssue = IriTerm.prevalidated(
    'https://schema.org/PublicationIssue',
  );

  /// IRI for schema:PublicationVolume
  ///
  /// A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.\n\nSee also [blog post](https://blog-schema.org/2014/09/02/schema-org-support-for-bibliographic-relationships-and-periodicals/).
  ///
  static const PublicationVolume = IriTerm.prevalidated(
    'https://schema.org/PublicationVolume',
  );

  /// IRI for schema:PurchaseType
  ///
  /// Enumerates a purchase type for an item.
  ///
  static const PurchaseType = IriTerm.prevalidated(
    'https://schema.org/PurchaseType',
  );

  /// IRI for schema:QAPage
  ///
  /// A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
  ///
  static const QAPage = IriTerm.prevalidated('https://schema.org/QAPage');

  /// IRI for schema:QualitativeValue
  ///
  /// A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
  ///
  static const QualitativeValue = IriTerm.prevalidated(
    'https://schema.org/QualitativeValue',
  );

  /// IRI for schema:QuantitativeValue
  ///
  /// A point value or interval for product characteristics and other purposes.
  ///
  static const QuantitativeValue = IriTerm.prevalidated(
    'https://schema.org/QuantitativeValue',
  );

  /// IRI for schema:QuantitativeValueDistribution
  ///
  /// A statistical distribution of values.
  ///
  static const QuantitativeValueDistribution = IriTerm.prevalidated(
    'https://schema.org/QuantitativeValueDistribution',
  );

  /// IRI for schema:Quantity
  ///
  /// Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 kg' or '4 milligrams'.
  ///
  static const Quantity = IriTerm.prevalidated('https://schema.org/Quantity');

  /// IRI for schema:Question
  ///
  /// A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
  ///
  static const Question = IriTerm.prevalidated('https://schema.org/Question');

  /// IRI for schema:Quiz
  ///
  /// Quiz: A test of knowledge, skills and abilities.
  ///
  static const Quiz = IriTerm.prevalidated('https://schema.org/Quiz');

  /// IRI for schema:Quotation
  ///
  /// A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use {[isBasedOn]} to link to source/origin. The {[recordedIn]} property can be used to reference a Quotation from an {[Event]}.
  ///
  static const Quotation = IriTerm.prevalidated('https://schema.org/Quotation');

  /// IRI for schema:QuoteAction
  ///
  /// An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
  ///
  static const QuoteAction = IriTerm.prevalidated(
    'https://schema.org/QuoteAction',
  );

  /// IRI for schema:RVPark
  ///
  /// A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
  ///
  static const RVPark = IriTerm.prevalidated('https://schema.org/RVPark');

  /// IRI for schema:RadiationTherapy
  ///
  /// A process of care using radiation aimed at improving a health condition.
  ///
  static const RadiationTherapy = IriTerm.prevalidated(
    'https://schema.org/RadiationTherapy',
  );

  /// IRI for schema:RadioBroadcastService
  ///
  /// A delivery service through which radio content is provided via broadcast over the air or online.
  ///
  static const RadioBroadcastService = IriTerm.prevalidated(
    'https://schema.org/RadioBroadcastService',
  );

  /// IRI for schema:RadioChannel
  ///
  /// A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.
  ///
  static const RadioChannel = IriTerm.prevalidated(
    'https://schema.org/RadioChannel',
  );

  /// IRI for schema:RadioClip
  ///
  /// A short radio program or a segment/part of a radio program.
  ///
  static const RadioClip = IriTerm.prevalidated('https://schema.org/RadioClip');

  /// IRI for schema:RadioEpisode
  ///
  /// A radio episode which can be part of a series or season.
  ///
  static const RadioEpisode = IriTerm.prevalidated(
    'https://schema.org/RadioEpisode',
  );

  /// IRI for schema:RadioSeason
  ///
  /// Season dedicated to radio broadcast and associated online delivery.
  ///
  static const RadioSeason = IriTerm.prevalidated(
    'https://schema.org/RadioSeason',
  );

  /// IRI for schema:RadioSeries
  ///
  /// CreativeWorkSeries dedicated to radio broadcast and associated online delivery.
  ///
  static const RadioSeries = IriTerm.prevalidated(
    'https://schema.org/RadioSeries',
  );

  /// IRI for schema:RadioStation
  ///
  /// A radio station.
  ///
  static const RadioStation = IriTerm.prevalidated(
    'https://schema.org/RadioStation',
  );

  /// IRI for schema:Rating
  ///
  /// A rating is an evaluation on a numeric scale, such as 1 to 5 stars.
  ///
  static const Rating = IriTerm.prevalidated('https://schema.org/Rating');

  /// IRI for schema:ReactAction
  ///
  /// The act of responding instinctively and emotionally to an object, expressing a sentiment.
  ///
  static const ReactAction = IriTerm.prevalidated(
    'https://schema.org/ReactAction',
  );

  /// IRI for schema:ReadAction
  ///
  /// The act of consuming written content.
  ///
  static const ReadAction = IriTerm.prevalidated(
    'https://schema.org/ReadAction',
  );

  /// IRI for schema:RealEstateAgent
  ///
  /// A real-estate agent.
  ///
  static const RealEstateAgent = IriTerm.prevalidated(
    'https://schema.org/RealEstateAgent',
  );

  /// IRI for schema:RealEstateListing
  ///
  /// A {[RealEstateListing]} is a listing that describes one or more real-estate {[Offer]}s (whose {[businessFunction]} is typically to lease out, or to sell).
  /// The {[RealEstateListing]} type itself represents the overall listing, as manifested in some {[WebPage]}.
  ///
  ///
  static const RealEstateListing = IriTerm.prevalidated(
    'https://schema.org/RealEstateListing',
  );

  /// IRI for schema:ReceiveAction
  ///
  /// The act of physically/electronically taking delivery of an object that has been transferred from an origin to a destination. Reciprocal of SendAction.\n\nRelated actions:\n\n* {[SendAction]}: The reciprocal of ReceiveAction.\n* {[TakeAction]}: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transferred (e.g. I can receive a package, but it does not mean the package is now mine).
  ///
  static const ReceiveAction = IriTerm.prevalidated(
    'https://schema.org/ReceiveAction',
  );

  /// IRI for schema:Recipe
  ///
  /// A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via {[suitableForDiet]}. The {[keywords]} property can also be used to add more detail.
  ///
  static const Recipe = IriTerm.prevalidated('https://schema.org/Recipe');

  /// IRI for schema:Recommendation
  ///
  /// {[Recommendation]} is a type of {[Review]} that suggests or proposes something as the best option or best course of action. Recommendations may be for products or services, or other concrete things, as in the case of a ranked list or product guide. A {[Guide]} may list multiple recommendations for different categories. For example, in a {[Guide]} about which TVs to buy, the author may have several {[Recommendation]}s.
  ///
  static const Recommendation = IriTerm.prevalidated(
    'https://schema.org/Recommendation',
  );

  /// IRI for schema:RecommendedDoseSchedule
  ///
  /// A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
  ///
  static const RecommendedDoseSchedule = IriTerm.prevalidated(
    'https://schema.org/RecommendedDoseSchedule',
  );

  /// IRI for schema:RecyclingCenter
  ///
  /// A recycling center.
  ///
  static const RecyclingCenter = IriTerm.prevalidated(
    'https://schema.org/RecyclingCenter',
  );

  /// IRI for schema:RefundTypeEnumeration
  ///
  /// Enumerates several kinds of product return refund types.
  ///
  static const RefundTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/RefundTypeEnumeration',
  );

  /// IRI for schema:RegisterAction
  ///
  /// The act of registering to be a user of a service, product or web page.\n\nRelated actions:\n\n* {[JoinAction]}: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.\n* {[FollowAction]}: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.\n* {[SubscribeAction]}: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.
  ///
  static const RegisterAction = IriTerm.prevalidated(
    'https://schema.org/RegisterAction',
  );

  /// IRI for schema:RejectAction
  ///
  /// The act of rejecting to/adopting an object.\n\nRelated actions:\n\n* {[AcceptAction]}: The antonym of RejectAction.
  ///
  static const RejectAction = IriTerm.prevalidated(
    'https://schema.org/RejectAction',
  );

  /// IRI for schema:RentAction
  ///
  /// The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
  ///
  static const RentAction = IriTerm.prevalidated(
    'https://schema.org/RentAction',
  );

  /// IRI for schema:RentalCarReservation
  ///
  /// A reservation for a rental car.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
  ///
  static const RentalCarReservation = IriTerm.prevalidated(
    'https://schema.org/RentalCarReservation',
  );

  /// IRI for schema:RepaymentSpecification
  ///
  /// A structured value representing repayment.
  ///
  static const RepaymentSpecification = IriTerm.prevalidated(
    'https://schema.org/RepaymentSpecification',
  );

  /// IRI for schema:ReplaceAction
  ///
  /// The act of editing a recipient by replacing an old object with a new object.
  ///
  static const ReplaceAction = IriTerm.prevalidated(
    'https://schema.org/ReplaceAction',
  );

  /// IRI for schema:ReplyAction
  ///
  /// The act of responding to a question/message asked/sent by the object. Related to {[AskAction]}.\n\nRelated actions:\n\n* {[AskAction]}: Appears generally as an origin of a ReplyAction.
  ///
  static const ReplyAction = IriTerm.prevalidated(
    'https://schema.org/ReplyAction',
  );

  /// IRI for schema:Report
  ///
  /// A Report generated by governmental or non-governmental organization.
  ///
  static const Report = IriTerm.prevalidated('https://schema.org/Report');

  /// IRI for schema:ReportageNewsArticle
  ///
  /// The {[ReportageNewsArticle]} type is a subtype of {[NewsArticle]} representing
  /// news articles which are the result of journalistic news reporting conventions.
  ///
  /// In practice many news publishers produce a wide variety of article types, many of which might be considered a {[NewsArticle]} but not a {[ReportageNewsArticle]}. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.
  ///
  /// The {[ReportageNewsArticle]} type is based on a stricter ideal for "news" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the {[ReportageNewsArticle]} sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.
  ///
  /// A {[ReportageNewsArticle]} which goes deeper into analysis can also be marked with an additional type of {[AnalysisNewsArticle]}.
  ///
  ///
  static const ReportageNewsArticle = IriTerm.prevalidated(
    'https://schema.org/ReportageNewsArticle',
  );

  /// IRI for schema:ReportedDoseSchedule
  ///
  /// A patient-reported or observed dosing schedule for a drug or supplement.
  ///
  static const ReportedDoseSchedule = IriTerm.prevalidated(
    'https://schema.org/ReportedDoseSchedule',
  );

  /// IRI for schema:ResearchOrganization
  ///
  /// A Research Organization (e.g. scientific institute, research company).
  ///
  static const ResearchOrganization = IriTerm.prevalidated(
    'https://schema.org/ResearchOrganization',
  );

  /// IRI for schema:ResearchProject
  ///
  /// A Research project.
  ///
  static const ResearchProject = IriTerm.prevalidated(
    'https://schema.org/ResearchProject',
  );

  /// IRI for schema:Researcher
  ///
  /// Researchers.
  ///
  static const Researcher = IriTerm.prevalidated(
    'https://schema.org/Researcher',
  );

  /// IRI for schema:Reservation
  ///
  /// Describes a reservation for travel, dining or an event. Some reservations require tickets. \n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use {[Offer]}.
  ///
  static const Reservation = IriTerm.prevalidated(
    'https://schema.org/Reservation',
  );

  /// IRI for schema:ReservationPackage
  ///
  /// A group of multiple reservations with common values for all sub-reservations.
  ///
  static const ReservationPackage = IriTerm.prevalidated(
    'https://schema.org/ReservationPackage',
  );

  /// IRI for schema:ReservationStatusType
  ///
  /// Enumerated status values for Reservation.
  ///
  static const ReservationStatusType = IriTerm.prevalidated(
    'https://schema.org/ReservationStatusType',
  );

  /// IRI for schema:ReserveAction
  ///
  /// Reserving a concrete object.\n\nRelated actions:\n\n* {[ScheduleAction]}: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.
  ///
  static const ReserveAction = IriTerm.prevalidated(
    'https://schema.org/ReserveAction',
  );

  /// IRI for schema:Reservoir
  ///
  /// A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
  ///
  static const Reservoir = IriTerm.prevalidated('https://schema.org/Reservoir');

  /// IRI for schema:Residence
  ///
  /// The place where a person lives.
  ///
  static const Residence = IriTerm.prevalidated('https://schema.org/Residence');

  /// IRI for schema:Resort
  ///
  /// A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishments operated by a single company (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Resort = IriTerm.prevalidated('https://schema.org/Resort');

  /// IRI for schema:Restaurant
  ///
  /// A restaurant.
  ///
  static const Restaurant = IriTerm.prevalidated(
    'https://schema.org/Restaurant',
  );

  /// IRI for schema:RestrictedDiet
  ///
  /// A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.
  ///
  static const RestrictedDiet = IriTerm.prevalidated(
    'https://schema.org/RestrictedDiet',
  );

  /// IRI for schema:ResumeAction
  ///
  /// The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).
  ///
  static const ResumeAction = IriTerm.prevalidated(
    'https://schema.org/ResumeAction',
  );

  /// IRI for schema:ReturnAction
  ///
  /// The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
  ///
  static const ReturnAction = IriTerm.prevalidated(
    'https://schema.org/ReturnAction',
  );

  /// IRI for schema:ReturnFeesEnumeration
  ///
  /// Enumerates several kinds of policies for product return fees.
  ///
  static const ReturnFeesEnumeration = IriTerm.prevalidated(
    'https://schema.org/ReturnFeesEnumeration',
  );

  /// IRI for schema:ReturnLabelSourceEnumeration
  ///
  /// Enumerates several types of return labels for product returns.
  ///
  static const ReturnLabelSourceEnumeration = IriTerm.prevalidated(
    'https://schema.org/ReturnLabelSourceEnumeration',
  );

  /// IRI for schema:ReturnMethodEnumeration
  ///
  /// Enumerates several types of product return methods.
  ///
  static const ReturnMethodEnumeration = IriTerm.prevalidated(
    'https://schema.org/ReturnMethodEnumeration',
  );

  /// IRI for schema:Review
  ///
  /// A review of an item - for example, of a restaurant, movie, or store.
  ///
  static const Review = IriTerm.prevalidated('https://schema.org/Review');

  /// IRI for schema:ReviewAction
  ///
  /// The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
  ///
  static const ReviewAction = IriTerm.prevalidated(
    'https://schema.org/ReviewAction',
  );

  /// IRI for schema:ReviewNewsArticle
  ///
  /// A {[NewsArticle]} and {[CriticReview]} providing a professional critic's assessment of a service, product, performance, or artistic or literary work.
  ///
  static const ReviewNewsArticle = IriTerm.prevalidated(
    'https://schema.org/ReviewNewsArticle',
  );

  /// IRI for schema:RiverBodyOfWater
  ///
  /// A river (for example, the broad majestic Shannon).
  ///
  static const RiverBodyOfWater = IriTerm.prevalidated(
    'https://schema.org/RiverBodyOfWater',
  );

  /// IRI for schema:Role
  ///
  /// Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.\n\nSee also [blog post](http://blog.schema.org/2014/06/introducing-role.html).
  ///
  static const Role = IriTerm.prevalidated('https://schema.org/Role');

  /// IRI for schema:RoofingContractor
  ///
  /// A roofing contractor.
  ///
  static const RoofingContractor = IriTerm.prevalidated(
    'https://schema.org/RoofingContractor',
  );

  /// IRI for schema:Room
  ///
  /// A room is a distinguishable space within a structure, usually separated from other spaces by interior walls (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Room = IriTerm.prevalidated('https://schema.org/Room');

  /// IRI for schema:RsvpAction
  ///
  /// The act of notifying an event organizer as to whether you expect to attend the event.
  ///
  static const RsvpAction = IriTerm.prevalidated(
    'https://schema.org/RsvpAction',
  );

  /// IRI for schema:RsvpResponseType
  ///
  /// RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.
  ///
  static const RsvpResponseType = IriTerm.prevalidated(
    'https://schema.org/RsvpResponseType',
  );

  /// IRI for schema:SaleEvent
  ///
  /// Event type: Sales event.
  ///
  static const SaleEvent = IriTerm.prevalidated('https://schema.org/SaleEvent');

  /// IRI for schema:SatiricalArticle
  ///
  /// An {[Article]} whose content is primarily {[satirical]}(https://en.wikipedia.org/wiki/Satire) in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a {[NewsArticle]}. {[ScholarlyArticle]}s are also sometimes satirized.
  ///
  static const SatiricalArticle = IriTerm.prevalidated(
    'https://schema.org/SatiricalArticle',
  );

  /// IRI for schema:Schedule
  ///
  /// A schedule defines a repeating time period used to describe a regularly occurring {[Event]}. At a minimum a schedule will specify {[repeatFrequency]} which describes the interval between occurrences of the event. Additional information can be provided to specify the schedule more precisely.
  /// This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also
  /// have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
  ///
  static const Schedule = IriTerm.prevalidated('https://schema.org/Schedule');

  /// IRI for schema:ScheduleAction
  ///
  /// Scheduling future actions, events, or tasks.\n\nRelated actions:\n\n* {[ReserveAction]}: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.
  ///
  static const ScheduleAction = IriTerm.prevalidated(
    'https://schema.org/ScheduleAction',
  );

  /// IRI for schema:ScholarlyArticle
  ///
  /// A scholarly article.
  ///
  static const ScholarlyArticle = IriTerm.prevalidated(
    'https://schema.org/ScholarlyArticle',
  );

  /// IRI for schema:School
  ///
  /// A school.
  ///
  static const School = IriTerm.prevalidated('https://schema.org/School');

  /// IRI for schema:SchoolDistrict
  ///
  /// A School District is an administrative area for the administration of schools.
  ///
  static const SchoolDistrict = IriTerm.prevalidated(
    'https://schema.org/SchoolDistrict',
  );

  /// IRI for schema:ScreeningEvent
  ///
  /// A screening of a movie or other video.
  ///
  static const ScreeningEvent = IriTerm.prevalidated(
    'https://schema.org/ScreeningEvent',
  );

  /// IRI for schema:Sculpture
  ///
  /// A piece of sculpture.
  ///
  static const Sculpture = IriTerm.prevalidated('https://schema.org/Sculpture');

  /// IRI for schema:SeaBodyOfWater
  ///
  /// A sea (for example, the Caspian sea).
  ///
  static const SeaBodyOfWater = IriTerm.prevalidated(
    'https://schema.org/SeaBodyOfWater',
  );

  /// IRI for schema:SearchAction
  ///
  /// The act of searching for an object.\n\nRelated actions:\n\n* {[FindAction]}: SearchAction generally leads to a FindAction, but not necessarily.
  ///
  static const SearchAction = IriTerm.prevalidated(
    'https://schema.org/SearchAction',
  );

  /// IRI for schema:SearchRescueOrganization
  ///
  /// A Search and Rescue organization of some kind.
  ///
  static const SearchRescueOrganization = IriTerm.prevalidated(
    'https://schema.org/SearchRescueOrganization',
  );

  /// IRI for schema:SearchResultsPage
  ///
  /// Web page type: Search results page.
  ///
  static const SearchResultsPage = IriTerm.prevalidated(
    'https://schema.org/SearchResultsPage',
  );

  /// IRI for schema:Season
  ///
  /// A media season, e.g. TV, radio, video game etc.
  ///
  static const Season = IriTerm.prevalidated('https://schema.org/Season');

  /// IRI for schema:Seat
  ///
  /// Used to describe a seat, such as a reserved seat in an event reservation.
  ///
  static const Seat = IriTerm.prevalidated('https://schema.org/Seat');

  /// IRI for schema:SeekToAction
  ///
  /// This is the {[Action]} of navigating to a specific {[startOffset]} timestamp within a {[VideoObject]}, typically represented with a URL template structure.
  ///
  static const SeekToAction = IriTerm.prevalidated(
    'https://schema.org/SeekToAction',
  );

  /// IRI for schema:SelfStorage
  ///
  /// A self-storage facility.
  ///
  static const SelfStorage = IriTerm.prevalidated(
    'https://schema.org/SelfStorage',
  );

  /// IRI for schema:SellAction
  ///
  /// The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
  ///
  static const SellAction = IriTerm.prevalidated(
    'https://schema.org/SellAction',
  );

  /// IRI for schema:SendAction
  ///
  /// The act of physically/electronically dispatching an object for transfer from an origin to a destination. Related actions:\n\n* {[ReceiveAction]}: The reciprocal of SendAction.\n* {[GiveAction]}: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).
  ///
  static const SendAction = IriTerm.prevalidated(
    'https://schema.org/SendAction',
  );

  /// IRI for schema:Series
  ///
  /// A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also {[CreativeWorkSeries]}, {[EventSeries]}.
  ///
  static const Series = IriTerm.prevalidated('https://schema.org/Series');

  /// IRI for schema:Service
  ///
  /// A service provided by an organization, e.g. delivery service, print services, etc.
  ///
  static const Service = IriTerm.prevalidated('https://schema.org/Service');

  /// IRI for schema:ServiceChannel
  ///
  /// A means for accessing a service, e.g. a government office location, web site, or phone number.
  ///
  static const ServiceChannel = IriTerm.prevalidated(
    'https://schema.org/ServiceChannel',
  );

  /// IRI for schema:ServicePeriod
  ///
  /// ServicePeriod represents a duration with some constraints about cutoff time and business days. This is used e.g. in shipping for handling times or transit time.
  ///
  static const ServicePeriod = IriTerm.prevalidated(
    'https://schema.org/ServicePeriod',
  );

  /// IRI for schema:ShareAction
  ///
  /// The act of distributing content to people for their amusement or edification.
  ///
  static const ShareAction = IriTerm.prevalidated(
    'https://schema.org/ShareAction',
  );

  /// IRI for schema:SheetMusic
  ///
  /// Printed music, as opposed to performed or recorded music.
  ///
  static const SheetMusic = IriTerm.prevalidated(
    'https://schema.org/SheetMusic',
  );

  /// IRI for schema:ShippingConditions
  ///
  /// ShippingConditions represent a set of constraints and information about the conditions of shipping a product. Such conditions may apply to only a subset of the products being shipped, depending on aspects of the product like weight, size, price, destination, and others. All the specified conditions must be met for this ShippingConditions to apply.
  ///
  static const ShippingConditions = IriTerm.prevalidated(
    'https://schema.org/ShippingConditions',
  );

  /// IRI for schema:ShippingDeliveryTime
  ///
  /// ShippingDeliveryTime provides various pieces of information about delivery times for shipping.
  ///
  static const ShippingDeliveryTime = IriTerm.prevalidated(
    'https://schema.org/ShippingDeliveryTime',
  );

  /// IRI for schema:ShippingRateSettings
  ///
  /// A ShippingRateSettings represents re-usable pieces of shipping information. It is designed for publication on an URL that may be referenced via the {[shippingSettingsLink]} property of an {[OfferShippingDetails]}. Several occurrences can be published, distinguished and matched (i.e. identified/referenced) by their different values for {[shippingLabel]}.
  ///
  static const ShippingRateSettings = IriTerm.prevalidated(
    'https://schema.org/ShippingRateSettings',
  );

  /// IRI for schema:ShippingService
  ///
  /// ShippingService represents the criteria used to determine if and how an offer could be shipped to a customer.
  ///
  static const ShippingService = IriTerm.prevalidated(
    'https://schema.org/ShippingService',
  );

  /// IRI for schema:ShoeStore
  ///
  /// A shoe store.
  ///
  static const ShoeStore = IriTerm.prevalidated('https://schema.org/ShoeStore');

  /// IRI for schema:ShoppingCenter
  ///
  /// A shopping center or mall.
  ///
  static const ShoppingCenter = IriTerm.prevalidated(
    'https://schema.org/ShoppingCenter',
  );

  /// IRI for schema:ShortStory
  ///
  /// Short story or tale. A brief work of literature, usually written in narrative prose.
  ///
  static const ShortStory = IriTerm.prevalidated(
    'https://schema.org/ShortStory',
  );

  /// IRI for schema:SingleFamilyResidence
  ///
  /// Residence type: Single-family home.
  ///
  static const SingleFamilyResidence = IriTerm.prevalidated(
    'https://schema.org/SingleFamilyResidence',
  );

  /// IRI for schema:SiteNavigationElement
  ///
  /// A navigation element of the page.
  ///
  static const SiteNavigationElement = IriTerm.prevalidated(
    'https://schema.org/SiteNavigationElement',
  );

  /// IRI for schema:SizeGroupEnumeration
  ///
  /// Enumerates common size groups for various product categories.
  ///
  static const SizeGroupEnumeration = IriTerm.prevalidated(
    'https://schema.org/SizeGroupEnumeration',
  );

  /// IRI for schema:SizeSpecification
  ///
  /// Size related properties of a product, typically a size code ({[name]}) and optionally a {[sizeSystem]}, {[sizeGroup]}, and product measurements ({[hasMeasurement]}). In addition, the intended audience can be defined through {[suggestedAge]}, {[suggestedGender]}, and suggested body measurements ({[suggestedMeasurement]}).
  ///
  static const SizeSpecification = IriTerm.prevalidated(
    'https://schema.org/SizeSpecification',
  );

  /// IRI for schema:SizeSystemEnumeration
  ///
  /// Enumerates common size systems for different categories of products, for example "EN-13402" or "UK" for wearables or "Imperial" for screws.
  ///
  static const SizeSystemEnumeration = IriTerm.prevalidated(
    'https://schema.org/SizeSystemEnumeration',
  );

  /// IRI for schema:SkiResort
  ///
  /// A ski resort.
  ///
  static const SkiResort = IriTerm.prevalidated('https://schema.org/SkiResort');

  /// IRI for schema:SocialEvent
  ///
  /// Event type: Social event.
  ///
  static const SocialEvent = IriTerm.prevalidated(
    'https://schema.org/SocialEvent',
  );

  /// IRI for schema:SocialMediaPosting
  ///
  /// A post to a social media platform, including blog posts, tweets, Facebook posts, etc.
  ///
  static const SocialMediaPosting = IriTerm.prevalidated(
    'https://schema.org/SocialMediaPosting',
  );

  /// IRI for schema:SoftwareApplication
  ///
  /// A software application.
  ///
  static const SoftwareApplication = IriTerm.prevalidated(
    'https://schema.org/SoftwareApplication',
  );

  /// IRI for schema:SoftwareSourceCode
  ///
  /// Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
  ///
  static const SoftwareSourceCode = IriTerm.prevalidated(
    'https://schema.org/SoftwareSourceCode',
  );

  /// IRI for schema:SolveMathAction
  ///
  /// The action that takes in a math expression and directs users to a page potentially capable of solving/simplifying that expression.
  ///
  static const SolveMathAction = IriTerm.prevalidated(
    'https://schema.org/SolveMathAction',
  );

  /// IRI for schema:SomeProducts
  ///
  /// A placeholder for multiple similar products of the same kind.
  ///
  static const SomeProducts = IriTerm.prevalidated(
    'https://schema.org/SomeProducts',
  );

  /// IRI for schema:SpeakableSpecification
  ///
  /// A SpeakableSpecification indicates (typically via {[xpath]} or {[cssSelector]}) sections of a document that are highlighted as particularly {[speakable]}. Instances of this type are expected to be used primarily as values of the {[speakable]} property.
  ///
  static const SpeakableSpecification = IriTerm.prevalidated(
    'https://schema.org/SpeakableSpecification',
  );

  /// IRI for schema:SpecialAnnouncement
  ///
  /// A SpecialAnnouncement combines a simple date-stamped textual information update
  /// with contextualized Web links and other structured data.  It represents an information update made by a
  /// locally-oriented organization, for example schools, pharmacies, healthcare providers,  community groups, police,
  /// local government.
  ///
  /// For work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#).
  ///
  /// The motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), and the initial vocabulary is oriented to this urgent situation. Schema.org
  /// expect to improve the markup iteratively as it is deployed and as feedback emerges from use. In addition to our
  /// usual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#).
  ///
  ///
  /// While this schema is designed to communicate urgent crisis-related information, it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), although there may be overlaps. The intent is to cover
  /// the kinds of everyday practical information being posted to existing websites during an emergency situation.
  ///
  /// Several kinds of information can be provided:
  ///
  /// We encourage the provision of "name", "text", "datePosted", "expires" (if appropriate), "category" and
  /// "url" as a simple baseline. It is important to provide a value for "category" where possible, most ideally as a well known
  /// URL from Wikipedia or Wikidata. In the case of the 2019-2020 Coronavirus pandemic, this should be "https://en.wikipedia.org/w/index.php?title=2019-20\_coronavirus\_pandemic" or "https://www.wikidata.org/wiki/Q81068910".
  ///
  /// For many of the possible properties, values can either be simple links or an inline description, depending on whether a summary is available. For a link, provide just the URL of the appropriate page as the property's value. For an inline description, use a {[WebContent]} type, and provide the url as a property of that, alongside at least a simple "{[text]}" summary of the page. It is
  /// unlikely that a single SpecialAnnouncement will need all of the possible properties simultaneously.
  ///
  /// We expect that in many cases the page referenced might contain more specialized structured data, e.g. contact info, {[openingHours]}, {[Event]}, {[FAQPage]} etc. By linking to those pages from a {[SpecialAnnouncement]} you can help make it clearer that the events are related to the situation (e.g. Coronavirus) indicated by the {[category]} property of the {[SpecialAnnouncement]}.
  ///
  /// Many {[SpecialAnnouncement]}s will relate to particular regions and to identifiable local organizations. Use {[spatialCoverage]} for the region, and {[announcementLocation]} to indicate specific {[LocalBusiness]}es and {[CivicStructure]}s. If the announcement affects both a particular region and a specific location (for example, a library closure that serves an entire region), use both {[spatialCoverage]} and {[announcementLocation]}.
  ///
  /// The {[about]} property can be used to indicate entities that are the focus of the announcement. We now recommend using {[about]} only
  /// for representing non-location entities (e.g. a {[Course]} or a {[RadioStation]}). For places, use {[announcementLocation]} and {[spatialCoverage]}. Consumers of this markup should be aware that the initial design encouraged the use of {[about]} for locations too.
  ///
  /// The basic content of {[SpecialAnnouncement]} is similar to that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) feed. For publishers without such feeds, basic feed-like information can be shared by posting
  /// {[SpecialAnnouncement]} updates in a page, e.g. using JSON-LD. For sites with Atom/RSS functionality, you can point to a feed
  /// with the {[webFeed]} property. This can be a simple URL, or an inline {[DataFeed]} object, with {[encodingFormat]} providing
  /// media type information, e.g. "application/rss+xml" or "application/atom+xml".
  ///
  ///
  static const SpecialAnnouncement = IriTerm.prevalidated(
    'https://schema.org/SpecialAnnouncement',
  );

  /// IRI for schema:Specialty
  ///
  /// Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
  ///
  static const Specialty = IriTerm.prevalidated('https://schema.org/Specialty');

  /// IRI for schema:SportingGoodsStore
  ///
  /// A sporting goods store.
  ///
  static const SportingGoodsStore = IriTerm.prevalidated(
    'https://schema.org/SportingGoodsStore',
  );

  /// IRI for schema:SportsActivityLocation
  ///
  /// A sports location, such as a playing field.
  ///
  static const SportsActivityLocation = IriTerm.prevalidated(
    'https://schema.org/SportsActivityLocation',
  );

  /// IRI for schema:SportsClub
  ///
  /// A sports club.
  ///
  static const SportsClub = IriTerm.prevalidated(
    'https://schema.org/SportsClub',
  );

  /// IRI for schema:SportsEvent
  ///
  /// Event type: Sports event.
  ///
  static const SportsEvent = IriTerm.prevalidated(
    'https://schema.org/SportsEvent',
  );

  /// IRI for schema:SportsOrganization
  ///
  /// Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.
  ///
  static const SportsOrganization = IriTerm.prevalidated(
    'https://schema.org/SportsOrganization',
  );

  /// IRI for schema:SportsTeam
  ///
  /// Organization: Sports team.
  ///
  static const SportsTeam = IriTerm.prevalidated(
    'https://schema.org/SportsTeam',
  );

  /// IRI for schema:SpreadsheetDigitalDocument
  ///
  /// A spreadsheet file.
  ///
  static const SpreadsheetDigitalDocument = IriTerm.prevalidated(
    'https://schema.org/SpreadsheetDigitalDocument',
  );

  /// IRI for schema:StadiumOrArena
  ///
  /// A stadium.
  ///
  static const StadiumOrArena = IriTerm.prevalidated(
    'https://schema.org/StadiumOrArena',
  );

  /// IRI for schema:State
  ///
  /// A state or province of a country.
  ///
  static const State = IriTerm.prevalidated('https://schema.org/State');

  /// IRI for schema:Statement
  ///
  /// A statement about something, for example a fun or interesting fact. If known, the main entity this statement is about can be indicated using mainEntity. For more formal claims (e.g. in Fact Checking), consider using {[Claim]} instead. Use the {[text]} property to capture the text of the statement.
  ///
  static const Statement = IriTerm.prevalidated('https://schema.org/Statement');

  /// IRI for schema:StatisticalPopulation
  ///
  /// A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property {[populationType]} is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a {[StatisticalPopulation]} representing all {[Person]}s with a {[homeLocation]} of East Podunk California would be described by applying the appropriate {[homeLocation]} and {[populationType]} properties to a {[StatisticalPopulation]} item that stands for that set of people.
  /// The properties {[numConstraints]} and {[constraintProperty]} are used to specify which of the populations properties are used to specify the population. Note that the sense of "population" used here is the general sense of a statistical
  /// population, and does not imply that the population consists of people. For example, a {[populationType]} of {[Event]} or {[NewsArticle]} could be used. See also {[Observation]}, where a {[populationType]} such as {[Person]} or {[Event]} can be indicated directly. In most cases it may be better to use {[StatisticalVariable]} instead of {[StatisticalPopulation]}.
  ///
  static const StatisticalPopulation = IriTerm.prevalidated(
    'https://schema.org/StatisticalPopulation',
  );

  /// IRI for schema:StatisticalVariable
  ///
  /// {[StatisticalVariable]} represents any type of statistical metric that can be measured at a place and time. The usage pattern for {[StatisticalVariable]} is typically expressed using {[Observation]} with an explicit {[populationType]}, which is a type, typically drawn from Schema.org. Each {[StatisticalVariable]} is marked as a {[ConstraintNode]}, meaning that some properties (those listed using {[constraintProperty]}) serve in this setting solely to define the statistical variable rather than literally describe a specific person, place or thing. For example, a {[StatisticalVariable]} Median_Height_Person_Female representing the median height of women, could be written as follows: the population type is {[Person]}; the measuredProperty {[height]}; the {[statType]} {[median]}; the {[gender]} {[Female]}. It is important to note that there are many kinds of scientific quantitative observation which are not fully, perfectly or unambiguously described following this pattern, or with solely Schema.org terminology. The approach taken here is designed to allow partial, incremental or minimal description of {[StatisticalVariable]}s, and the use of detailed sets of entity and property IDs from external repositories. The {[measurementMethod]}, {[unitCode]} and {[unitText]} properties can also be used to clarify the specific nature and notation of an observed measurement.
  ///
  static const StatisticalVariable = IriTerm.prevalidated(
    'https://schema.org/StatisticalVariable',
  );

  /// IRI for schema:StatusEnumeration
  ///
  /// Lists or enumerations dealing with status types.
  ///
  static const StatusEnumeration = IriTerm.prevalidated(
    'https://schema.org/StatusEnumeration',
  );

  /// IRI for schema:SteeringPositionValue
  ///
  /// A value indicating a steering position.
  ///
  static const SteeringPositionValue = IriTerm.prevalidated(
    'https://schema.org/SteeringPositionValue',
  );

  /// IRI for schema:Store
  ///
  /// A retail good store.
  ///
  static const Store = IriTerm.prevalidated('https://schema.org/Store');

  /// IRI for schema:StructuredValue
  ///
  /// Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
  ///
  static const StructuredValue = IriTerm.prevalidated(
    'https://schema.org/StructuredValue',
  );

  /// IRI for schema:SubscribeAction
  ///
  /// The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.\n\nRelated actions:\n\n* {[FollowAction]}: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.\n* {[RegisterAction]}: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\n* {[JoinAction]}: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.
  ///
  static const SubscribeAction = IriTerm.prevalidated(
    'https://schema.org/SubscribeAction',
  );

  /// IRI for schema:Substance
  ///
  /// Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.
  ///
  static const Substance = IriTerm.prevalidated('https://schema.org/Substance');

  /// IRI for schema:SubwayStation
  ///
  /// A subway station.
  ///
  static const SubwayStation = IriTerm.prevalidated(
    'https://schema.org/SubwayStation',
  );

  /// IRI for schema:Suite
  ///
  /// A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
  /// <br /><br />
  /// See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
  ///
  ///
  static const Suite = IriTerm.prevalidated('https://schema.org/Suite');

  /// IRI for schema:SuperficialAnatomy
  ///
  /// Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).
  ///
  static const SuperficialAnatomy = IriTerm.prevalidated(
    'https://schema.org/SuperficialAnatomy',
  );

  /// IRI for schema:SurgicalProcedure
  ///
  /// A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.
  ///
  static const SurgicalProcedure = IriTerm.prevalidated(
    'https://schema.org/SurgicalProcedure',
  );

  /// IRI for schema:SuspendAction
  ///
  /// The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).
  ///
  static const SuspendAction = IriTerm.prevalidated(
    'https://schema.org/SuspendAction',
  );

  /// IRI for schema:Syllabus
  ///
  /// A syllabus that describes the material covered in a course, often with several such sections per {[Course]} so that a distinct {[timeRequired]} can be provided for that section of the {[Course]}.
  ///
  static const Syllabus = IriTerm.prevalidated('https://schema.org/Syllabus');

  /// IRI for schema:Synagogue
  ///
  /// A synagogue.
  ///
  static const Synagogue = IriTerm.prevalidated('https://schema.org/Synagogue');

  /// IRI for schema:TVClip
  ///
  /// A short TV program or a segment/part of a TV program.
  ///
  static const TVClip = IriTerm.prevalidated('https://schema.org/TVClip');

  /// IRI for schema:TVEpisode
  ///
  /// A TV episode which can be part of a series or season.
  ///
  static const TVEpisode = IriTerm.prevalidated('https://schema.org/TVEpisode');

  /// IRI for schema:TVSeason
  ///
  /// Season dedicated to TV broadcast and associated online delivery.
  ///
  static const TVSeason = IriTerm.prevalidated('https://schema.org/TVSeason');

  /// IRI for schema:TVSeries
  ///
  /// CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
  ///
  static const TVSeries = IriTerm.prevalidated('https://schema.org/TVSeries');

  /// IRI for schema:Table
  ///
  /// A table on a Web page.
  ///
  static const Table = IriTerm.prevalidated('https://schema.org/Table');

  /// IRI for schema:TakeAction
  ///
  /// The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.\n\nRelated actions:\n\n* {[GiveAction]}: The reciprocal of TakeAction.\n* {[ReceiveAction]}: Unlike ReceiveAction, TakeAction implies that ownership has been transferred.
  ///
  static const TakeAction = IriTerm.prevalidated(
    'https://schema.org/TakeAction',
  );

  /// IRI for schema:TattooParlor
  ///
  /// A tattoo parlor.
  ///
  static const TattooParlor = IriTerm.prevalidated(
    'https://schema.org/TattooParlor',
  );

  /// IRI for schema:Taxi
  ///
  /// A taxi.
  ///
  static const Taxi = IriTerm.prevalidated('https://schema.org/Taxi');

  /// IRI for schema:TaxiReservation
  ///
  /// A reservation for a taxi.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const TaxiReservation = IriTerm.prevalidated(
    'https://schema.org/TaxiReservation',
  );

  /// IRI for schema:TaxiService
  ///
  /// A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.
  ///
  static const TaxiService = IriTerm.prevalidated(
    'https://schema.org/TaxiService',
  );

  /// IRI for schema:TaxiStand
  ///
  /// A taxi stand.
  ///
  static const TaxiStand = IriTerm.prevalidated('https://schema.org/TaxiStand');

  /// IRI for schema:Taxon
  ///
  /// A set of organisms asserted to represent a natural cohesive biological unit.
  ///
  static const Taxon = IriTerm.prevalidated('https://schema.org/Taxon');

  /// IRI for schema:TechArticle
  ///
  /// A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
  ///
  static const TechArticle = IriTerm.prevalidated(
    'https://schema.org/TechArticle',
  );

  /// IRI for schema:TelevisionChannel
  ///
  /// A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.
  ///
  static const TelevisionChannel = IriTerm.prevalidated(
    'https://schema.org/TelevisionChannel',
  );

  /// IRI for schema:TelevisionStation
  ///
  /// A television station.
  ///
  static const TelevisionStation = IriTerm.prevalidated(
    'https://schema.org/TelevisionStation',
  );

  /// IRI for schema:TennisComplex
  ///
  /// A tennis complex.
  ///
  static const TennisComplex = IriTerm.prevalidated(
    'https://schema.org/TennisComplex',
  );

  /// IRI for schema:Text
  ///
  /// Data type: Text.
  ///
  static const Text = IriTerm.prevalidated('https://schema.org/Text');

  /// IRI for schema:TextDigitalDocument
  ///
  /// A file composed primarily of text.
  ///
  static const TextDigitalDocument = IriTerm.prevalidated(
    'https://schema.org/TextDigitalDocument',
  );

  /// IRI for schema:TextObject
  ///
  /// A text file. The text can be unformatted or contain markup, html, etc.
  ///
  static const TextObject = IriTerm.prevalidated(
    'https://schema.org/TextObject',
  );

  /// IRI for schema:TheaterEvent
  ///
  /// Event type: Theater performance.
  ///
  static const TheaterEvent = IriTerm.prevalidated(
    'https://schema.org/TheaterEvent',
  );

  /// IRI for schema:TheaterGroup
  ///
  /// A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
  ///
  static const TheaterGroup = IriTerm.prevalidated(
    'https://schema.org/TheaterGroup',
  );

  /// IRI for schema:TherapeuticProcedure
  ///
  /// A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.
  ///
  static const TherapeuticProcedure = IriTerm.prevalidated(
    'https://schema.org/TherapeuticProcedure',
  );

  /// IRI for schema:Thesis
  ///
  /// A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.
  ///
  static const Thesis = IriTerm.prevalidated('https://schema.org/Thesis');

  /// IRI for schema:Thing
  ///
  /// The most generic type of item.
  ///
  static const Thing = IriTerm.prevalidated('https://schema.org/Thing');

  /// IRI for schema:Ticket
  ///
  /// Used to describe a ticket to an event, a flight, a bus ride, etc.
  ///
  static const Ticket = IriTerm.prevalidated('https://schema.org/Ticket');

  /// IRI for schema:TieAction
  ///
  /// The act of reaching a draw in a competitive activity.
  ///
  static const TieAction = IriTerm.prevalidated('https://schema.org/TieAction');

  /// IRI for schema:TierBenefitEnumeration
  ///
  /// An enumeration of possible benefits as part of a loyalty (members) program.
  ///
  static const TierBenefitEnumeration = IriTerm.prevalidated(
    'https://schema.org/TierBenefitEnumeration',
  );

  /// IRI for schema:Time
  ///
  /// A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).
  ///
  static const Time = IriTerm.prevalidated('https://schema.org/Time');

  /// IRI for schema:TipAction
  ///
  /// The act of giving money voluntarily to a beneficiary in recognition of services rendered.
  ///
  static const TipAction = IriTerm.prevalidated('https://schema.org/TipAction');

  /// IRI for schema:TireShop
  ///
  /// A tire shop.
  ///
  static const TireShop = IriTerm.prevalidated('https://schema.org/TireShop');

  /// IRI for schema:TouristAttraction
  ///
  /// A tourist attraction.  In principle any Thing can be a {[TouristAttraction]}, from a {[Mountain]} and {[LandmarksOrHistoricalBuildings]} to a {[LocalBusiness]}.  This Type can be used on its own to describe a general {[TouristAttraction]}, or be used as an {[additionalType]} to add tourist attraction properties to any other type.  (See examples below)
  ///
  static const TouristAttraction = IriTerm.prevalidated(
    'https://schema.org/TouristAttraction',
  );

  /// IRI for schema:TouristDestination
  ///
  /// A tourist destination. In principle any {[Place]} can be a {[TouristDestination]} from a {[City]}, Region or {[Country]} to an {[AmusementPark]} or {[Hotel]}. This Type can be used on its own to describe a general {[TouristDestination]}, or be used as an {[additionalType]} to add tourist relevant properties to any other {[Place]}.  A {[TouristDestination]} is defined as a {[Place]} that contains, or is colocated with, one or more {[TouristAttraction]}s, often linked by a similar theme or interest to a particular {[touristType]}. The [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.
  /// (See examples below.)
  ///
  static const TouristDestination = IriTerm.prevalidated(
    'https://schema.org/TouristDestination',
  );

  /// IRI for schema:TouristInformationCenter
  ///
  /// A tourist information center.
  ///
  static const TouristInformationCenter = IriTerm.prevalidated(
    'https://schema.org/TouristInformationCenter',
  );

  /// IRI for schema:TouristTrip
  ///
  /// A tourist trip. A created itinerary of visits to one or more places of interest ({[TouristAttraction]}/{[TouristDestination]}) often linked by a similar theme, geographic area, or interest to a particular {[touristType]}. The [UNWTO](http://www2.unwto.org/) defines tourism trip as the Trip taken by visitors.
  /// (See examples below.)
  ///
  static const TouristTrip = IriTerm.prevalidated(
    'https://schema.org/TouristTrip',
  );

  /// IRI for schema:ToyStore
  ///
  /// A toy store.
  ///
  static const ToyStore = IriTerm.prevalidated('https://schema.org/ToyStore');

  /// IRI for schema:TrackAction
  ///
  /// An agent tracks an object for updates.\n\nRelated actions:\n\n* {[FollowAction]}: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.\n* {[SubscribeAction]}: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.
  ///
  static const TrackAction = IriTerm.prevalidated(
    'https://schema.org/TrackAction',
  );

  /// IRI for schema:TradeAction
  ///
  /// The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
  ///
  static const TradeAction = IriTerm.prevalidated(
    'https://schema.org/TradeAction',
  );

  /// IRI for schema:TrainReservation
  ///
  /// A reservation for train travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use {[Offer]}.
  ///
  static const TrainReservation = IriTerm.prevalidated(
    'https://schema.org/TrainReservation',
  );

  /// IRI for schema:TrainStation
  ///
  /// A train station.
  ///
  static const TrainStation = IriTerm.prevalidated(
    'https://schema.org/TrainStation',
  );

  /// IRI for schema:TrainTrip
  ///
  /// A trip on a commercial train line.
  ///
  static const TrainTrip = IriTerm.prevalidated('https://schema.org/TrainTrip');

  /// IRI for schema:TransferAction
  ///
  /// The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
  ///
  static const TransferAction = IriTerm.prevalidated(
    'https://schema.org/TransferAction',
  );

  /// IRI for schema:TravelAction
  ///
  /// The act of traveling from a fromLocation to a destination by a specified mode of transport, optionally with participants.
  ///
  static const TravelAction = IriTerm.prevalidated(
    'https://schema.org/TravelAction',
  );

  /// IRI for schema:TravelAgency
  ///
  /// A travel agency.
  ///
  static const TravelAgency = IriTerm.prevalidated(
    'https://schema.org/TravelAgency',
  );

  /// IRI for schema:TreatmentIndication
  ///
  /// An indication for treating an underlying condition, symptom, etc.
  ///
  static const TreatmentIndication = IriTerm.prevalidated(
    'https://schema.org/TreatmentIndication',
  );

  /// IRI for schema:Trip
  ///
  /// A trip or journey. An itinerary of visits to one or more places.
  ///
  static const Trip = IriTerm.prevalidated('https://schema.org/Trip');

  /// IRI for schema:TypeAndQuantityNode
  ///
  /// A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
  ///
  static const TypeAndQuantityNode = IriTerm.prevalidated(
    'https://schema.org/TypeAndQuantityNode',
  );

  /// IRI for schema:UKNonprofitType
  ///
  /// UKNonprofitType: Non-profit organization type originating from the United Kingdom.
  ///
  static const UKNonprofitType = IriTerm.prevalidated(
    'https://schema.org/UKNonprofitType',
  );

  /// IRI for schema:URL
  ///
  /// Data type: URL.
  ///
  static const URL = IriTerm.prevalidated('https://schema.org/URL');

  /// IRI for schema:USNonprofitType
  ///
  /// USNonprofitType: Non-profit organization type originating from the United States.
  ///
  static const USNonprofitType = IriTerm.prevalidated(
    'https://schema.org/USNonprofitType',
  );

  /// IRI for schema:UnRegisterAction
  ///
  /// The act of un-registering from a service.\n\nRelated actions:\n\n* {[RegisterAction]}: antonym of UnRegisterAction.\n* {[LeaveAction]}: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you were previously registered, rather than leaving a team/group of people.
  ///
  static const UnRegisterAction = IriTerm.prevalidated(
    'https://schema.org/UnRegisterAction',
  );

  /// IRI for schema:UnitPriceSpecification
  ///
  /// The price asked for a given offer by the respective organization or person.
  ///
  static const UnitPriceSpecification = IriTerm.prevalidated(
    'https://schema.org/UnitPriceSpecification',
  );

  /// IRI for schema:UpdateAction
  ///
  /// The act of managing by changing/editing the state of the object.
  ///
  static const UpdateAction = IriTerm.prevalidated(
    'https://schema.org/UpdateAction',
  );

  /// IRI for schema:UseAction
  ///
  /// The act of applying an object to its intended purpose.
  ///
  static const UseAction = IriTerm.prevalidated('https://schema.org/UseAction');

  /// IRI for schema:UserBlocks
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserBlocks = IriTerm.prevalidated(
    'https://schema.org/UserBlocks',
  );

  /// IRI for schema:UserCheckins
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserCheckins = IriTerm.prevalidated(
    'https://schema.org/UserCheckins',
  );

  /// IRI for schema:UserComments
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserComments = IriTerm.prevalidated(
    'https://schema.org/UserComments',
  );

  /// IRI for schema:UserDownloads
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserDownloads = IriTerm.prevalidated(
    'https://schema.org/UserDownloads',
  );

  /// IRI for schema:UserInteraction
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserInteraction = IriTerm.prevalidated(
    'https://schema.org/UserInteraction',
  );

  /// IRI for schema:UserLikes
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserLikes = IriTerm.prevalidated('https://schema.org/UserLikes');

  /// IRI for schema:UserPageVisits
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserPageVisits = IriTerm.prevalidated(
    'https://schema.org/UserPageVisits',
  );

  /// IRI for schema:UserPlays
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserPlays = IriTerm.prevalidated('https://schema.org/UserPlays');

  /// IRI for schema:UserPlusOnes
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserPlusOnes = IriTerm.prevalidated(
    'https://schema.org/UserPlusOnes',
  );

  /// IRI for schema:UserReview
  ///
  /// A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with {[CriticReview]}.
  ///
  static const UserReview = IriTerm.prevalidated(
    'https://schema.org/UserReview',
  );

  /// IRI for schema:UserTweets
  ///
  /// UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use {[Action]}-based vocabulary, alongside types such as {[Comment]}.
  ///
  static const UserTweets = IriTerm.prevalidated(
    'https://schema.org/UserTweets',
  );

  /// IRI for schema:VacationRental
  ///
  /// A kind of lodging business that focuses on renting single properties for limited time.
  ///
  static const VacationRental = IriTerm.prevalidated(
    'https://schema.org/VacationRental',
  );

  /// IRI for schema:Vehicle
  ///
  /// A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
  ///
  static const Vehicle = IriTerm.prevalidated('https://schema.org/Vehicle');

  /// IRI for schema:Vein
  ///
  /// A type of blood vessel that specifically carries blood to the heart.
  ///
  static const Vein = IriTerm.prevalidated('https://schema.org/Vein');

  /// IRI for schema:Vessel
  ///
  /// A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.
  ///
  static const Vessel = IriTerm.prevalidated('https://schema.org/Vessel');

  /// IRI for schema:VeterinaryCare
  ///
  /// A vet's office.
  ///
  static const VeterinaryCare = IriTerm.prevalidated(
    'https://schema.org/VeterinaryCare',
  );

  /// IRI for schema:VideoGallery
  ///
  /// Web page type: Video gallery page.
  ///
  static const VideoGallery = IriTerm.prevalidated(
    'https://schema.org/VideoGallery',
  );

  /// IRI for schema:VideoGame
  ///
  /// A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.
  ///
  static const VideoGame = IriTerm.prevalidated('https://schema.org/VideoGame');

  /// IRI for schema:VideoGameClip
  ///
  /// A short segment/part of a video game.
  ///
  static const VideoGameClip = IriTerm.prevalidated(
    'https://schema.org/VideoGameClip',
  );

  /// IRI for schema:VideoGameSeries
  ///
  /// A video game series.
  ///
  static const VideoGameSeries = IriTerm.prevalidated(
    'https://schema.org/VideoGameSeries',
  );

  /// IRI for schema:VideoObject
  ///
  /// A video file.
  ///
  static const VideoObject = IriTerm.prevalidated(
    'https://schema.org/VideoObject',
  );

  /// IRI for schema:VideoObjectSnapshot
  ///
  /// A specific and exact (byte-for-byte) version of a {[VideoObject]}. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
  ///
  static const VideoObjectSnapshot = IriTerm.prevalidated(
    'https://schema.org/VideoObjectSnapshot',
  );

  /// IRI for schema:ViewAction
  ///
  /// The act of consuming static visual content.
  ///
  static const ViewAction = IriTerm.prevalidated(
    'https://schema.org/ViewAction',
  );

  /// IRI for schema:VirtualLocation
  ///
  /// An online or virtual location for attending events. For example, one may attend an online seminar or educational event. While a virtual location may be used as the location of an event, virtual locations should not be confused with physical locations in the real world.
  ///
  static const VirtualLocation = IriTerm.prevalidated(
    'https://schema.org/VirtualLocation',
  );

  /// IRI for schema:VisualArtsEvent
  ///
  /// Event type: Visual arts event.
  ///
  static const VisualArtsEvent = IriTerm.prevalidated(
    'https://schema.org/VisualArtsEvent',
  );

  /// IRI for schema:VisualArtwork
  ///
  /// A work of art that is primarily visual in character.
  ///
  static const VisualArtwork = IriTerm.prevalidated(
    'https://schema.org/VisualArtwork',
  );

  /// IRI for schema:VitalSign
  ///
  /// Vital signs are measures of various physiological functions in order to assess the most basic body functions.
  ///
  static const VitalSign = IriTerm.prevalidated('https://schema.org/VitalSign');

  /// IRI for schema:Volcano
  ///
  /// A volcano, like Fujisan.
  ///
  static const Volcano = IriTerm.prevalidated('https://schema.org/Volcano');

  /// IRI for schema:VoteAction
  ///
  /// The act of expressing a preference from a fixed/finite/structured set of choices/options.
  ///
  static const VoteAction = IriTerm.prevalidated(
    'https://schema.org/VoteAction',
  );

  /// IRI for schema:WPAdBlock
  ///
  /// An advertising section of the page.
  ///
  static const WPAdBlock = IriTerm.prevalidated('https://schema.org/WPAdBlock');

  /// IRI for schema:WPFooter
  ///
  /// The footer section of the page.
  ///
  static const WPFooter = IriTerm.prevalidated('https://schema.org/WPFooter');

  /// IRI for schema:WPHeader
  ///
  /// The header section of the page.
  ///
  static const WPHeader = IriTerm.prevalidated('https://schema.org/WPHeader');

  /// IRI for schema:WPSideBar
  ///
  /// A sidebar section of the page.
  ///
  static const WPSideBar = IriTerm.prevalidated('https://schema.org/WPSideBar');

  /// IRI for schema:WantAction
  ///
  /// The act of expressing a desire about the object. An agent wants an object.
  ///
  static const WantAction = IriTerm.prevalidated(
    'https://schema.org/WantAction',
  );

  /// IRI for schema:WarrantyPromise
  ///
  /// A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
  ///
  static const WarrantyPromise = IriTerm.prevalidated(
    'https://schema.org/WarrantyPromise',
  );

  /// IRI for schema:WarrantyScope
  ///
  /// A range of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#Labor-BringIn\n* http://purl.org/goodrelations/v1#PartsAndLabor-BringIn\n* http://purl.org/goodrelations/v1#PartsAndLabor-PickUp
  ///
  ///
  static const WarrantyScope = IriTerm.prevalidated(
    'https://schema.org/WarrantyScope',
  );

  /// IRI for schema:WatchAction
  ///
  /// The act of consuming dynamic/moving visual content.
  ///
  static const WatchAction = IriTerm.prevalidated(
    'https://schema.org/WatchAction',
  );

  /// IRI for schema:Waterfall
  ///
  /// A waterfall, like Niagara.
  ///
  static const Waterfall = IriTerm.prevalidated('https://schema.org/Waterfall');

  /// IRI for schema:WearAction
  ///
  /// The act of dressing oneself in clothing.
  ///
  static const WearAction = IriTerm.prevalidated(
    'https://schema.org/WearAction',
  );

  /// IRI for schema:WearableMeasurementTypeEnumeration
  ///
  /// Enumerates common types of measurement for wearables products.
  ///
  static const WearableMeasurementTypeEnumeration = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementTypeEnumeration',
  );

  /// IRI for schema:WearableSizeGroupEnumeration
  ///
  /// Enumerates common size groups (also known as "size types") for wearable products.
  ///
  static const WearableSizeGroupEnumeration = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupEnumeration',
  );

  /// IRI for schema:WearableSizeSystemEnumeration
  ///
  /// Enumerates common size systems specific for wearable products.
  ///
  static const WearableSizeSystemEnumeration = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemEnumeration',
  );

  /// IRI for schema:WebAPI
  ///
  /// An application programming interface accessible over Web/Internet technologies.
  ///
  static const WebAPI = IriTerm.prevalidated('https://schema.org/WebAPI');

  /// IRI for schema:WebApplication
  ///
  /// Web applications.
  ///
  static const WebApplication = IriTerm.prevalidated(
    'https://schema.org/WebApplication',
  );

  /// IRI for schema:WebContent
  ///
  /// WebContent is a type representing all {[WebPage]}, {[WebSite]} and {[WebPageElement]} content. It is sometimes the case that detailed distinctions between Web pages, sites and their parts are not always important or obvious. The  {[WebContent]} type makes it easier to describe Web-addressable content without requiring such distinctions to always be stated. (The intent is that the existing types {[WebPage]}, {[WebSite]} and {[WebPageElement]} will eventually be declared as subtypes of {[WebContent]}.)
  ///
  static const WebContent = IriTerm.prevalidated(
    'https://schema.org/WebContent',
  );

  /// IRI for schema:WebPage
  ///
  /// A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.
  ///
  static const WebPage = IriTerm.prevalidated('https://schema.org/WebPage');

  /// IRI for schema:WebPageElement
  ///
  /// A web page element, like a table or an image.
  ///
  static const WebPageElement = IriTerm.prevalidated(
    'https://schema.org/WebPageElement',
  );

  /// IRI for schema:WebSite
  ///
  /// A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
  ///
  static const WebSite = IriTerm.prevalidated('https://schema.org/WebSite');

  /// IRI for schema:WholesaleStore
  ///
  /// A wholesale store.
  ///
  static const WholesaleStore = IriTerm.prevalidated(
    'https://schema.org/WholesaleStore',
  );

  /// IRI for schema:WinAction
  ///
  /// The act of achieving victory in a competitive activity.
  ///
  static const WinAction = IriTerm.prevalidated('https://schema.org/WinAction');

  /// IRI for schema:Winery
  ///
  /// A winery.
  ///
  static const Winery = IriTerm.prevalidated('https://schema.org/Winery');

  /// IRI for schema:WorkBasedProgram
  ///
  /// A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.
  ///
  static const WorkBasedProgram = IriTerm.prevalidated(
    'https://schema.org/WorkBasedProgram',
  );

  /// IRI for schema:WorkersUnion
  ///
  /// A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.
  ///
  static const WorkersUnion = IriTerm.prevalidated(
    'https://schema.org/WorkersUnion',
  );

  /// IRI for schema:WriteAction
  ///
  /// The act of authoring written creative content.
  ///
  static const WriteAction = IriTerm.prevalidated(
    'https://schema.org/WriteAction',
  );

  /// IRI for schema:XPathType
  ///
  /// Text representing an XPath (typically but not necessarily version 1.0).
  ///
  static const XPathType = IriTerm.prevalidated('https://schema.org/XPathType');

  /// IRI for schema:Zoo
  ///
  /// A zoo.
  ///
  static const Zoo = IriTerm.prevalidated('https://schema.org/Zoo');

  /// IRI for schema:CommunityHealth
  ///
  /// A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas.
  ///
  static const CommunityHealth = IriTerm.prevalidated(
    'https://schema.org/CommunityHealth',
  );

  /// IRI for schema:DietNutrition
  ///
  /// Dietetics and nutrition as a medical specialty.
  ///
  static const DietNutrition = IriTerm.prevalidated(
    'https://schema.org/DietNutrition',
  );

  /// IRI for schema:Emergency
  ///
  /// A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.
  ///
  static const Emergency = IriTerm.prevalidated('https://schema.org/Emergency');

  /// IRI for schema:Geriatric
  ///
  /// A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.
  ///
  static const Geriatric = IriTerm.prevalidated('https://schema.org/Geriatric');

  /// IRI for schema:Gynecologic
  ///
  /// A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.
  ///
  static const Gynecologic = IriTerm.prevalidated(
    'https://schema.org/Gynecologic',
  );

  /// IRI for schema:Midwifery
  ///
  /// A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.
  ///
  static const Midwifery = IriTerm.prevalidated('https://schema.org/Midwifery');

  /// IRI for schema:Nursing
  ///
  /// A health profession of a person formally educated and trained in the care of the sick or infirm person.
  ///
  static const Nursing = IriTerm.prevalidated('https://schema.org/Nursing');

  /// IRI for schema:Obstetric
  ///
  /// A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.
  ///
  static const Obstetric = IriTerm.prevalidated('https://schema.org/Obstetric');

  /// IRI for schema:Oncologic
  ///
  /// A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.
  ///
  static const Oncologic = IriTerm.prevalidated('https://schema.org/Oncologic');

  /// IRI for schema:Optometric
  ///
  /// The science or practice of testing visual acuity and prescribing corrective lenses.
  ///
  static const Optometric = IriTerm.prevalidated(
    'https://schema.org/Optometric',
  );

  /// IRI for schema:Otolaryngologic
  ///
  /// A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.
  ///
  static const Otolaryngologic = IriTerm.prevalidated(
    'https://schema.org/Otolaryngologic',
  );

  /// IRI for schema:Pediatric
  ///
  /// A specific branch of medical science that specializes in the care of infants, children and adolescents.
  ///
  static const Pediatric = IriTerm.prevalidated('https://schema.org/Pediatric');

  /// IRI for schema:Physiotherapy
  ///
  /// The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery.
  ///
  static const Physiotherapy = IriTerm.prevalidated(
    'https://schema.org/Physiotherapy',
  );

  /// IRI for schema:PlasticSurgery
  ///
  /// A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.
  ///
  static const PlasticSurgery = IriTerm.prevalidated(
    'https://schema.org/PlasticSurgery',
  );

  /// IRI for schema:Podiatric
  ///
  /// Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.
  ///
  static const Podiatric = IriTerm.prevalidated('https://schema.org/Podiatric');

  /// IRI for schema:PrimaryCare
  ///
  /// The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.
  ///
  static const PrimaryCare = IriTerm.prevalidated(
    'https://schema.org/PrimaryCare',
  );

  /// IRI for schema:Psychiatric
  ///
  /// A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.
  ///
  static const Psychiatric = IriTerm.prevalidated(
    'https://schema.org/Psychiatric',
  );

  /// IRI for schema:PublicHealth
  ///
  /// Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.
  ///
  static const PublicHealth = IriTerm.prevalidated(
    'https://schema.org/PublicHealth',
  );

  /// IRI for schema:RespiratoryTherapy
  ///
  /// The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).
  ///
  static const RespiratoryTherapy = IriTerm.prevalidated(
    'https://schema.org/RespiratoryTherapy',
  );

  /// IRI for schema:Dermatology
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.
  ///
  static const Dermatology = IriTerm.prevalidated(
    'https://schema.org/Dermatology',
  );

  /// IRI for schema:Abdomen
  ///
  /// Abdomen clinical examination.
  ///
  static const Abdomen = IriTerm.prevalidated('https://schema.org/Abdomen');

  /// IRI for schema:ActivationFee
  ///
  /// Represents the activation fee part of the total price for an offered product, for example a cellphone contract.
  ///
  static const ActivationFee = IriTerm.prevalidated(
    'https://schema.org/ActivationFee',
  );

  /// IRI for schema:ActiveActionStatus
  ///
  /// An in-progress action (e.g., while watching the movie, or driving to a location).
  ///
  static const ActiveActionStatus = IriTerm.prevalidated(
    'https://schema.org/ActiveActionStatus',
  );

  /// IRI for schema:ActiveNotRecruiting
  ///
  /// Active, but not recruiting new participants.
  ///
  static const ActiveNotRecruiting = IriTerm.prevalidated(
    'https://schema.org/ActiveNotRecruiting',
  );

  /// IRI for schema:AerobicActivity
  ///
  /// Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.
  ///
  static const AerobicActivity = IriTerm.prevalidated(
    'https://schema.org/AerobicActivity',
  );

  /// IRI for schema:AlbumRelease
  ///
  /// AlbumRelease.
  ///
  static const AlbumRelease = IriTerm.prevalidated(
    'https://schema.org/AlbumRelease',
  );

  /// IRI for schema:AlcoholConsideration
  ///
  /// Item contains alcohol or promotes alcohol consumption.
  ///
  static const AlcoholConsideration = IriTerm.prevalidated(
    'https://schema.org/AlcoholConsideration',
  );

  /// IRI for schema:AlgorithmicMediaDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia">algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const AlgorithmicMediaDigitalSource = IriTerm.prevalidated(
    'https://schema.org/AlgorithmicMediaDigitalSource',
  );

  /// IRI for schema:AlgorithmicallyEnhancedDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicallyEnhanced">algorithmically enhanced</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const AlgorithmicallyEnhancedDigitalSource = IriTerm.prevalidated(
    'https://schema.org/AlgorithmicallyEnhancedDigitalSource',
  );

  /// IRI for schema:AllWheelDriveConfiguration
  ///
  /// All-wheel Drive is a transmission layout where the engine drives all four wheels.
  ///
  static const AllWheelDriveConfiguration = IriTerm.prevalidated(
    'https://schema.org/AllWheelDriveConfiguration',
  );

  /// IRI for schema:AllergiesHealthAspect
  ///
  /// Content about the allergy-related aspects of a health topic.
  ///
  static const AllergiesHealthAspect = IriTerm.prevalidated(
    'https://schema.org/AllergiesHealthAspect',
  );

  /// IRI for schema:AnaerobicActivity
  ///
  /// Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.
  ///
  static const AnaerobicActivity = IriTerm.prevalidated(
    'https://schema.org/AnaerobicActivity',
  );

  /// IRI for schema:AndroidPlatform
  ///
  /// Represents the broad notion of Android-based operating systems.
  ///
  static const AndroidPlatform = IriTerm.prevalidated(
    'https://schema.org/AndroidPlatform',
  );

  /// IRI for schema:Anesthesia
  ///
  /// A specific branch of medical science that pertains to study of anesthetics and their application.
  ///
  static const Anesthesia = IriTerm.prevalidated(
    'https://schema.org/Anesthesia',
  );

  /// IRI for schema:Appearance
  ///
  /// Appearance assessment with clinical examination.
  ///
  static const Appearance = IriTerm.prevalidated(
    'https://schema.org/Appearance',
  );

  /// IRI for schema:AudiobookFormat
  ///
  /// Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.
  ///
  static const AudiobookFormat = IriTerm.prevalidated(
    'https://schema.org/AudiobookFormat',
  );

  /// IRI for schema:AuthoritativeLegalValue
  ///
  /// Indicates that the publisher gives some special status to the publication of the document. ("The Queens Printer" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications). Something "Authoritative" is considered to be also {[OfficialLegalValue]}".
  ///
  static const AuthoritativeLegalValue = IriTerm.prevalidated(
    'https://schema.org/AuthoritativeLegalValue',
  );

  /// IRI for schema:Ayurvedic
  ///
  /// A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.
  ///
  static const Ayurvedic = IriTerm.prevalidated('https://schema.org/Ayurvedic');

  /// IRI for schema:BackOrder
  ///
  /// Indicates that the item is available on back order.
  ///
  static const BackOrder = IriTerm.prevalidated('https://schema.org/BackOrder');

  /// IRI for schema:Bacteria
  ///
  /// Pathogenic bacteria that cause bacterial infection.
  ///
  static const Bacteria = IriTerm.prevalidated('https://schema.org/Bacteria');

  /// IRI for schema:Balance
  ///
  /// Physical activity that is engaged to help maintain posture and balance.
  ///
  static const Balance = IriTerm.prevalidated('https://schema.org/Balance');

  /// IRI for schema:BasicIncome
  ///
  /// BasicIncome: this is a benefit for basic income.
  ///
  static const BasicIncome = IriTerm.prevalidated(
    'https://schema.org/BasicIncome',
  );

  /// IRI for schema:BenefitsHealthAspect
  ///
  /// Content about the benefits and advantages of usage or utilization of topic.
  ///
  static const BenefitsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/BenefitsHealthAspect',
  );

  /// IRI for schema:BodyMeasurementArm
  ///
  /// Arm length (measured between arms/shoulder line intersection and the prominent wrist bone). Used, for example, to fit shirts.
  ///
  static const BodyMeasurementArm = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementArm',
  );

  /// IRI for schema:BodyMeasurementBust
  ///
  /// Maximum girth of bust. Used, for example, to fit women's suits.
  ///
  static const BodyMeasurementBust = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementBust',
  );

  /// IRI for schema:BodyMeasurementChest
  ///
  /// Maximum girth of chest. Used, for example, to fit men's suits.
  ///
  static const BodyMeasurementChest = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementChest',
  );

  /// IRI for schema:BodyMeasurementFoot
  ///
  /// Foot length (measured between end of the most prominent toe and the most prominent part of the heel). Used, for example, to measure socks.
  ///
  static const BodyMeasurementFoot = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementFoot',
  );

  /// IRI for schema:BodyMeasurementHand
  ///
  /// Maximum hand girth (measured over the knuckles of the open right hand excluding thumb, fingers together). Used, for example, to fit gloves.
  ///
  static const BodyMeasurementHand = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementHand',
  );

  /// IRI for schema:BodyMeasurementHead
  ///
  /// Maximum girth of head above the ears. Used, for example, to fit hats.
  ///
  static const BodyMeasurementHead = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementHead',
  );

  /// IRI for schema:BodyMeasurementHeight
  ///
  /// Body height (measured between crown of head and soles of feet). Used, for example, to fit jackets.
  ///
  static const BodyMeasurementHeight = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementHeight',
  );

  /// IRI for schema:BodyMeasurementHips
  ///
  /// Girth of hips (measured around the buttocks). Used, for example, to fit skirts.
  ///
  static const BodyMeasurementHips = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementHips',
  );

  /// IRI for schema:BodyMeasurementInsideLeg
  ///
  /// Inside leg (measured between crotch and soles of feet). Used, for example, to fit pants.
  ///
  static const BodyMeasurementInsideLeg = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementInsideLeg',
  );

  /// IRI for schema:BodyMeasurementNeck
  ///
  /// Girth of neck. Used, for example, to fit shirts.
  ///
  static const BodyMeasurementNeck = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementNeck',
  );

  /// IRI for schema:BodyMeasurementUnderbust
  ///
  /// Girth of body just below the bust. Used, for example, to fit women's swimwear.
  ///
  static const BodyMeasurementUnderbust = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementUnderbust',
  );

  /// IRI for schema:BodyMeasurementWaist
  ///
  /// Girth of natural waistline (between hip bones and lower ribs). Used, for example, to fit pants.
  ///
  static const BodyMeasurementWaist = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementWaist',
  );

  /// IRI for schema:BodyMeasurementWeight
  ///
  /// Body weight. Used, for example, to measure pantyhose.
  ///
  static const BodyMeasurementWeight = IriTerm.prevalidated(
    'https://schema.org/BodyMeasurementWeight',
  );

  /// IRI for schema:BroadcastRelease
  ///
  /// BroadcastRelease.
  ///
  static const BroadcastRelease = IriTerm.prevalidated(
    'https://schema.org/BroadcastRelease',
  );

  /// IRI for schema:BusinessSupport
  ///
  /// BusinessSupport: this is a benefit for supporting businesses.
  ///
  static const BusinessSupport = IriTerm.prevalidated(
    'https://schema.org/BusinessSupport',
  );

  /// IRI for schema:ByBankTransferInAdvance
  ///
  /// Payment in advance by bank transfer, equivalent to <code>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</code>.
  ///
  static const ByBankTransferInAdvance = IriTerm.prevalidated(
    'https://schema.org/ByBankTransferInAdvance',
  );

  /// IRI for schema:ByInvoice
  ///
  /// Payment by invoice, typically after the goods were delivered, equivalent to <code>http://purl.org/goodrelations/v1#ByInvoice</code>.
  ///
  static const ByInvoice = IriTerm.prevalidated('https://schema.org/ByInvoice');

  /// IRI for schema:CDFormat
  ///
  /// CDFormat.
  ///
  static const CDFormat = IriTerm.prevalidated('https://schema.org/CDFormat');

  /// IRI for schema:COD
  ///
  /// Cash on Delivery (COD) payment, equivalent to <code>http://purl.org/goodrelations/v1#COD</code>.
  ///
  static const COD = IriTerm.prevalidated('https://schema.org/COD');

  /// IRI for schema:CT
  ///
  /// X-ray computed tomography imaging.
  ///
  static const CT = IriTerm.prevalidated('https://schema.org/CT');

  /// IRI for schema:Cardiovascular
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.
  ///
  static const Cardiovascular = IriTerm.prevalidated(
    'https://schema.org/Cardiovascular',
  );

  /// IRI for schema:CardiovascularExam
  ///
  /// Cardiovascular system assessment with clinical examination.
  ///
  static const CardiovascularExam = IriTerm.prevalidated(
    'https://schema.org/CardiovascularExam',
  );

  /// IRI for schema:CaseSeries
  ///
  /// A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.
  ///
  static const CaseSeries = IriTerm.prevalidated(
    'https://schema.org/CaseSeries',
  );

  /// IRI for schema:Cash
  ///
  /// Payment using cash, on premises, equivalent to <code>http://purl.org/goodrelations/v1#Cash</code>.
  ///
  static const Cash = IriTerm.prevalidated('https://schema.org/Cash');

  /// IRI for schema:CassetteFormat
  ///
  /// CassetteFormat.
  ///
  static const CassetteFormat = IriTerm.prevalidated(
    'https://schema.org/CassetteFormat',
  );

  /// IRI for schema:CausesHealthAspect
  ///
  /// Information about the causes and main actions that gave rise to the topic.
  ///
  static const CausesHealthAspect = IriTerm.prevalidated(
    'https://schema.org/CausesHealthAspect',
  );

  /// IRI for schema:CertificationActive
  ///
  /// Specifies that a certification is active.
  ///
  static const CertificationActive = IriTerm.prevalidated(
    'https://schema.org/CertificationActive',
  );

  /// IRI for schema:CertificationInactive
  ///
  /// Specifies that a certification is inactive (no longer in effect).
  ///
  static const CertificationInactive = IriTerm.prevalidated(
    'https://schema.org/CertificationInactive',
  );

  /// IRI for schema:CharitableIncorporatedOrganization
  ///
  /// CharitableIncorporatedOrganization: Non-profit type referring to a Charitable Incorporated Organization (UK).
  ///
  static const CharitableIncorporatedOrganization = IriTerm.prevalidated(
    'https://schema.org/CharitableIncorporatedOrganization',
  );

  /// IRI for schema:CheckInAdvance
  ///
  /// Payment in advance by sending a check, equivalent to <code>http://purl.org/goodrelations/v1#CheckInAdvance</code>.
  ///
  static const CheckInAdvance = IriTerm.prevalidated(
    'https://schema.org/CheckInAdvance',
  );

  /// IRI for schema:Chiropractic
  ///
  /// A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.
  ///
  static const Chiropractic = IriTerm.prevalidated(
    'https://schema.org/Chiropractic',
  );

  /// IRI for schema:CleaningFee
  ///
  /// Represents the cleaning fee part of the total price for an offered product, for example a vacation rental.
  ///
  static const CleaningFee = IriTerm.prevalidated(
    'https://schema.org/CleaningFee',
  );

  /// IRI for schema:Clinician
  ///
  /// Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.
  ///
  static const Clinician = IriTerm.prevalidated('https://schema.org/Clinician');

  /// IRI for schema:CoOp
  ///
  /// Play mode: CoOp. Co-operative games, where you play on the same team with friends.
  ///
  static const CoOp = IriTerm.prevalidated('https://schema.org/CoOp');

  /// IRI for schema:CohortStudy
  ///
  /// Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.
  ///
  static const CohortStudy = IriTerm.prevalidated(
    'https://schema.org/CohortStudy',
  );

  /// IRI for schema:CommentPermission
  ///
  /// Permission to add comments to the document.
  ///
  static const CommentPermission = IriTerm.prevalidated(
    'https://schema.org/CommentPermission',
  );

  /// IRI for schema:CompilationAlbum
  ///
  /// CompilationAlbum.
  ///
  static const CompilationAlbum = IriTerm.prevalidated(
    'https://schema.org/CompilationAlbum',
  );

  /// IRI for schema:Completed
  ///
  /// Completed.
  ///
  static const Completed = IriTerm.prevalidated('https://schema.org/Completed');

  /// IRI for schema:CompletedActionStatus
  ///
  /// An action that has already taken place.
  ///
  static const CompletedActionStatus = IriTerm.prevalidated(
    'https://schema.org/CompletedActionStatus',
  );

  /// IRI for schema:CompositeCaptureDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeCapture">composite capture</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const CompositeCaptureDigitalSource = IriTerm.prevalidated(
    'https://schema.org/CompositeCaptureDigitalSource',
  );

  /// IRI for schema:CompositeDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia">algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const CompositeDigitalSource = IriTerm.prevalidated(
    'https://schema.org/CompositeDigitalSource',
  );

  /// IRI for schema:CompositeSyntheticDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeSynthetic">composite synthetic</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const CompositeSyntheticDigitalSource = IriTerm.prevalidated(
    'https://schema.org/CompositeSyntheticDigitalSource',
  );

  /// IRI for schema:CompositeWithTrainedAlgorithmicMediaDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeWithTrainedAlgorithmicMedia">composite with trained algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const CompositeWithTrainedAlgorithmicMediaDigitalSource =
      IriTerm.prevalidated(
        'https://schema.org/CompositeWithTrainedAlgorithmicMediaDigitalSource',
      );

  /// IRI for schema:ContagiousnessHealthAspect
  ///
  /// Content about contagion mechanisms and contagiousness information over the topic.
  ///
  static const ContagiousnessHealthAspect = IriTerm.prevalidated(
    'https://schema.org/ContagiousnessHealthAspect',
  );

  /// IRI for schema:CrossSectional
  ///
  /// Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.
  ///
  static const CrossSectional = IriTerm.prevalidated(
    'https://schema.org/CrossSectional',
  );

  /// IRI for schema:DJMixAlbum
  ///
  /// DJMixAlbum.
  ///
  static const DJMixAlbum = IriTerm.prevalidated(
    'https://schema.org/DJMixAlbum',
  );

  /// IRI for schema:DVDFormat
  ///
  /// DVDFormat.
  ///
  static const DVDFormat = IriTerm.prevalidated('https://schema.org/DVDFormat');

  /// IRI for schema:DamagedCondition
  ///
  /// Indicates that the item is damaged.
  ///
  static const DamagedCondition = IriTerm.prevalidated(
    'https://schema.org/DamagedCondition',
  );

  /// IRI for schema:DangerousGoodConsideration
  ///
  /// The item is dangerous and requires careful handling and/or special training of the user. See also the [UN Model Classification](https://unece.org/DAM/trans/danger/publi/unrec/rev17/English/02EREv17_Part2.pdf) defining the 9 classes of dangerous goods such as explosives, gases, flammables, and more.
  ///
  static const DangerousGoodConsideration = IriTerm.prevalidated(
    'https://schema.org/DangerousGoodConsideration',
  );

  /// IRI for schema:DataDrivenMediaDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/dataDrivenMedia">data driven media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const DataDrivenMediaDigitalSource = IriTerm.prevalidated(
    'https://schema.org/DataDrivenMediaDigitalSource',
  );

  /// IRI for schema:DecontextualizedContent
  ///
  /// Content coded 'missing context' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'missing context': Presenting unaltered video in an inaccurate manner that misrepresents the footage. For example, using incorrect dates or locations, altering the transcript or sharing brief clips from a longer video to mislead viewers. (A video rated 'original' can also be missing context.)
  ///
  /// For an {[ImageObject]} to be 'missing context': Presenting unaltered images in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An image rated 'original' can also be missing context.)
  ///
  /// For an {[ImageObject]} with embedded text to be 'missing context': An unaltered image presented in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An 'original' image with inaccurate text would generally fall in this category.)
  ///
  /// For an {[AudioObject]} to be 'missing context': Unaltered audio presented in an inaccurate manner that misrepresents it. For example, using incorrect dates or locations, or sharing brief clips from a longer recording to mislead viewers. (Audio rated ‚Äúoriginal‚Äù can also be missing context.)
  ///
  ///
  static const DecontextualizedContent = IriTerm.prevalidated(
    'https://schema.org/DecontextualizedContent',
  );

  /// IRI for schema:DefinitiveLegalValue
  ///
  /// Indicates a document for which the text is conclusively what the law says and is legally binding. (e.g. The digitally signed version of an Official Journal.)
  /// Something "Definitive" is considered to be also {[AuthoritativeLegalValue]}.
  ///
  static const DefinitiveLegalValue = IriTerm.prevalidated(
    'https://schema.org/DefinitiveLegalValue',
  );

  /// IRI for schema:DemoAlbum
  ///
  /// DemoAlbum.
  ///
  static const DemoAlbum = IriTerm.prevalidated('https://schema.org/DemoAlbum');

  /// IRI for schema:DemoGameAvailability
  ///
  /// Indicates demo game availability, i.e. a somehow limited demonstration of the full game.
  ///
  static const DemoGameAvailability = IriTerm.prevalidated(
    'https://schema.org/DemoGameAvailability',
  );

  /// IRI for schema:Dentistry
  ///
  /// A branch of medicine that is involved in the dental care.
  ///
  static const Dentistry = IriTerm.prevalidated('https://schema.org/Dentistry');

  /// IRI for schema:Dermatologic
  ///
  /// Something relating to or practicing dermatology.
  ///
  static const Dermatologic = IriTerm.prevalidated(
    'https://schema.org/Dermatologic',
  );

  /// IRI for schema:DesktopWebPlatform
  ///
  /// Represents the broad notion of 'desktop' browsers as a Web Platform.
  ///
  static const DesktopWebPlatform = IriTerm.prevalidated(
    'https://schema.org/DesktopWebPlatform',
  );

  /// IRI for schema:DiabeticDiet
  ///
  /// A diet appropriate for people with diabetes.
  ///
  static const DiabeticDiet = IriTerm.prevalidated(
    'https://schema.org/DiabeticDiet',
  );

  /// IRI for schema:Diagnostic
  ///
  /// A medical device used for diagnostic purposes.
  ///
  static const Diagnostic = IriTerm.prevalidated(
    'https://schema.org/Diagnostic',
  );

  /// IRI for schema:DigitalArtDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/digitalArt">digital art</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const DigitalArtDigitalSource = IriTerm.prevalidated(
    'https://schema.org/DigitalArtDigitalSource',
  );

  /// IRI for schema:DigitalAudioTapeFormat
  ///
  /// DigitalAudioTapeFormat.
  ///
  static const DigitalAudioTapeFormat = IriTerm.prevalidated(
    'https://schema.org/DigitalAudioTapeFormat',
  );

  /// IRI for schema:DigitalCaptureDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture">digital capture</a></a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const DigitalCaptureDigitalSource = IriTerm.prevalidated(
    'https://schema.org/DigitalCaptureDigitalSource',
  );

  /// IRI for schema:DigitalFormat
  ///
  /// DigitalFormat.
  ///
  static const DigitalFormat = IriTerm.prevalidated(
    'https://schema.org/DigitalFormat',
  );

  /// IRI for schema:DirectDebit
  ///
  /// Payment in advance by direct debit from the bank, equivalent to <code>http://purl.org/goodrelations/v1#DirectDebit</code>.
  ///
  static const DirectDebit = IriTerm.prevalidated(
    'https://schema.org/DirectDebit',
  );

  /// IRI for schema:DisabilitySupport
  ///
  /// DisabilitySupport: this is a benefit for disability support.
  ///
  static const DisabilitySupport = IriTerm.prevalidated(
    'https://schema.org/DisabilitySupport',
  );

  /// IRI for schema:Discontinued
  ///
  /// Indicates that the item has been discontinued.
  ///
  static const Discontinued = IriTerm.prevalidated(
    'https://schema.org/Discontinued',
  );

  /// IRI for schema:DistanceFee
  ///
  /// Represents the distance fee (e.g., price per km or mile) part of the total price for an offered product, for example a car rental.
  ///
  static const DistanceFee = IriTerm.prevalidated(
    'https://schema.org/DistanceFee',
  );

  /// IRI for schema:DoubleBlindedTrial
  ///
  /// A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.
  ///
  static const DoubleBlindedTrial = IriTerm.prevalidated(
    'https://schema.org/DoubleBlindedTrial',
  );

  /// IRI for schema:Downpayment
  ///
  /// Represents the downpayment (up-front payment) price component of the total price for an offered product that has additional installment payments.
  ///
  static const Downpayment = IriTerm.prevalidated(
    'https://schema.org/Downpayment',
  );

  /// IRI for schema:DrivingSchoolVehicleUsage
  ///
  /// Indicates the usage of the vehicle for driving school.
  ///
  static const DrivingSchoolVehicleUsage = IriTerm.prevalidated(
    'https://schema.org/DrivingSchoolVehicleUsage',
  );

  /// IRI for schema:EBook
  ///
  /// Book format: Ebook.
  ///
  static const EBook = IriTerm.prevalidated('https://schema.org/EBook');

  /// IRI for schema:EPRelease
  ///
  /// EPRelease.
  ///
  static const EPRelease = IriTerm.prevalidated('https://schema.org/EPRelease');

  /// IRI for schema:EUEnergyEfficiencyCategoryA
  ///
  /// Represents EU Energy Efficiency Class A as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryA = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryA',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryA1Plus
  ///
  /// Represents EU Energy Efficiency Class A+ as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryA1Plus = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryA1Plus',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryA2Plus
  ///
  /// Represents EU Energy Efficiency Class A++ as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryA2Plus = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryA2Plus',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryA3Plus
  ///
  /// Represents EU Energy Efficiency Class A+++ as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryA3Plus = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryA3Plus',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryB
  ///
  /// Represents EU Energy Efficiency Class B as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryB = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryB',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryC
  ///
  /// Represents EU Energy Efficiency Class C as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryC = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryC',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryD
  ///
  /// Represents EU Energy Efficiency Class D as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryD = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryD',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryE
  ///
  /// Represents EU Energy Efficiency Class E as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryE = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryE',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryF
  ///
  /// Represents EU Energy Efficiency Class F as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryF = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryF',
  );

  /// IRI for schema:EUEnergyEfficiencyCategoryG
  ///
  /// Represents EU Energy Efficiency Class G as defined in EU energy labeling regulations.
  ///
  static const EUEnergyEfficiencyCategoryG = IriTerm.prevalidated(
    'https://schema.org/EUEnergyEfficiencyCategoryG',
  );

  /// IRI for schema:Ear
  ///
  /// Ear function assessment with clinical examination.
  ///
  static const Ear = IriTerm.prevalidated('https://schema.org/Ear');

  /// IRI for schema:EditedOrCroppedContent
  ///
  /// Content coded 'edited or cropped content' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'edited or cropped content': The video has been edited or rearranged. This category applies to time edits, including editing multiple videos together to alter the story being told or editing out large portions from a video.
  ///
  /// For an {[ImageObject]} to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.
  ///
  /// For an {[ImageObject]} with embedded text to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.
  ///
  /// For an {[AudioObject]} to be 'edited or cropped content': The audio has been edited or rearranged. This category applies to time edits, including editing multiple audio clips together to alter the story being told or editing out large portions from the recording.
  ///
  ///
  static const EditedOrCroppedContent = IriTerm.prevalidated(
    'https://schema.org/EditedOrCroppedContent',
  );

  /// IRI for schema:EffectivenessHealthAspect
  ///
  /// Content about the effectiveness-related aspects of a health topic.
  ///
  static const EffectivenessHealthAspect = IriTerm.prevalidated(
    'https://schema.org/EffectivenessHealthAspect',
  );

  /// IRI for schema:Endocrine
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.
  ///
  static const Endocrine = IriTerm.prevalidated('https://schema.org/Endocrine');

  /// IRI for schema:EnergyStarCertified
  ///
  /// Represents EnergyStar certification.
  ///
  static const EnergyStarCertified = IriTerm.prevalidated(
    'https://schema.org/EnergyStarCertified',
  );

  /// IRI for schema:EnrollingByInvitation
  ///
  /// Enrolling participants by invitation only.
  ///
  static const EnrollingByInvitation = IriTerm.prevalidated(
    'https://schema.org/EnrollingByInvitation',
  );

  /// IRI for schema:EventCancelled
  ///
  /// The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).
  ///
  static const EventCancelled = IriTerm.prevalidated(
    'https://schema.org/EventCancelled',
  );

  /// IRI for schema:EventMovedOnline
  ///
  /// Indicates that the event was changed to allow online participation. See {[eventAttendanceMode]} for specifics of whether it is now fully or partially online.
  ///
  static const EventMovedOnline = IriTerm.prevalidated(
    'https://schema.org/EventMovedOnline',
  );

  /// IRI for schema:EventPostponed
  ///
  /// The event has been postponed and no new date has been set. The event's previousStartDate should be set.
  ///
  static const EventPostponed = IriTerm.prevalidated(
    'https://schema.org/EventPostponed',
  );

  /// IRI for schema:EventRescheduled
  ///
  /// The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated.)
  ///
  static const EventRescheduled = IriTerm.prevalidated(
    'https://schema.org/EventRescheduled',
  );

  /// IRI for schema:EventScheduled
  ///
  /// The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.
  ///
  static const EventScheduled = IriTerm.prevalidated(
    'https://schema.org/EventScheduled',
  );

  /// IRI for schema:EvidenceLevelA
  ///
  /// Data derived from multiple randomized clinical trials or meta-analyses.
  ///
  static const EvidenceLevelA = IriTerm.prevalidated(
    'https://schema.org/EvidenceLevelA',
  );

  /// IRI for schema:EvidenceLevelB
  ///
  /// Data derived from a single randomized trial, or nonrandomized studies.
  ///
  static const EvidenceLevelB = IriTerm.prevalidated(
    'https://schema.org/EvidenceLevelB',
  );

  /// IRI for schema:EvidenceLevelC
  ///
  /// Only consensus opinion of experts, case studies, or standard-of-care.
  ///
  static const EvidenceLevelC = IriTerm.prevalidated(
    'https://schema.org/EvidenceLevelC',
  );

  /// IRI for schema:ExampleMeasurementMethodEnum
  ///
  /// An example {[MeasurementMethodEnum]} (to remove when real enums are added).
  ///
  static const ExampleMeasurementMethodEnum = IriTerm.prevalidated(
    'https://schema.org/ExampleMeasurementMethodEnum',
  );

  /// IRI for schema:ExchangeRefund
  ///
  /// Specifies that a refund can be done as an exchange for the same product.
  ///
  static const ExchangeRefund = IriTerm.prevalidated(
    'https://schema.org/ExchangeRefund',
  );

  /// IRI for schema:Eye
  ///
  /// Eye or ophthalmological function assessment with clinical examination.
  ///
  static const Eye = IriTerm.prevalidated('https://schema.org/Eye');

  /// IRI for schema:FDAcategoryA
  ///
  /// A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).
  ///
  static const FDAcategoryA = IriTerm.prevalidated(
    'https://schema.org/FDAcategoryA',
  );

  /// IRI for schema:FDAcategoryB
  ///
  /// A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.
  ///
  static const FDAcategoryB = IriTerm.prevalidated(
    'https://schema.org/FDAcategoryB',
  );

  /// IRI for schema:FDAcategoryC
  ///
  /// A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
  ///
  static const FDAcategoryC = IriTerm.prevalidated(
    'https://schema.org/FDAcategoryC',
  );

  /// IRI for schema:FDAcategoryD
  ///
  /// A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
  ///
  static const FDAcategoryD = IriTerm.prevalidated(
    'https://schema.org/FDAcategoryD',
  );

  /// IRI for schema:FDAcategoryX
  ///
  /// A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.
  ///
  static const FDAcategoryX = IriTerm.prevalidated(
    'https://schema.org/FDAcategoryX',
  );

  /// IRI for schema:FDAnotEvaluated
  ///
  /// A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.
  ///
  static const FDAnotEvaluated = IriTerm.prevalidated(
    'https://schema.org/FDAnotEvaluated',
  );

  /// IRI for schema:FailedActionStatus
  ///
  /// An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.
  ///
  static const FailedActionStatus = IriTerm.prevalidated(
    'https://schema.org/FailedActionStatus',
  );

  /// IRI for schema:False
  ///
  /// The boolean value false.
  ///
  static const False = IriTerm.prevalidated('https://schema.org/False');

  /// IRI for schema:Female
  ///
  /// The female gender.
  ///
  static const Female = IriTerm.prevalidated('https://schema.org/Female');

  /// IRI for schema:Flexibility
  ///
  /// Physical activity that is engaged in to improve joint and muscle flexibility.
  ///
  static const Flexibility = IriTerm.prevalidated(
    'https://schema.org/Flexibility',
  );

  /// IRI for schema:FourWheelDriveConfiguration
  ///
  /// Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.
  ///
  static const FourWheelDriveConfiguration = IriTerm.prevalidated(
    'https://schema.org/FourWheelDriveConfiguration',
  );

  /// IRI for schema:FreeReturn
  ///
  /// Specifies that product returns are free of charge for the customer.
  ///
  static const FreeReturn = IriTerm.prevalidated(
    'https://schema.org/FreeReturn',
  );

  /// IRI for schema:Friday
  ///
  /// The day of the week between Thursday and Saturday.
  ///
  static const Friday = IriTerm.prevalidated('https://schema.org/Friday');

  /// IRI for schema:FrontWheelDriveConfiguration
  ///
  /// Front-wheel drive is a transmission layout where the engine drives the front wheels.
  ///
  static const FrontWheelDriveConfiguration = IriTerm.prevalidated(
    'https://schema.org/FrontWheelDriveConfiguration',
  );

  /// IRI for schema:FulfillmentTypeCollectionPoint
  ///
  /// Fulfillment to a collection point location.
  ///
  static const FulfillmentTypeCollectionPoint = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypeCollectionPoint',
  );

  /// IRI for schema:FulfillmentTypeDelivery
  ///
  /// Fulfillment to a customer selected address.
  ///
  static const FulfillmentTypeDelivery = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypeDelivery',
  );

  /// IRI for schema:FulfillmentTypePickupDropoff
  ///
  /// Fulfillment through pick-up drop-off locations.
  ///
  static const FulfillmentTypePickupDropoff = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypePickupDropoff',
  );

  /// IRI for schema:FulfillmentTypePickupInStore
  ///
  /// Fulfillment through pick-up in a store.
  ///
  static const FulfillmentTypePickupInStore = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypePickupInStore',
  );

  /// IRI for schema:FulfillmentTypeScheduledDelivery
  ///
  /// Fulfillment to a customer selected address after scheduling with the customer.
  ///
  static const FulfillmentTypeScheduledDelivery = IriTerm.prevalidated(
    'https://schema.org/FulfillmentTypeScheduledDelivery',
  );

  /// IRI for schema:FullGameAvailability
  ///
  /// Indicates full game availability.
  ///
  static const FullGameAvailability = IriTerm.prevalidated(
    'https://schema.org/FullGameAvailability',
  );

  /// IRI for schema:FullRefund
  ///
  /// Specifies that a refund can be done in the full amount the customer paid for the product.
  ///
  static const FullRefund = IriTerm.prevalidated(
    'https://schema.org/FullRefund',
  );

  /// IRI for schema:Fungus
  ///
  /// Pathogenic fungus.
  ///
  static const Fungus = IriTerm.prevalidated('https://schema.org/Fungus');

  /// IRI for schema:Gastroenterologic
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.
  ///
  static const Gastroenterologic = IriTerm.prevalidated(
    'https://schema.org/Gastroenterologic',
  );

  /// IRI for schema:GenericWebPlatform
  ///
  /// Represents the generic notion of the Web Platform. More specific codes include {[MobileWebPlatform]} and {[DesktopWebPlatform]}, as an incomplete list.
  ///
  static const GenericWebPlatform = IriTerm.prevalidated(
    'https://schema.org/GenericWebPlatform',
  );

  /// IRI for schema:Genetic
  ///
  /// A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.
  ///
  static const Genetic = IriTerm.prevalidated('https://schema.org/Genetic');

  /// IRI for schema:Genitourinary
  ///
  /// Genitourinary system function assessment with clinical examination.
  ///
  static const Genitourinary = IriTerm.prevalidated(
    'https://schema.org/Genitourinary',
  );

  /// IRI for schema:GettingAccessHealthAspect
  ///
  /// Content that discusses practical and policy aspects for getting access to specific kinds of healthcare (e.g. distribution mechanisms for vaccines).
  ///
  static const GettingAccessHealthAspect = IriTerm.prevalidated(
    'https://schema.org/GettingAccessHealthAspect',
  );

  /// IRI for schema:GlutenFreeDiet
  ///
  /// A diet exclusive of gluten.
  ///
  static const GlutenFreeDiet = IriTerm.prevalidated(
    'https://schema.org/GlutenFreeDiet',
  );

  /// IRI for schema:GraphicNovel
  ///
  /// Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.
  ///
  static const GraphicNovel = IriTerm.prevalidated(
    'https://schema.org/GraphicNovel',
  );

  /// IRI for schema:GroupBoardingPolicy
  ///
  /// The airline boards by groups based on check-in time, priority, etc.
  ///
  static const GroupBoardingPolicy = IriTerm.prevalidated(
    'https://schema.org/GroupBoardingPolicy',
  );

  /// IRI for schema:HalalDiet
  ///
  /// A diet conforming to Islamic dietary practices.
  ///
  static const HalalDiet = IriTerm.prevalidated('https://schema.org/HalalDiet');

  /// IRI for schema:Hardcover
  ///
  /// Book format: Hardcover.
  ///
  static const Hardcover = IriTerm.prevalidated('https://schema.org/Hardcover');

  /// IRI for schema:Head
  ///
  /// Head assessment with clinical examination.
  ///
  static const Head = IriTerm.prevalidated('https://schema.org/Head');

  /// IRI for schema:HealthCare
  ///
  /// HealthCare: this is a benefit for health care.
  ///
  static const HealthCare = IriTerm.prevalidated(
    'https://schema.org/HealthCare',
  );

  /// IRI for schema:HealthcareConsideration
  ///
  /// Item is a pharmaceutical (e.g., a prescription or OTC drug) or a restricted medical device.
  ///
  static const HealthcareConsideration = IriTerm.prevalidated(
    'https://schema.org/HealthcareConsideration',
  );

  /// IRI for schema:HearingImpairedSupported
  ///
  /// Uses devices to support users with hearing impairments.
  ///
  static const HearingImpairedSupported = IriTerm.prevalidated(
    'https://schema.org/HearingImpairedSupported',
  );

  /// IRI for schema:Hematologic
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.
  ///
  static const Hematologic = IriTerm.prevalidated(
    'https://schema.org/Hematologic',
  );

  /// IRI for schema:HinduDiet
  ///
  /// A diet conforming to Hindu dietary practices, in particular, beef-free.
  ///
  static const HinduDiet = IriTerm.prevalidated('https://schema.org/HinduDiet');

  /// IRI for schema:Homeopathic
  ///
  /// A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.
  ///
  static const Homeopathic = IriTerm.prevalidated(
    'https://schema.org/Homeopathic',
  );

  /// IRI for schema:HowItWorksHealthAspect
  ///
  /// Content that discusses and explains how a particular health-related topic works, e.g. in terms of mechanisms and underlying science.
  ///
  static const HowItWorksHealthAspect = IriTerm.prevalidated(
    'https://schema.org/HowItWorksHealthAspect',
  );

  /// IRI for schema:HowOrWhereHealthAspect
  ///
  /// Information about how or where to find a topic. Also may contain location data that can be used for where to look for help if the topic is observed.
  ///
  static const HowOrWhereHealthAspect = IriTerm.prevalidated(
    'https://schema.org/HowOrWhereHealthAspect',
  );

  /// IRI for schema:IOSPlatform
  ///
  /// Represents the broad notion of iOS-based operating systems.
  ///
  static const IOSPlatform = IriTerm.prevalidated(
    'https://schema.org/IOSPlatform',
  );

  /// IRI for schema:InForce
  ///
  /// Indicates that a legislation is in force.
  ///
  static const InForce = IriTerm.prevalidated('https://schema.org/InForce');

  /// IRI for schema:InStock
  ///
  /// Indicates that the item is in stock.
  ///
  static const InStock = IriTerm.prevalidated('https://schema.org/InStock');

  /// IRI for schema:InStoreOnly
  ///
  /// Indicates that the item is available only at physical locations.
  ///
  static const InStoreOnly = IriTerm.prevalidated(
    'https://schema.org/InStoreOnly',
  );

  /// IRI for schema:InStorePrepay
  ///
  /// Payment in advance in some form of shop or kiosk for goods purchased online.
  ///
  static const InStorePrepay = IriTerm.prevalidated(
    'https://schema.org/InStorePrepay',
  );

  /// IRI for schema:IncentiveQualifiedExpenseTypeGoodsOnly
  ///
  /// This incentive applies to goods only.
  ///
  static const IncentiveQualifiedExpenseTypeGoodsOnly = IriTerm.prevalidated(
    'https://schema.org/IncentiveQualifiedExpenseTypeGoodsOnly',
  );

  /// IRI for schema:IncentiveQualifiedExpenseTypeGoodsOrServices
  ///
  /// This incentive can apply to either goods or services (or both).
  ///
  static const IncentiveQualifiedExpenseTypeGoodsOrServices =
      IriTerm.prevalidated(
        'https://schema.org/IncentiveQualifiedExpenseTypeGoodsOrServices',
      );

  /// IRI for schema:IncentiveQualifiedExpenseTypeServicesOnly
  ///
  /// This incentive applies to services only.
  ///
  static const IncentiveQualifiedExpenseTypeServicesOnly = IriTerm.prevalidated(
    'https://schema.org/IncentiveQualifiedExpenseTypeServicesOnly',
  );

  /// IRI for schema:IncentiveQualifiedExpenseTypeUtilityBill
  ///
  /// This incentive applies to utility bills.
  ///
  static const IncentiveQualifiedExpenseTypeUtilityBill = IriTerm.prevalidated(
    'https://schema.org/IncentiveQualifiedExpenseTypeUtilityBill',
  );

  /// IRI for schema:IncentiveStatusActive
  ///
  /// This incentive is currently active.
  ///
  static const IncentiveStatusActive = IriTerm.prevalidated(
    'https://schema.org/IncentiveStatusActive',
  );

  /// IRI for schema:IncentiveStatusInDevelopment
  ///
  /// This incentive is currently being developed, and may become active/retired in the future.
  ///
  static const IncentiveStatusInDevelopment = IriTerm.prevalidated(
    'https://schema.org/IncentiveStatusInDevelopment',
  );

  /// IRI for schema:IncentiveStatusOnHold
  ///
  /// This incentive is currently active, but may not be accepting new applicants (e.g. max number of redemptions reached for a year)
  ///
  static const IncentiveStatusOnHold = IriTerm.prevalidated(
    'https://schema.org/IncentiveStatusOnHold',
  );

  /// IRI for schema:IncentiveStatusRetired
  ///
  /// This incentive is not longer available.
  ///
  static const IncentiveStatusRetired = IriTerm.prevalidated(
    'https://schema.org/IncentiveStatusRetired',
  );

  /// IRI for schema:IncentiveTypeLoan
  ///
  /// An incentive where the recipient can receive additional funding for the purchase/lease of the good/service, which must be paid back.
  ///
  static const IncentiveTypeLoan = IriTerm.prevalidated(
    'https://schema.org/IncentiveTypeLoan',
  );

  /// IRI for schema:IncentiveTypeRebateOrSubsidy
  ///
  /// An incentive that reduces the purchase/lease cost of the good/service in question.
  ///
  static const IncentiveTypeRebateOrSubsidy = IriTerm.prevalidated(
    'https://schema.org/IncentiveTypeRebateOrSubsidy',
  );

  /// IRI for schema:IncentiveTypeTaxCredit
  ///
  /// An incentive that directly reduces the amount of tax owed by the recipient.
  ///
  static const IncentiveTypeTaxCredit = IriTerm.prevalidated(
    'https://schema.org/IncentiveTypeTaxCredit',
  );

  /// IRI for schema:IncentiveTypeTaxDeduction
  ///
  /// An incentive that reduces the recipient's amount of taxable income.
  ///
  static const IncentiveTypeTaxDeduction = IriTerm.prevalidated(
    'https://schema.org/IncentiveTypeTaxDeduction',
  );

  /// IRI for schema:IncentiveTypeTaxWaiver
  ///
  /// An incentive that reduces/exempts the recipient from taxation applicable to the incentivized good/service (e.g. luxury taxes, registration taxes, circulation tax).
  ///
  static const IncentiveTypeTaxWaiver = IriTerm.prevalidated(
    'https://schema.org/IncentiveTypeTaxWaiver',
  );

  /// IRI for schema:Infectious
  ///
  /// Something in medical science that pertains to infectious diseases, i.e. caused by bacterial, viral, fungal or parasitic infections.
  ///
  static const Infectious = IriTerm.prevalidated(
    'https://schema.org/Infectious',
  );

  /// IRI for schema:IngredientsHealthAspect
  ///
  /// Content discussing ingredients-related aspects of a health topic.
  ///
  static const IngredientsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/IngredientsHealthAspect',
  );

  /// IRI for schema:Installment
  ///
  /// Represents the installment pricing component of the total price for an offered product.
  ///
  static const Installment = IriTerm.prevalidated(
    'https://schema.org/Installment',
  );

  /// IRI for schema:InternationalTrial
  ///
  /// An international trial.
  ///
  static const InternationalTrial = IriTerm.prevalidated(
    'https://schema.org/InternationalTrial',
  );

  /// IRI for schema:InvoicePrice
  ///
  /// Represents the invoice price of an offered product.
  ///
  static const InvoicePrice = IriTerm.prevalidated(
    'https://schema.org/InvoicePrice',
  );

  /// IRI for schema:ItemListOrderAscending
  ///
  /// An ItemList ordered with lower values listed first.
  ///
  static const ItemListOrderAscending = IriTerm.prevalidated(
    'https://schema.org/ItemListOrderAscending',
  );

  /// IRI for schema:ItemListOrderDescending
  ///
  /// An ItemList ordered with higher values listed first.
  ///
  static const ItemListOrderDescending = IriTerm.prevalidated(
    'https://schema.org/ItemListOrderDescending',
  );

  /// IRI for schema:ItemListUnordered
  ///
  /// An ItemList ordered with no explicit order.
  ///
  static const ItemListUnordered = IriTerm.prevalidated(
    'https://schema.org/ItemListUnordered',
  );

  /// IRI for schema:KeepProduct
  ///
  /// Specifies that the consumer can keep the product, even when receiving a refund or store credit.
  ///
  static const KeepProduct = IriTerm.prevalidated(
    'https://schema.org/KeepProduct',
  );

  /// IRI for schema:KosherDiet
  ///
  /// A diet conforming to Jewish dietary practices.
  ///
  static const KosherDiet = IriTerm.prevalidated(
    'https://schema.org/KosherDiet',
  );

  /// IRI for schema:LaboratoryScience
  ///
  /// A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research.
  ///
  static const LaboratoryScience = IriTerm.prevalidated(
    'https://schema.org/LaboratoryScience',
  );

  /// IRI for schema:LaserDiscFormat
  ///
  /// LaserDiscFormat.
  ///
  static const LaserDiscFormat = IriTerm.prevalidated(
    'https://schema.org/LaserDiscFormat',
  );

  /// IRI for schema:LeftHandDriving
  ///
  /// The steering position is on the left side of the vehicle (viewed from the main direction of driving).
  ///
  static const LeftHandDriving = IriTerm.prevalidated(
    'https://schema.org/LeftHandDriving',
  );

  /// IRI for schema:LeisureTimeActivity
  ///
  /// Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.
  ///
  static const LeisureTimeActivity = IriTerm.prevalidated(
    'https://schema.org/LeisureTimeActivity',
  );

  /// IRI for schema:LimitedAvailability
  ///
  /// Indicates that the item has limited availability.
  ///
  static const LimitedAvailability = IriTerm.prevalidated(
    'https://schema.org/LimitedAvailability',
  );

  /// IRI for schema:LimitedByGuaranteeCharity
  ///
  /// LimitedByGuaranteeCharity: Non-profit type referring to a charitable company that is limited by guarantee (UK).
  ///
  static const LimitedByGuaranteeCharity = IriTerm.prevalidated(
    'https://schema.org/LimitedByGuaranteeCharity',
  );

  /// IRI for schema:ListPrice
  ///
  /// Represents the list price of an offered product. Typically the same as the [MSRP](https://schema.org/MSRP).
  ///
  static const ListPrice = IriTerm.prevalidated('https://schema.org/ListPrice');

  /// IRI for schema:LiveAlbum
  ///
  /// LiveAlbum.
  ///
  static const LiveAlbum = IriTerm.prevalidated('https://schema.org/LiveAlbum');

  /// IRI for schema:LivingWithHealthAspect
  ///
  /// Information about coping or life related to the topic.
  ///
  static const LivingWithHealthAspect = IriTerm.prevalidated(
    'https://schema.org/LivingWithHealthAspect',
  );

  /// IRI for schema:LockerDelivery
  ///
  /// A DeliveryMethod in which an item is made available via locker.
  ///
  static const LockerDelivery = IriTerm.prevalidated(
    'https://schema.org/LockerDelivery',
  );

  /// IRI for schema:Longitudinal
  ///
  /// Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.
  ///
  static const Longitudinal = IriTerm.prevalidated(
    'https://schema.org/Longitudinal',
  );

  /// IRI for schema:LowCalorieDiet
  ///
  /// A diet focused on reduced calorie intake.
  ///
  static const LowCalorieDiet = IriTerm.prevalidated(
    'https://schema.org/LowCalorieDiet',
  );

  /// IRI for schema:LowFatDiet
  ///
  /// A diet focused on reduced fat and cholesterol intake.
  ///
  static const LowFatDiet = IriTerm.prevalidated(
    'https://schema.org/LowFatDiet',
  );

  /// IRI for schema:LowLactoseDiet
  ///
  /// A diet appropriate for people with lactose intolerance.
  ///
  static const LowLactoseDiet = IriTerm.prevalidated(
    'https://schema.org/LowLactoseDiet',
  );

  /// IRI for schema:LowSaltDiet
  ///
  /// A diet focused on reduced sodium intake.
  ///
  static const LowSaltDiet = IriTerm.prevalidated(
    'https://schema.org/LowSaltDiet',
  );

  /// IRI for schema:Lung
  ///
  /// Lung and respiratory system clinical examination.
  ///
  static const Lung = IriTerm.prevalidated('https://schema.org/Lung');

  /// IRI for schema:MRI
  ///
  /// Magnetic resonance imaging.
  ///
  static const MRI = IriTerm.prevalidated('https://schema.org/MRI');

  /// IRI for schema:MSRP
  ///
  /// Represents the manufacturer suggested retail price ("MSRP") of an offered product.
  ///
  static const MSRP = IriTerm.prevalidated('https://schema.org/MSRP');

  /// IRI for schema:MadeToOrder
  ///
  /// Indicates that the item is made to order (custom made).
  ///
  static const MadeToOrder = IriTerm.prevalidated(
    'https://schema.org/MadeToOrder',
  );

  /// IRI for schema:Male
  ///
  /// The male gender.
  ///
  static const Male = IriTerm.prevalidated('https://schema.org/Male');

  /// IRI for schema:MayTreatHealthAspect
  ///
  /// Related topics may be treated by a Topic.
  ///
  static const MayTreatHealthAspect = IriTerm.prevalidated(
    'https://schema.org/MayTreatHealthAspect',
  );

  /// IRI for schema:MedicalResearcher
  ///
  /// Medical researchers.
  ///
  static const MedicalResearcher = IriTerm.prevalidated(
    'https://schema.org/MedicalResearcher',
  );

  /// IRI for schema:MerchantReturnFiniteReturnWindow
  ///
  /// Specifies that there is a finite window for product returns.
  ///
  static const MerchantReturnFiniteReturnWindow = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnFiniteReturnWindow',
  );

  /// IRI for schema:MerchantReturnNotPermitted
  ///
  /// Specifies that product returns are not permitted.
  ///
  static const MerchantReturnNotPermitted = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnNotPermitted',
  );

  /// IRI for schema:MerchantReturnUnlimitedWindow
  ///
  /// Specifies that there is an unlimited window for product returns.
  ///
  static const MerchantReturnUnlimitedWindow = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnUnlimitedWindow',
  );

  /// IRI for schema:MerchantReturnUnspecified
  ///
  /// Specifies that a product return policy is not provided.
  ///
  static const MerchantReturnUnspecified = IriTerm.prevalidated(
    'https://schema.org/MerchantReturnUnspecified',
  );

  /// IRI for schema:MinimumAdvertisedPrice
  ///
  /// Represents the minimum advertised price ("MAP") (as dictated by the manufacturer) of an offered product.
  ///
  static const MinimumAdvertisedPrice = IriTerm.prevalidated(
    'https://schema.org/MinimumAdvertisedPrice',
  );

  /// IRI for schema:MinorHumanEditsDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits">minor human edits</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const MinorHumanEditsDigitalSource = IriTerm.prevalidated(
    'https://schema.org/MinorHumanEditsDigitalSource',
  );

  /// IRI for schema:MisconceptionsHealthAspect
  ///
  /// Content about common misconceptions and myths that are related to a topic.
  ///
  static const MisconceptionsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/MisconceptionsHealthAspect',
  );

  /// IRI for schema:MixedEventAttendanceMode
  ///
  /// MixedEventAttendanceMode - an event that is conducted as a combination of both offline and online modes.
  ///
  static const MixedEventAttendanceMode = IriTerm.prevalidated(
    'https://schema.org/MixedEventAttendanceMode',
  );

  /// IRI for schema:MixtapeAlbum
  ///
  /// MixtapeAlbum.
  ///
  static const MixtapeAlbum = IriTerm.prevalidated(
    'https://schema.org/MixtapeAlbum',
  );

  /// IRI for schema:MobileWebPlatform
  ///
  /// Represents the broad notion of 'mobile' browsers as a Web Platform.
  ///
  static const MobileWebPlatform = IriTerm.prevalidated(
    'https://schema.org/MobileWebPlatform',
  );

  /// IRI for schema:Monday
  ///
  /// The day of the week between Sunday and Tuesday.
  ///
  static const Monday = IriTerm.prevalidated('https://schema.org/Monday');

  /// IRI for schema:MultiCenterTrial
  ///
  /// A trial that takes place at multiple centers.
  ///
  static const MultiCenterTrial = IriTerm.prevalidated(
    'https://schema.org/MultiCenterTrial',
  );

  /// IRI for schema:MultiFrameComputationalCaptureDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia">algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const MultiFrameComputationalCaptureDigitalSource =
      IriTerm.prevalidated(
        'https://schema.org/MultiFrameComputationalCaptureDigitalSource',
      );

  /// IRI for schema:MultiPlayer
  ///
  /// Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.
  ///
  static const MultiPlayer = IriTerm.prevalidated(
    'https://schema.org/MultiPlayer',
  );

  /// IRI for schema:MulticellularParasite
  ///
  /// Multicellular parasite that causes an infection.
  ///
  static const MulticellularParasite = IriTerm.prevalidated(
    'https://schema.org/MulticellularParasite',
  );

  /// IRI for schema:Musculoskeletal
  ///
  /// A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.
  ///
  static const Musculoskeletal = IriTerm.prevalidated(
    'https://schema.org/Musculoskeletal',
  );

  /// IRI for schema:MusculoskeletalExam
  ///
  /// Musculoskeletal system clinical examination.
  ///
  static const MusculoskeletalExam = IriTerm.prevalidated(
    'https://schema.org/MusculoskeletalExam',
  );

  /// IRI for schema:NarcoticConsideration
  ///
  /// Item is a narcotic as defined by the [1961 UN convention](https://www.incb.org/incb/en/narcotic-drugs/Yellowlist/yellow-list.html), for example marijuana or heroin.
  ///
  static const NarcoticConsideration = IriTerm.prevalidated(
    'https://schema.org/NarcoticConsideration',
  );

  /// IRI for schema:Neck
  ///
  /// Neck assessment with clinical examination.
  ///
  static const Neck = IriTerm.prevalidated('https://schema.org/Neck');

  /// IRI for schema:NegativeFilmDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/negativeFilm">negative film</a></a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const NegativeFilmDigitalSource = IriTerm.prevalidated(
    'https://schema.org/NegativeFilmDigitalSource',
  );

  /// IRI for schema:Neuro
  ///
  /// Neurological system clinical examination.
  ///
  static const Neuro = IriTerm.prevalidated('https://schema.org/Neuro');

  /// IRI for schema:Neurologic
  ///
  /// A specific branch of medical science that studies the nerves and nervous system and its respective disease states.
  ///
  static const Neurologic = IriTerm.prevalidated(
    'https://schema.org/Neurologic',
  );

  /// IRI for schema:NewCondition
  ///
  /// Indicates that the item is new.
  ///
  static const NewCondition = IriTerm.prevalidated(
    'https://schema.org/NewCondition',
  );

  /// IRI for schema:NoninvasiveProcedure
  ///
  /// A type of medical procedure that involves noninvasive techniques.
  ///
  static const NoninvasiveProcedure = IriTerm.prevalidated(
    'https://schema.org/NoninvasiveProcedure',
  );

  /// IRI for schema:Nonprofit501a
  ///
  /// Nonprofit501a: Non-profit type referring to Farmers‚Äô Cooperative Associations.
  ///
  static const Nonprofit501a = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501a',
  );

  /// IRI for schema:Nonprofit501c1
  ///
  /// Nonprofit501c1: Non-profit type referring to Corporations Organized Under Act of Congress, including Federal Credit Unions and National Farm Loan Associations.
  ///
  static const Nonprofit501c1 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c1',
  );

  /// IRI for schema:Nonprofit501c10
  ///
  /// Nonprofit501c10: Non-profit type referring to Domestic Fraternal Societies and Associations.
  ///
  static const Nonprofit501c10 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c10',
  );

  /// IRI for schema:Nonprofit501c11
  ///
  /// Nonprofit501c11: Non-profit type referring to Teachers' Retirement Fund Associations.
  ///
  static const Nonprofit501c11 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c11',
  );

  /// IRI for schema:Nonprofit501c12
  ///
  /// Nonprofit501c12: Non-profit type referring to Benevolent Life Insurance Associations, Mutual Ditch or Irrigation Companies, Mutual or Cooperative Telephone Companies.
  ///
  static const Nonprofit501c12 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c12',
  );

  /// IRI for schema:Nonprofit501c13
  ///
  /// Nonprofit501c13: Non-profit type referring to Cemetery Companies.
  ///
  static const Nonprofit501c13 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c13',
  );

  /// IRI for schema:Nonprofit501c14
  ///
  /// Nonprofit501c14: Non-profit type referring to State-Chartered Credit Unions, Mutual Reserve Funds.
  ///
  static const Nonprofit501c14 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c14',
  );

  /// IRI for schema:Nonprofit501c15
  ///
  /// Nonprofit501c15: Non-profit type referring to Mutual Insurance Companies or Associations.
  ///
  static const Nonprofit501c15 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c15',
  );

  /// IRI for schema:Nonprofit501c16
  ///
  /// Nonprofit501c16: Non-profit type referring to Cooperative Organizations to Finance Crop Operations.
  ///
  static const Nonprofit501c16 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c16',
  );

  /// IRI for schema:Nonprofit501c17
  ///
  /// Nonprofit501c17: Non-profit type referring to Supplemental Unemployment Benefit Trusts.
  ///
  static const Nonprofit501c17 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c17',
  );

  /// IRI for schema:Nonprofit501c18
  ///
  /// Nonprofit501c18: Non-profit type referring to Employee Funded Pension Trust (created before 25 June 1959).
  ///
  static const Nonprofit501c18 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c18',
  );

  /// IRI for schema:Nonprofit501c19
  ///
  /// Nonprofit501c19: Non-profit type referring to Post or Organization of Past or Present Members of the Armed Forces.
  ///
  static const Nonprofit501c19 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c19',
  );

  /// IRI for schema:Nonprofit501c2
  ///
  /// Nonprofit501c2: Non-profit type referring to Title-holding Corporations for Exempt Organizations.
  ///
  static const Nonprofit501c2 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c2',
  );

  /// IRI for schema:Nonprofit501c20
  ///
  /// Nonprofit501c20: Non-profit type referring to Group Legal Services Plan Organizations.
  ///
  static const Nonprofit501c20 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c20',
  );

  /// IRI for schema:Nonprofit501c21
  ///
  /// Nonprofit501c21: Non-profit type referring to Black Lung Benefit Trusts.
  ///
  static const Nonprofit501c21 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c21',
  );

  /// IRI for schema:Nonprofit501c22
  ///
  /// Nonprofit501c22: Non-profit type referring to Withdrawal Liability Payment Funds.
  ///
  static const Nonprofit501c22 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c22',
  );

  /// IRI for schema:Nonprofit501c23
  ///
  /// Nonprofit501c23: Non-profit type referring to Veterans Organizations.
  ///
  static const Nonprofit501c23 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c23',
  );

  /// IRI for schema:Nonprofit501c24
  ///
  /// Nonprofit501c24: Non-profit type referring to Section 4049 ERISA Trusts.
  ///
  static const Nonprofit501c24 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c24',
  );

  /// IRI for schema:Nonprofit501c25
  ///
  /// Nonprofit501c25: Non-profit type referring to Real Property Title-Holding Corporations or Trusts with Multiple Parents.
  ///
  static const Nonprofit501c25 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c25',
  );

  /// IRI for schema:Nonprofit501c26
  ///
  /// Nonprofit501c26: Non-profit type referring to State-Sponsored Organizations Providing Health Coverage for High-Risk Individuals.
  ///
  static const Nonprofit501c26 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c26',
  );

  /// IRI for schema:Nonprofit501c27
  ///
  /// Nonprofit501c27: Non-profit type referring to State-Sponsored Workers' Compensation Reinsurance Organizations.
  ///
  static const Nonprofit501c27 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c27',
  );

  /// IRI for schema:Nonprofit501c28
  ///
  /// Nonprofit501c28: Non-profit type referring to National Railroad Retirement Investment Trusts.
  ///
  static const Nonprofit501c28 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c28',
  );

  /// IRI for schema:Nonprofit501c3
  ///
  /// Nonprofit501c3: Non-profit type referring to Religious, Educational, Charitable, Scientific, Literary, Testing for Public Safety, Fostering National or International Amateur Sports Competition, or Prevention of Cruelty to Children or Animals Organizations.
  ///
  static const Nonprofit501c3 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c3',
  );

  /// IRI for schema:Nonprofit501c4
  ///
  /// Nonprofit501c4: Non-profit type referring to Civic Leagues, Social Welfare Organizations, and Local Associations of Employees.
  ///
  static const Nonprofit501c4 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c4',
  );

  /// IRI for schema:Nonprofit501c5
  ///
  /// Nonprofit501c5: Non-profit type referring to Labor, Agricultural and Horticultural Organizations.
  ///
  static const Nonprofit501c5 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c5',
  );

  /// IRI for schema:Nonprofit501c6
  ///
  /// Nonprofit501c6: Non-profit type referring to Business Leagues, Chambers of Commerce, Real Estate Boards.
  ///
  static const Nonprofit501c6 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c6',
  );

  /// IRI for schema:Nonprofit501c7
  ///
  /// Nonprofit501c7: Non-profit type referring to Social and Recreational Clubs.
  ///
  static const Nonprofit501c7 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c7',
  );

  /// IRI for schema:Nonprofit501c8
  ///
  /// Nonprofit501c8: Non-profit type referring to Fraternal Beneficiary Societies and Associations.
  ///
  static const Nonprofit501c8 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c8',
  );

  /// IRI for schema:Nonprofit501c9
  ///
  /// Nonprofit501c9: Non-profit type referring to Voluntary Employee Beneficiary Associations.
  ///
  static const Nonprofit501c9 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501c9',
  );

  /// IRI for schema:Nonprofit501d
  ///
  /// Nonprofit501d: Non-profit type referring to Religious and Apostolic Associations.
  ///
  static const Nonprofit501d = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501d',
  );

  /// IRI for schema:Nonprofit501e
  ///
  /// Nonprofit501e: Non-profit type referring to Cooperative Hospital Service Organizations.
  ///
  static const Nonprofit501e = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501e',
  );

  /// IRI for schema:Nonprofit501f
  ///
  /// Nonprofit501f: Non-profit type referring to Cooperative Service Organizations.
  ///
  static const Nonprofit501f = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501f',
  );

  /// IRI for schema:Nonprofit501k
  ///
  /// Nonprofit501k: Non-profit type referring to Child Care Organizations.
  ///
  static const Nonprofit501k = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501k',
  );

  /// IRI for schema:Nonprofit501n
  ///
  /// Nonprofit501n: Non-profit type referring to Charitable Risk Pools.
  ///
  static const Nonprofit501n = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501n',
  );

  /// IRI for schema:Nonprofit501q
  ///
  /// Nonprofit501q: Non-profit type referring to Credit Counseling Organizations.
  ///
  static const Nonprofit501q = IriTerm.prevalidated(
    'https://schema.org/Nonprofit501q',
  );

  /// IRI for schema:Nonprofit527
  ///
  /// Nonprofit527: Non-profit type referring to political organizations.
  ///
  static const Nonprofit527 = IriTerm.prevalidated(
    'https://schema.org/Nonprofit527',
  );

  /// IRI for schema:NonprofitANBI
  ///
  /// NonprofitANBI: Non-profit type referring to a Public Benefit Organization (NL).
  ///
  static const NonprofitANBI = IriTerm.prevalidated(
    'https://schema.org/NonprofitANBI',
  );

  /// IRI for schema:NonprofitSBBI
  ///
  /// NonprofitSBBI: Non-profit type referring to a Social Interest Promoting Institution (NL).
  ///
  static const NonprofitSBBI = IriTerm.prevalidated(
    'https://schema.org/NonprofitSBBI',
  );

  /// IRI for schema:Nose
  ///
  /// Nose function assessment with clinical examination.
  ///
  static const Nose = IriTerm.prevalidated('https://schema.org/Nose');

  /// IRI for schema:NotInForce
  ///
  /// Indicates that a legislation is currently not in force.
  ///
  static const NotInForce = IriTerm.prevalidated(
    'https://schema.org/NotInForce',
  );

  /// IRI for schema:NotYetRecruiting
  ///
  /// Not yet recruiting.
  ///
  static const NotYetRecruiting = IriTerm.prevalidated(
    'https://schema.org/NotYetRecruiting',
  );

  /// IRI for schema:OTC
  ///
  /// The character of a medical substance, typically a medicine, of being available over the counter or not.
  ///
  static const OTC = IriTerm.prevalidated('https://schema.org/OTC');

  /// IRI for schema:Observational
  ///
  /// An observational study design.
  ///
  static const Observational = IriTerm.prevalidated(
    'https://schema.org/Observational',
  );

  /// IRI for schema:OccupationalActivity
  ///
  /// Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.
  ///
  static const OccupationalActivity = IriTerm.prevalidated(
    'https://schema.org/OccupationalActivity',
  );

  /// IRI for schema:OfficialLegalValue
  ///
  /// All the documents published by an official publisher should have at least the legal value level "OfficialLegalValue". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of a EU directive published by the EU Office of Publications).
  ///
  static const OfficialLegalValue = IriTerm.prevalidated(
    'https://schema.org/OfficialLegalValue',
  );

  /// IRI for schema:OfflineEventAttendanceMode
  ///
  /// OfflineEventAttendanceMode - an event that is primarily conducted offline.
  ///
  static const OfflineEventAttendanceMode = IriTerm.prevalidated(
    'https://schema.org/OfflineEventAttendanceMode',
  );

  /// IRI for schema:OfflinePermanently
  ///
  /// Game server status: OfflinePermanently. Server is offline and not available.
  ///
  static const OfflinePermanently = IriTerm.prevalidated(
    'https://schema.org/OfflinePermanently',
  );

  /// IRI for schema:OfflineTemporarily
  ///
  /// Game server status: OfflineTemporarily. Server is offline now but it can be online soon.
  ///
  static const OfflineTemporarily = IriTerm.prevalidated(
    'https://schema.org/OfflineTemporarily',
  );

  /// IRI for schema:OnSitePickup
  ///
  /// A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.
  ///
  static const OnSitePickup = IriTerm.prevalidated(
    'https://schema.org/OnSitePickup',
  );

  /// IRI for schema:OneTimePayments
  ///
  /// OneTimePayments: this is a benefit for one-time payments for individuals.
  ///
  static const OneTimePayments = IriTerm.prevalidated(
    'https://schema.org/OneTimePayments',
  );

  /// IRI for schema:Online
  ///
  /// Game server status: Online. Server is available.
  ///
  static const Online = IriTerm.prevalidated('https://schema.org/Online');

  /// IRI for schema:OnlineEventAttendanceMode
  ///
  /// OnlineEventAttendanceMode - an event that is primarily conducted online.
  ///
  static const OnlineEventAttendanceMode = IriTerm.prevalidated(
    'https://schema.org/OnlineEventAttendanceMode',
  );

  /// IRI for schema:OnlineFull
  ///
  /// Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.
  ///
  static const OnlineFull = IriTerm.prevalidated(
    'https://schema.org/OnlineFull',
  );

  /// IRI for schema:OnlineOnly
  ///
  /// Indicates that the item is available only online.
  ///
  static const OnlineOnly = IriTerm.prevalidated(
    'https://schema.org/OnlineOnly',
  );

  /// IRI for schema:OpenTrial
  ///
  /// A trial design in which the researcher knows the full details of the treatment, and so does the patient.
  ///
  static const OpenTrial = IriTerm.prevalidated('https://schema.org/OpenTrial');

  /// IRI for schema:OrderCancelled
  ///
  /// OrderStatus representing cancellation of an order.
  ///
  static const OrderCancelled = IriTerm.prevalidated(
    'https://schema.org/OrderCancelled',
  );

  /// IRI for schema:OrderDelivered
  ///
  /// OrderStatus representing successful delivery of an order.
  ///
  static const OrderDelivered = IriTerm.prevalidated(
    'https://schema.org/OrderDelivered',
  );

  /// IRI for schema:OrderInTransit
  ///
  /// OrderStatus representing that an order is in transit.
  ///
  static const OrderInTransit = IriTerm.prevalidated(
    'https://schema.org/OrderInTransit',
  );

  /// IRI for schema:OrderPaymentDue
  ///
  /// OrderStatus representing that payment is due on an order.
  ///
  static const OrderPaymentDue = IriTerm.prevalidated(
    'https://schema.org/OrderPaymentDue',
  );

  /// IRI for schema:OrderPickupAvailable
  ///
  /// OrderStatus representing availability of an order for pickup.
  ///
  static const OrderPickupAvailable = IriTerm.prevalidated(
    'https://schema.org/OrderPickupAvailable',
  );

  /// IRI for schema:OrderProblem
  ///
  /// OrderStatus representing that there is a problem with the order.
  ///
  static const OrderProblem = IriTerm.prevalidated(
    'https://schema.org/OrderProblem',
  );

  /// IRI for schema:OrderProcessing
  ///
  /// OrderStatus representing that an order is being processed.
  ///
  static const OrderProcessing = IriTerm.prevalidated(
    'https://schema.org/OrderProcessing',
  );

  /// IRI for schema:OrderReturned
  ///
  /// OrderStatus representing that an order has been returned.
  ///
  static const OrderReturned = IriTerm.prevalidated(
    'https://schema.org/OrderReturned',
  );

  /// IRI for schema:OriginalMediaContent
  ///
  /// Content coded 'as original media content' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'original': No evidence the footage has been misleadingly altered or manipulated, though it may contain false or misleading claims.
  ///
  /// For an {[ImageObject]} to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.
  ///
  /// For an {[ImageObject]} with embedded text to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.
  ///
  /// For an {[AudioObject]} to be 'original': No evidence the audio has been misleadingly altered or manipulated, though it may contain false or misleading claims.
  ///
  ///
  static const OriginalMediaContent = IriTerm.prevalidated(
    'https://schema.org/OriginalMediaContent',
  );

  /// IRI for schema:OriginalShippingFees
  ///
  /// Specifies that the customer must pay the original shipping costs when returning a product.
  ///
  static const OriginalShippingFees = IriTerm.prevalidated(
    'https://schema.org/OriginalShippingFees',
  );

  /// IRI for schema:Osteopathic
  ///
  /// A system of medicine focused on promoting the body's innate ability to heal itself.
  ///
  static const Osteopathic = IriTerm.prevalidated(
    'https://schema.org/Osteopathic',
  );

  /// IRI for schema:OutOfStock
  ///
  /// Indicates that the item is out of stock.
  ///
  static const OutOfStock = IriTerm.prevalidated(
    'https://schema.org/OutOfStock',
  );

  /// IRI for schema:OverviewHealthAspect
  ///
  /// Overview of the content. Contains a summarized view of the topic with the most relevant information for an introduction.
  ///
  static const OverviewHealthAspect = IriTerm.prevalidated(
    'https://schema.org/OverviewHealthAspect',
  );

  /// IRI for schema:PET
  ///
  /// Positron emission tomography imaging.
  ///
  static const PET = IriTerm.prevalidated('https://schema.org/PET');

  /// IRI for schema:PaidLeave
  ///
  /// PaidLeave: this is a benefit for paid leave.
  ///
  static const PaidLeave = IriTerm.prevalidated('https://schema.org/PaidLeave');

  /// IRI for schema:Paperback
  ///
  /// Book format: Paperback.
  ///
  static const Paperback = IriTerm.prevalidated('https://schema.org/Paperback');

  /// IRI for schema:ParcelService
  ///
  /// A private parcel service as the delivery mode available for a certain offer.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#DHL\n* http://purl.org/goodrelations/v1#FederalExpress\n* http://purl.org/goodrelations/v1#UPS
  ///
  ///
  static const ParcelService = IriTerm.prevalidated(
    'https://schema.org/ParcelService',
  );

  /// IRI for schema:ParentalSupport
  ///
  /// ParentalSupport: this is a benefit for parental support.
  ///
  static const ParentalSupport = IriTerm.prevalidated(
    'https://schema.org/ParentalSupport',
  );

  /// IRI for schema:ParkingMap
  ///
  /// A parking map.
  ///
  static const ParkingMap = IriTerm.prevalidated(
    'https://schema.org/ParkingMap',
  );

  /// IRI for schema:PartiallyInForce
  ///
  /// Indicates that parts of the legislation are in force, and parts are not.
  ///
  static const PartiallyInForce = IriTerm.prevalidated(
    'https://schema.org/PartiallyInForce',
  );

  /// IRI for schema:Pathology
  ///
  /// A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.
  ///
  static const Pathology = IriTerm.prevalidated('https://schema.org/Pathology');

  /// IRI for schema:PatientExperienceHealthAspect
  ///
  /// Content about the real life experience of patients or people that have lived a similar experience about the topic. May be forums, topics, Q-and-A and related material.
  ///
  static const PatientExperienceHealthAspect = IriTerm.prevalidated(
    'https://schema.org/PatientExperienceHealthAspect',
  );

  /// IRI for schema:PaymentAutomaticallyApplied
  ///
  /// An automatic payment system is in place and will be used.
  ///
  static const PaymentAutomaticallyApplied = IriTerm.prevalidated(
    'https://schema.org/PaymentAutomaticallyApplied',
  );

  /// IRI for schema:PaymentComplete
  ///
  /// The payment has been received and processed.
  ///
  static const PaymentComplete = IriTerm.prevalidated(
    'https://schema.org/PaymentComplete',
  );

  /// IRI for schema:PaymentDeclined
  ///
  /// The payee received the payment, but it was declined for some reason.
  ///
  static const PaymentDeclined = IriTerm.prevalidated(
    'https://schema.org/PaymentDeclined',
  );

  /// IRI for schema:PaymentDue
  ///
  /// The payment is due, but still within an acceptable time to be received.
  ///
  static const PaymentDue = IriTerm.prevalidated(
    'https://schema.org/PaymentDue',
  );

  /// IRI for schema:PaymentPastDue
  ///
  /// The payment is due and considered late.
  ///
  static const PaymentPastDue = IriTerm.prevalidated(
    'https://schema.org/PaymentPastDue',
  );

  /// IRI for schema:PercutaneousProcedure
  ///
  /// A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.
  ///
  static const PercutaneousProcedure = IriTerm.prevalidated(
    'https://schema.org/PercutaneousProcedure',
  );

  /// IRI for schema:PharmacySpecialty
  ///
  /// The practice or art and science of preparing and dispensing drugs and medicines.
  ///
  static const PharmacySpecialty = IriTerm.prevalidated(
    'https://schema.org/PharmacySpecialty',
  );

  /// IRI for schema:PhoneCarrierPayment
  ///
  /// Payment by billing via the phone carrier.
  ///
  static const PhoneCarrierPayment = IriTerm.prevalidated(
    'https://schema.org/PhoneCarrierPayment',
  );

  /// IRI for schema:PlaceboControlledTrial
  ///
  /// A placebo-controlled trial design.
  ///
  static const PlaceboControlledTrial = IriTerm.prevalidated(
    'https://schema.org/PlaceboControlledTrial',
  );

  /// IRI for schema:PositiveFilmDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/positiveFilm">positive film</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const PositiveFilmDigitalSource = IriTerm.prevalidated(
    'https://schema.org/PositiveFilmDigitalSource',
  );

  /// IRI for schema:PotentialActionStatus
  ///
  /// A description of an action that is supported.
  ///
  static const PotentialActionStatus = IriTerm.prevalidated(
    'https://schema.org/PotentialActionStatus',
  );

  /// IRI for schema:PreOrder
  ///
  /// Indicates that the item is available for pre-order.
  ///
  static const PreOrder = IriTerm.prevalidated('https://schema.org/PreOrder');

  /// IRI for schema:PreSale
  ///
  /// Indicates that the item is available for ordering and delivery before general availability.
  ///
  static const PreSale = IriTerm.prevalidated('https://schema.org/PreSale');

  /// IRI for schema:PregnancyHealthAspect
  ///
  /// Content discussing pregnancy-related aspects of a health topic.
  ///
  static const PregnancyHealthAspect = IriTerm.prevalidated(
    'https://schema.org/PregnancyHealthAspect',
  );

  /// IRI for schema:PrescriptionOnly
  ///
  /// Available by prescription only.
  ///
  static const PrescriptionOnly = IriTerm.prevalidated(
    'https://schema.org/PrescriptionOnly',
  );

  /// IRI for schema:PreventionHealthAspect
  ///
  /// Information about actions or measures that can be taken to avoid getting the topic or reaching a critical situation related to the topic.
  ///
  static const PreventionHealthAspect = IriTerm.prevalidated(
    'https://schema.org/PreventionHealthAspect',
  );

  /// IRI for schema:PrintDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/print">print</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const PrintDigitalSource = IriTerm.prevalidated(
    'https://schema.org/PrintDigitalSource',
  );

  /// IRI for schema:Prion
  ///
  /// A prion is an infectious agent composed of protein in a misfolded form.
  ///
  static const Prion = IriTerm.prevalidated('https://schema.org/Prion');

  /// IRI for schema:PrognosisHealthAspect
  ///
  /// Typical progression and happenings of life course of the topic.
  ///
  static const PrognosisHealthAspect = IriTerm.prevalidated(
    'https://schema.org/PrognosisHealthAspect',
  );

  /// IRI for schema:Protozoa
  ///
  /// Single-celled organism that causes an infection.
  ///
  static const Protozoa = IriTerm.prevalidated('https://schema.org/Protozoa');

  /// IRI for schema:PublicHolidays
  ///
  /// This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a "day of the week", it can be used with {[OpeningHoursSpecification]}. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.
  ///
  static const PublicHolidays = IriTerm.prevalidated(
    'https://schema.org/PublicHolidays',
  );

  /// IRI for schema:Pulmonary
  ///
  /// A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.
  ///
  static const Pulmonary = IriTerm.prevalidated('https://schema.org/Pulmonary');

  /// IRI for schema:PurchaseTypeLease
  ///
  /// This is a lease of an item.
  ///
  static const PurchaseTypeLease = IriTerm.prevalidated(
    'https://schema.org/PurchaseTypeLease',
  );

  /// IRI for schema:PurchaseTypeNewPurchase
  ///
  /// This is a purchase of a new item.
  ///
  static const PurchaseTypeNewPurchase = IriTerm.prevalidated(
    'https://schema.org/PurchaseTypeNewPurchase',
  );

  /// IRI for schema:PurchaseTypeTradeIn
  ///
  /// This is a trade-in for an item.
  ///
  static const PurchaseTypeTradeIn = IriTerm.prevalidated(
    'https://schema.org/PurchaseTypeTradeIn',
  );

  /// IRI for schema:PurchaseTypeUsedPurchase
  ///
  /// This is a purchase of a used item.
  ///
  static const PurchaseTypeUsedPurchase = IriTerm.prevalidated(
    'https://schema.org/PurchaseTypeUsedPurchase',
  );

  /// IRI for schema:Radiography
  ///
  /// Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.
  ///
  static const Radiography = IriTerm.prevalidated(
    'https://schema.org/Radiography',
  );

  /// IRI for schema:RandomizedTrial
  ///
  /// A randomized trial design.
  ///
  static const RandomizedTrial = IriTerm.prevalidated(
    'https://schema.org/RandomizedTrial',
  );

  /// IRI for schema:ReadPermission
  ///
  /// Permission to read or view the document.
  ///
  static const ReadPermission = IriTerm.prevalidated(
    'https://schema.org/ReadPermission',
  );

  /// IRI for schema:RearWheelDriveConfiguration
  ///
  /// Real-wheel drive is a transmission layout where the engine drives the rear wheels.
  ///
  static const RearWheelDriveConfiguration = IriTerm.prevalidated(
    'https://schema.org/RearWheelDriveConfiguration',
  );

  /// IRI for schema:Recruiting
  ///
  /// Recruiting participants.
  ///
  static const Recruiting = IriTerm.prevalidated(
    'https://schema.org/Recruiting',
  );

  /// IRI for schema:ReducedRelevanceForChildrenConsideration
  ///
  /// A general code for cases where relevance to children is reduced, e.g. adult education, mortgages, retirement-related products, etc.
  ///
  static const ReducedRelevanceForChildrenConsideration = IriTerm.prevalidated(
    'https://schema.org/ReducedRelevanceForChildrenConsideration',
  );

  /// IRI for schema:RefurbishedCondition
  ///
  /// Indicates that the item is refurbished.
  ///
  static const RefurbishedCondition = IriTerm.prevalidated(
    'https://schema.org/RefurbishedCondition',
  );

  /// IRI for schema:Registry
  ///
  /// A registry-based study design.
  ///
  static const Registry = IriTerm.prevalidated('https://schema.org/Registry');

  /// IRI for schema:RegularPrice
  ///
  /// Represents the regular price of an offered product. This is usually the advertised price before a temporary sale. Once the sale period ends the advertised price will go back to the regular price.
  ///
  static const RegularPrice = IriTerm.prevalidated(
    'https://schema.org/RegularPrice',
  );

  /// IRI for schema:ReimbursementCap
  ///
  /// The drug's cost represents the maximum reimbursement paid by an insurer for the drug.
  ///
  static const ReimbursementCap = IriTerm.prevalidated(
    'https://schema.org/ReimbursementCap',
  );

  /// IRI for schema:RelatedTopicsHealthAspect
  ///
  /// Other prominent or relevant topics tied to the main topic.
  ///
  static const RelatedTopicsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/RelatedTopicsHealthAspect',
  );

  /// IRI for schema:RemixAlbum
  ///
  /// RemixAlbum.
  ///
  static const RemixAlbum = IriTerm.prevalidated(
    'https://schema.org/RemixAlbum',
  );

  /// IRI for schema:Renal
  ///
  /// A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.
  ///
  static const Renal = IriTerm.prevalidated('https://schema.org/Renal');

  /// IRI for schema:RentalVehicleUsage
  ///
  /// Indicates the usage of the vehicle as a rental car.
  ///
  static const RentalVehicleUsage = IriTerm.prevalidated(
    'https://schema.org/RentalVehicleUsage',
  );

  /// IRI for schema:ReservationCancelled
  ///
  /// The status for a previously confirmed reservation that is now cancelled.
  ///
  static const ReservationCancelled = IriTerm.prevalidated(
    'https://schema.org/ReservationCancelled',
  );

  /// IRI for schema:ReservationConfirmed
  ///
  /// The status of a confirmed reservation.
  ///
  static const ReservationConfirmed = IriTerm.prevalidated(
    'https://schema.org/ReservationConfirmed',
  );

  /// IRI for schema:ReservationHold
  ///
  /// The status of a reservation on hold pending an update like credit card number or flight changes.
  ///
  static const ReservationHold = IriTerm.prevalidated(
    'https://schema.org/ReservationHold',
  );

  /// IRI for schema:ReservationPending
  ///
  /// The status of a reservation when a request has been sent, but not confirmed.
  ///
  static const ReservationPending = IriTerm.prevalidated(
    'https://schema.org/ReservationPending',
  );

  /// IRI for schema:Reserved
  ///
  /// Indicates that the item is reserved and therefore not available.
  ///
  static const Reserved = IriTerm.prevalidated('https://schema.org/Reserved');

  /// IRI for schema:RestockingFees
  ///
  /// Specifies that the customer must pay a restocking fee when returning a product.
  ///
  static const RestockingFees = IriTerm.prevalidated(
    'https://schema.org/RestockingFees',
  );

  /// IRI for schema:ResultsAvailable
  ///
  /// Results are available.
  ///
  static const ResultsAvailable = IriTerm.prevalidated(
    'https://schema.org/ResultsAvailable',
  );

  /// IRI for schema:ResultsNotAvailable
  ///
  /// Results are not available.
  ///
  static const ResultsNotAvailable = IriTerm.prevalidated(
    'https://schema.org/ResultsNotAvailable',
  );

  /// IRI for schema:Retail
  ///
  /// The drug's cost represents the retail cost of the drug.
  ///
  static const Retail = IriTerm.prevalidated('https://schema.org/Retail');

  /// IRI for schema:ReturnAtKiosk
  ///
  /// Specifies that product returns must be made at a kiosk.
  ///
  static const ReturnAtKiosk = IriTerm.prevalidated(
    'https://schema.org/ReturnAtKiosk',
  );

  /// IRI for schema:ReturnByMail
  ///
  /// Specifies that product returns must be done by mail.
  ///
  static const ReturnByMail = IriTerm.prevalidated(
    'https://schema.org/ReturnByMail',
  );

  /// IRI for schema:ReturnFeesCustomerResponsibility
  ///
  /// Specifies that product returns must be paid for, and are the responsibility of, the customer.
  ///
  static const ReturnFeesCustomerResponsibility = IriTerm.prevalidated(
    'https://schema.org/ReturnFeesCustomerResponsibility',
  );

  /// IRI for schema:ReturnInStore
  ///
  /// Specifies that product returns must be made in a store.
  ///
  static const ReturnInStore = IriTerm.prevalidated(
    'https://schema.org/ReturnInStore',
  );

  /// IRI for schema:ReturnLabelCustomerResponsibility
  ///
  /// Indicated that creating a return label is the responsibility of the customer.
  ///
  static const ReturnLabelCustomerResponsibility = IriTerm.prevalidated(
    'https://schema.org/ReturnLabelCustomerResponsibility',
  );

  /// IRI for schema:ReturnLabelDownloadAndPrint
  ///
  /// Indicated that a return label must be downloaded and printed by the customer.
  ///
  static const ReturnLabelDownloadAndPrint = IriTerm.prevalidated(
    'https://schema.org/ReturnLabelDownloadAndPrint',
  );

  /// IRI for schema:ReturnLabelInBox
  ///
  /// Specifies that a return label will be provided by the seller in the shipping box.
  ///
  static const ReturnLabelInBox = IriTerm.prevalidated(
    'https://schema.org/ReturnLabelInBox',
  );

  /// IRI for schema:ReturnShippingFees
  ///
  /// Specifies that the customer must pay the return shipping costs when returning a product.
  ///
  static const ReturnShippingFees = IriTerm.prevalidated(
    'https://schema.org/ReturnShippingFees',
  );

  /// IRI for schema:Rheumatologic
  ///
  /// A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.
  ///
  static const Rheumatologic = IriTerm.prevalidated(
    'https://schema.org/Rheumatologic',
  );

  /// IRI for schema:RightHandDriving
  ///
  /// The steering position is on the right side of the vehicle (viewed from the main direction of driving).
  ///
  static const RightHandDriving = IriTerm.prevalidated(
    'https://schema.org/RightHandDriving',
  );

  /// IRI for schema:RisksOrComplicationsHealthAspect
  ///
  /// Information about the risk factors and possible complications that may follow a topic.
  ///
  static const RisksOrComplicationsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/RisksOrComplicationsHealthAspect',
  );

  /// IRI for schema:RsvpResponseMaybe
  ///
  /// The invitee may or may not attend.
  ///
  static const RsvpResponseMaybe = IriTerm.prevalidated(
    'https://schema.org/RsvpResponseMaybe',
  );

  /// IRI for schema:RsvpResponseNo
  ///
  /// The invitee will not attend.
  ///
  static const RsvpResponseNo = IriTerm.prevalidated(
    'https://schema.org/RsvpResponseNo',
  );

  /// IRI for schema:RsvpResponseYes
  ///
  /// The invitee will attend.
  ///
  static const RsvpResponseYes = IriTerm.prevalidated(
    'https://schema.org/RsvpResponseYes',
  );

  /// IRI for schema:SRP
  ///
  /// Represents the suggested retail price ("SRP") of an offered product.
  ///
  static const SRP = IriTerm.prevalidated('https://schema.org/SRP');

  /// IRI for schema:SafetyHealthAspect
  ///
  /// Content about the safety-related aspects of a health topic.
  ///
  static const SafetyHealthAspect = IriTerm.prevalidated(
    'https://schema.org/SafetyHealthAspect',
  );

  /// IRI for schema:SalePrice
  ///
  /// Represents a sale price (usually active for a limited period) of an offered product.
  ///
  static const SalePrice = IriTerm.prevalidated('https://schema.org/SalePrice');

  /// IRI for schema:SatireOrParodyContent
  ///
  /// Content coded 'satire or parody content' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'satire or parody content': A video that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the ‚Äúmissing context‚Äù rating.)
  ///
  /// For an {[ImageObject]} to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the ‚Äúmissing context‚Äù rating.)
  ///
  /// For an {[ImageObject]} with embedded text to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the ‚Äúmissing context‚Äù rating.)
  ///
  /// For an {[AudioObject]} to be 'satire or parody content': Audio that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the ‚Äúmissing context‚Äù rating.)
  ///
  ///
  static const SatireOrParodyContent = IriTerm.prevalidated(
    'https://schema.org/SatireOrParodyContent',
  );

  /// IRI for schema:Saturday
  ///
  /// The day of the week between Friday and Sunday.
  ///
  static const Saturday = IriTerm.prevalidated('https://schema.org/Saturday');

  /// IRI for schema:ScreenCaptureDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia">algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const ScreenCaptureDigitalSource = IriTerm.prevalidated(
    'https://schema.org/ScreenCaptureDigitalSource',
  );

  /// IRI for schema:ScreeningHealthAspect
  ///
  /// Content about how to screen or further filter a topic.
  ///
  static const ScreeningHealthAspect = IriTerm.prevalidated(
    'https://schema.org/ScreeningHealthAspect',
  );

  /// IRI for schema:SeatingMap
  ///
  /// A seating map.
  ///
  static const SeatingMap = IriTerm.prevalidated(
    'https://schema.org/SeatingMap',
  );

  /// IRI for schema:SeeDoctorHealthAspect
  ///
  /// Information about questions that may be asked, when to see a professional, measures before seeing a doctor or content about the first consultation.
  ///
  static const SeeDoctorHealthAspect = IriTerm.prevalidated(
    'https://schema.org/SeeDoctorHealthAspect',
  );

  /// IRI for schema:SelfCareHealthAspect
  ///
  /// Self care actions or measures that can be taken to sooth, health or avoid a topic. This may be carried at home and can be carried/managed by the person itself.
  ///
  static const SelfCareHealthAspect = IriTerm.prevalidated(
    'https://schema.org/SelfCareHealthAspect',
  );

  /// IRI for schema:SexualContentConsideration
  ///
  /// The item contains sexually oriented content such as nudity, suggestive or explicit material, or related online services, or is intended to enhance sexual activity. Examples: Erotic videos or magazine, sexual enhancement devices, sex toys.
  ///
  static const SexualContentConsideration = IriTerm.prevalidated(
    'https://schema.org/SexualContentConsideration',
  );

  /// IRI for schema:SideEffectsHealthAspect
  ///
  /// Side effects that can be observed from the usage of the topic.
  ///
  static const SideEffectsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/SideEffectsHealthAspect',
  );

  /// IRI for schema:SingleBlindedTrial
  ///
  /// A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.
  ///
  static const SingleBlindedTrial = IriTerm.prevalidated(
    'https://schema.org/SingleBlindedTrial',
  );

  /// IRI for schema:SingleCenterTrial
  ///
  /// A trial that takes place at a single center.
  ///
  static const SingleCenterTrial = IriTerm.prevalidated(
    'https://schema.org/SingleCenterTrial',
  );

  /// IRI for schema:SinglePlayer
  ///
  /// Play mode: SinglePlayer. Which is played by a lone player.
  ///
  static const SinglePlayer = IriTerm.prevalidated(
    'https://schema.org/SinglePlayer',
  );

  /// IRI for schema:SingleRelease
  ///
  /// SingleRelease.
  ///
  static const SingleRelease = IriTerm.prevalidated(
    'https://schema.org/SingleRelease',
  );

  /// IRI for schema:SizeSystemImperial
  ///
  /// Imperial size system.
  ///
  static const SizeSystemImperial = IriTerm.prevalidated(
    'https://schema.org/SizeSystemImperial',
  );

  /// IRI for schema:SizeSystemMetric
  ///
  /// Metric size system.
  ///
  static const SizeSystemMetric = IriTerm.prevalidated(
    'https://schema.org/SizeSystemMetric',
  );

  /// IRI for schema:Skin
  ///
  /// Skin assessment with clinical examination.
  ///
  static const Skin = IriTerm.prevalidated('https://schema.org/Skin');

  /// IRI for schema:SoldOut
  ///
  /// Indicates that the item has sold out.
  ///
  static const SoldOut = IriTerm.prevalidated('https://schema.org/SoldOut');

  /// IRI for schema:SoundtrackAlbum
  ///
  /// SoundtrackAlbum.
  ///
  static const SoundtrackAlbum = IriTerm.prevalidated(
    'https://schema.org/SoundtrackAlbum',
  );

  /// IRI for schema:SpeechPathology
  ///
  /// The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.
  ///
  static const SpeechPathology = IriTerm.prevalidated(
    'https://schema.org/SpeechPathology',
  );

  /// IRI for schema:SpokenWordAlbum
  ///
  /// SpokenWordAlbum.
  ///
  static const SpokenWordAlbum = IriTerm.prevalidated(
    'https://schema.org/SpokenWordAlbum',
  );

  /// IRI for schema:StagedContent
  ///
  /// Content coded 'staged content' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'staged content': A video that has been created using actors or similarly contrived.
  ///
  /// For an {[ImageObject]} to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.
  ///
  /// For an {[ImageObject]} with embedded text to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.
  ///
  /// For an {[AudioObject]} to be 'staged content': Audio that has been created using actors or similarly contrived.
  ///
  ///
  static const StagedContent = IriTerm.prevalidated(
    'https://schema.org/StagedContent',
  );

  /// IRI for schema:StagesHealthAspect
  ///
  /// Stages that can be observed from a topic.
  ///
  static const StagesHealthAspect = IriTerm.prevalidated(
    'https://schema.org/StagesHealthAspect',
  );

  /// IRI for schema:StoreCreditRefund
  ///
  /// Specifies that the customer receives a store credit as refund when returning a product.
  ///
  static const StoreCreditRefund = IriTerm.prevalidated(
    'https://schema.org/StoreCreditRefund',
  );

  /// IRI for schema:StrengthTraining
  ///
  /// Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.
  ///
  static const StrengthTraining = IriTerm.prevalidated(
    'https://schema.org/StrengthTraining',
  );

  /// IRI for schema:StrikethroughPrice
  ///
  /// Represents the strikethrough price (the previous advertised price) of an offered product.
  ///
  static const StrikethroughPrice = IriTerm.prevalidated(
    'https://schema.org/StrikethroughPrice',
  );

  /// IRI for schema:StudioAlbum
  ///
  /// StudioAlbum.
  ///
  static const StudioAlbum = IriTerm.prevalidated(
    'https://schema.org/StudioAlbum',
  );

  /// IRI for schema:Subscription
  ///
  /// Represents the subscription pricing component of the total price for an offered product.
  ///
  static const Subscription = IriTerm.prevalidated(
    'https://schema.org/Subscription',
  );

  /// IRI for schema:Sunday
  ///
  /// The day of the week between Saturday and Monday.
  ///
  static const Sunday = IriTerm.prevalidated('https://schema.org/Sunday');

  /// IRI for schema:Surgical
  ///
  /// A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.
  ///
  static const Surgical = IriTerm.prevalidated('https://schema.org/Surgical');

  /// IRI for schema:Suspended
  ///
  /// Suspended.
  ///
  static const Suspended = IriTerm.prevalidated('https://schema.org/Suspended');

  /// IRI for schema:SymptomsHealthAspect
  ///
  /// Symptoms or related symptoms of a Topic.
  ///
  static const SymptomsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/SymptomsHealthAspect',
  );

  /// IRI for schema:TaxiVehicleUsage
  ///
  /// Indicates the usage of the car as a taxi.
  ///
  static const TaxiVehicleUsage = IriTerm.prevalidated(
    'https://schema.org/TaxiVehicleUsage',
  );

  /// IRI for schema:Terminated
  ///
  /// Terminated.
  ///
  static const Terminated = IriTerm.prevalidated(
    'https://schema.org/Terminated',
  );

  /// IRI for schema:Therapeutic
  ///
  /// A medical device used for therapeutic purposes.
  ///
  static const Therapeutic = IriTerm.prevalidated(
    'https://schema.org/Therapeutic',
  );

  /// IRI for schema:Throat
  ///
  /// Throat assessment with  clinical examination.
  ///
  static const Throat = IriTerm.prevalidated('https://schema.org/Throat');

  /// IRI for schema:Thursday
  ///
  /// The day of the week between Wednesday and Friday.
  ///
  static const Thursday = IriTerm.prevalidated('https://schema.org/Thursday');

  /// IRI for schema:TierBenefitLoyaltyPoints
  ///
  /// Benefit of the tier is earning of loyalty points.
  ///
  static const TierBenefitLoyaltyPoints = IriTerm.prevalidated(
    'https://schema.org/TierBenefitLoyaltyPoints',
  );

  /// IRI for schema:TierBenefitLoyaltyPrice
  ///
  /// Benefit of the tier is a members-only price.
  ///
  static const TierBenefitLoyaltyPrice = IriTerm.prevalidated(
    'https://schema.org/TierBenefitLoyaltyPrice',
  );

  /// IRI for schema:TierBenefitLoyaltyReturns
  ///
  /// Benefit of the tier is members-only returns, for example free unlimited returns.
  ///
  static const TierBenefitLoyaltyReturns = IriTerm.prevalidated(
    'https://schema.org/TierBenefitLoyaltyReturns',
  );

  /// IRI for schema:TierBenefitLoyaltyShipping
  ///
  /// Benefit of the tier is a members-only shipping price or speed (for example free shipping or 1-day shipping).
  ///
  static const TierBenefitLoyaltyShipping = IriTerm.prevalidated(
    'https://schema.org/TierBenefitLoyaltyShipping',
  );

  /// IRI for schema:TobaccoNicotineConsideration
  ///
  /// Item contains tobacco and/or nicotine, for example cigars, cigarettes, chewing tobacco, e-cigarettes, or hookahs.
  ///
  static const TobaccoNicotineConsideration = IriTerm.prevalidated(
    'https://schema.org/TobaccoNicotineConsideration',
  );

  /// IRI for schema:TollFree
  ///
  /// The associated telephone number is toll free.
  ///
  static const TollFree = IriTerm.prevalidated('https://schema.org/TollFree');

  /// IRI for schema:Toxicologic
  ///
  /// A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.
  ///
  static const Toxicologic = IriTerm.prevalidated(
    'https://schema.org/Toxicologic',
  );

  /// IRI for schema:TraditionalChinese
  ///
  /// A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.
  ///
  static const TraditionalChinese = IriTerm.prevalidated(
    'https://schema.org/TraditionalChinese',
  );

  /// IRI for schema:TrainedAlgorithmicMediaDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/trainedAlgorithmicMedia">trained algorithmic media</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const TrainedAlgorithmicMediaDigitalSource = IriTerm.prevalidated(
    'https://schema.org/TrainedAlgorithmicMediaDigitalSource',
  );

  /// IRI for schema:TransformedContent
  ///
  /// Content coded 'transformed content' in a {[MediaReview]}, considered in the context of how it was published or shared.
  ///
  /// For a {[VideoObject]} to be 'transformed content':  or all of the video has been manipulated to transform the footage itself. This category includes using tools like the Adobe Suite to change the speed of the video, add or remove visual elements or dub audio. Deepfakes are also a subset of transformation.
  ///
  /// For an {[ImageObject]} to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.
  ///
  /// For an {[ImageObject]} with embedded text to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.
  ///
  /// For an {[AudioObject]} to be 'transformed content': Part or all of the audio has been manipulated to alter the words or sounds, or the audio has been synthetically generated, such as to create a sound-alike voice.
  ///
  ///
  static const TransformedContent = IriTerm.prevalidated(
    'https://schema.org/TransformedContent',
  );

  /// IRI for schema:TransitMap
  ///
  /// A transit map.
  ///
  static const TransitMap = IriTerm.prevalidated(
    'https://schema.org/TransitMap',
  );

  /// IRI for schema:TreatmentsHealthAspect
  ///
  /// Treatments or related therapies for a Topic.
  ///
  static const TreatmentsHealthAspect = IriTerm.prevalidated(
    'https://schema.org/TreatmentsHealthAspect',
  );

  /// IRI for schema:TripleBlindedTrial
  ///
  /// A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.
  ///
  static const TripleBlindedTrial = IriTerm.prevalidated(
    'https://schema.org/TripleBlindedTrial',
  );

  /// IRI for schema:True
  ///
  /// The boolean value true.
  ///
  static const True = IriTerm.prevalidated('https://schema.org/True');

  /// IRI for schema:Tuesday
  ///
  /// The day of the week between Monday and Wednesday.
  ///
  static const Tuesday = IriTerm.prevalidated('https://schema.org/Tuesday');

  /// IRI for schema:TypesHealthAspect
  ///
  /// Categorization and other types related to a topic.
  ///
  static const TypesHealthAspect = IriTerm.prevalidated(
    'https://schema.org/TypesHealthAspect',
  );

  /// IRI for schema:UKTrust
  ///
  /// UKTrust: Non-profit type referring to a UK trust.
  ///
  static const UKTrust = IriTerm.prevalidated('https://schema.org/UKTrust');

  /// IRI for schema:Ultrasound
  ///
  /// Ultrasound imaging.
  ///
  static const Ultrasound = IriTerm.prevalidated(
    'https://schema.org/Ultrasound',
  );

  /// IRI for schema:UnclassifiedAdultConsideration
  ///
  /// The item is suitable only for adults, without indicating why. Due to widespread use of "adult" as a euphemism for "sexual", many such items are likely suited also for the SexualContentConsideration code.
  ///
  static const UnclassifiedAdultConsideration = IriTerm.prevalidated(
    'https://schema.org/UnclassifiedAdultConsideration',
  );

  /// IRI for schema:UnemploymentSupport
  ///
  /// UnemploymentSupport: this is a benefit for unemployment support.
  ///
  static const UnemploymentSupport = IriTerm.prevalidated(
    'https://schema.org/UnemploymentSupport',
  );

  /// IRI for schema:UnincorporatedAssociationCharity
  ///
  /// UnincorporatedAssociationCharity: Non-profit type referring to a charitable company that is not incorporated (UK).
  ///
  static const UnincorporatedAssociationCharity = IriTerm.prevalidated(
    'https://schema.org/UnincorporatedAssociationCharity',
  );

  /// IRI for schema:UnofficialLegalValue
  ///
  /// Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).
  ///
  static const UnofficialLegalValue = IriTerm.prevalidated(
    'https://schema.org/UnofficialLegalValue',
  );

  /// IRI for schema:Urologic
  ///
  /// A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.
  ///
  static const Urologic = IriTerm.prevalidated('https://schema.org/Urologic');

  /// IRI for schema:UsageOrScheduleHealthAspect
  ///
  /// Content about how, when, frequency and dosage of a topic.
  ///
  static const UsageOrScheduleHealthAspect = IriTerm.prevalidated(
    'https://schema.org/UsageOrScheduleHealthAspect',
  );

  /// IRI for schema:UsedCondition
  ///
  /// Indicates that the item is used.
  ///
  static const UsedCondition = IriTerm.prevalidated(
    'https://schema.org/UsedCondition',
  );

  /// IRI for schema:VeganDiet
  ///
  /// A diet exclusive of all animal products.
  ///
  static const VeganDiet = IriTerm.prevalidated('https://schema.org/VeganDiet');

  /// IRI for schema:VegetarianDiet
  ///
  /// A diet exclusive of animal meat.
  ///
  static const VegetarianDiet = IriTerm.prevalidated(
    'https://schema.org/VegetarianDiet',
  );

  /// IRI for schema:VenueMap
  ///
  /// A venue map (e.g. for malls, auditoriums, museums, etc.).
  ///
  static const VenueMap = IriTerm.prevalidated('https://schema.org/VenueMap');

  /// IRI for schema:VinylFormat
  ///
  /// VinylFormat.
  ///
  static const VinylFormat = IriTerm.prevalidated(
    'https://schema.org/VinylFormat',
  );

  /// IRI for schema:ViolenceConsideration
  ///
  /// Item shows or promotes violence.
  ///
  static const ViolenceConsideration = IriTerm.prevalidated(
    'https://schema.org/ViolenceConsideration',
  );

  /// IRI for schema:VirtualRecordingDigitalSource
  ///
  /// Content coded as '<a href="https://cv.iptc.org/newscodes/digitalsourcetype/virtualRecording">virtual recording</a>' using the IPTC <a href="https://cv.iptc.org/newscodes/digitalsourcetype/">digital source type</a> vocabulary.
  ///
  static const VirtualRecordingDigitalSource = IriTerm.prevalidated(
    'https://schema.org/VirtualRecordingDigitalSource',
  );

  /// IRI for schema:Virus
  ///
  /// Pathogenic virus that causes viral infection.
  ///
  static const Virus = IriTerm.prevalidated('https://schema.org/Virus');

  /// IRI for schema:WeaponConsideration
  ///
  /// The item is intended to induce bodily harm, for example guns, mace, combat knives, brass knuckles, nail or other bombs, and spears.
  ///
  static const WeaponConsideration = IriTerm.prevalidated(
    'https://schema.org/WeaponConsideration',
  );

  /// IRI for schema:WearableMeasurementBack
  ///
  /// Measurement of the back section, for example of a jacket.
  ///
  static const WearableMeasurementBack = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementBack',
  );

  /// IRI for schema:WearableMeasurementChestOrBust
  ///
  /// Measurement of the chest/bust section, for example of a suit.
  ///
  static const WearableMeasurementChestOrBust = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementChestOrBust',
  );

  /// IRI for schema:WearableMeasurementCollar
  ///
  /// Measurement of the collar, for example of a shirt.
  ///
  static const WearableMeasurementCollar = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementCollar',
  );

  /// IRI for schema:WearableMeasurementCup
  ///
  /// Measurement of the cup, for example of a bra.
  ///
  static const WearableMeasurementCup = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementCup',
  );

  /// IRI for schema:WearableMeasurementHeight
  ///
  /// Measurement of the height, for example the heel height of a shoe.
  ///
  static const WearableMeasurementHeight = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementHeight',
  );

  /// IRI for schema:WearableMeasurementHips
  ///
  /// Measurement of the hip section, for example of a skirt.
  ///
  static const WearableMeasurementHips = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementHips',
  );

  /// IRI for schema:WearableMeasurementInseam
  ///
  /// Measurement of the inseam, for example of pants.
  ///
  static const WearableMeasurementInseam = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementInseam',
  );

  /// IRI for schema:WearableMeasurementLength
  ///
  /// Represents the length, for example of a dress.
  ///
  static const WearableMeasurementLength = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementLength',
  );

  /// IRI for schema:WearableMeasurementOutsideLeg
  ///
  /// Measurement of the outside leg, for example of pants.
  ///
  static const WearableMeasurementOutsideLeg = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementOutsideLeg',
  );

  /// IRI for schema:WearableMeasurementSleeve
  ///
  /// Measurement of the sleeve length, for example of a shirt.
  ///
  static const WearableMeasurementSleeve = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementSleeve',
  );

  /// IRI for schema:WearableMeasurementWaist
  ///
  /// Measurement of the waist section, for example of pants.
  ///
  static const WearableMeasurementWaist = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementWaist',
  );

  /// IRI for schema:WearableMeasurementWidth
  ///
  /// Measurement of the width, for example of shoes.
  ///
  static const WearableMeasurementWidth = IriTerm.prevalidated(
    'https://schema.org/WearableMeasurementWidth',
  );

  /// IRI for schema:WearableSizeGroupBig
  ///
  /// Size group "Big" for wearables.
  ///
  static const WearableSizeGroupBig = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupBig',
  );

  /// IRI for schema:WearableSizeGroupBoys
  ///
  /// Size group "Boys" for wearables.
  ///
  static const WearableSizeGroupBoys = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupBoys',
  );

  /// IRI for schema:WearableSizeGroupExtraShort
  ///
  /// Size group "Extra Short" for wearables.
  ///
  static const WearableSizeGroupExtraShort = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupExtraShort',
  );

  /// IRI for schema:WearableSizeGroupExtraTall
  ///
  /// Size group "Extra Tall" for wearables.
  ///
  static const WearableSizeGroupExtraTall = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupExtraTall',
  );

  /// IRI for schema:WearableSizeGroupGirls
  ///
  /// Size group "Girls" for wearables.
  ///
  static const WearableSizeGroupGirls = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupGirls',
  );

  /// IRI for schema:WearableSizeGroupHusky
  ///
  /// Size group "Husky" (or "Stocky") for wearables.
  ///
  static const WearableSizeGroupHusky = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupHusky',
  );

  /// IRI for schema:WearableSizeGroupInfants
  ///
  /// Size group "Infants" for wearables.
  ///
  static const WearableSizeGroupInfants = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupInfants',
  );

  /// IRI for schema:WearableSizeGroupJuniors
  ///
  /// Size group "Juniors" for wearables.
  ///
  static const WearableSizeGroupJuniors = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupJuniors',
  );

  /// IRI for schema:WearableSizeGroupMaternity
  ///
  /// Size group "Maternity" for wearables.
  ///
  static const WearableSizeGroupMaternity = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupMaternity',
  );

  /// IRI for schema:WearableSizeGroupMens
  ///
  /// Size group "Mens" for wearables.
  ///
  static const WearableSizeGroupMens = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupMens',
  );

  /// IRI for schema:WearableSizeGroupMisses
  ///
  /// Size group "Misses" (also known as "Missy") for wearables.
  ///
  static const WearableSizeGroupMisses = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupMisses',
  );

  /// IRI for schema:WearableSizeGroupPetite
  ///
  /// Size group "Petite" for wearables.
  ///
  static const WearableSizeGroupPetite = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupPetite',
  );

  /// IRI for schema:WearableSizeGroupPlus
  ///
  /// Size group "Plus" for wearables.
  ///
  static const WearableSizeGroupPlus = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupPlus',
  );

  /// IRI for schema:WearableSizeGroupRegular
  ///
  /// Size group "Regular" for wearables.
  ///
  static const WearableSizeGroupRegular = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupRegular',
  );

  /// IRI for schema:WearableSizeGroupShort
  ///
  /// Size group "Short" for wearables.
  ///
  static const WearableSizeGroupShort = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupShort',
  );

  /// IRI for schema:WearableSizeGroupTall
  ///
  /// Size group "Tall" for wearables.
  ///
  static const WearableSizeGroupTall = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupTall',
  );

  /// IRI for schema:WearableSizeGroupWomens
  ///
  /// Size group "Womens" for wearables.
  ///
  static const WearableSizeGroupWomens = IriTerm.prevalidated(
    'https://schema.org/WearableSizeGroupWomens',
  );

  /// IRI for schema:WearableSizeSystemAU
  ///
  /// Australian size system for wearables.
  ///
  static const WearableSizeSystemAU = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemAU',
  );

  /// IRI for schema:WearableSizeSystemBR
  ///
  /// Brazilian size system for wearables.
  ///
  static const WearableSizeSystemBR = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemBR',
  );

  /// IRI for schema:WearableSizeSystemCN
  ///
  /// Chinese size system for wearables.
  ///
  static const WearableSizeSystemCN = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemCN',
  );

  /// IRI for schema:WearableSizeSystemContinental
  ///
  /// Continental size system for wearables.
  ///
  static const WearableSizeSystemContinental = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemContinental',
  );

  /// IRI for schema:WearableSizeSystemDE
  ///
  /// German size system for wearables.
  ///
  static const WearableSizeSystemDE = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemDE',
  );

  /// IRI for schema:WearableSizeSystemEN13402
  ///
  /// EN 13402 (joint European standard for size labelling of clothes).
  ///
  static const WearableSizeSystemEN13402 = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemEN13402',
  );

  /// IRI for schema:WearableSizeSystemEurope
  ///
  /// European size system for wearables.
  ///
  static const WearableSizeSystemEurope = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemEurope',
  );

  /// IRI for schema:WearableSizeSystemFR
  ///
  /// French size system for wearables.
  ///
  static const WearableSizeSystemFR = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemFR',
  );

  /// IRI for schema:WearableSizeSystemGS1
  ///
  /// GS1 (formerly NRF) size system for wearables.
  ///
  static const WearableSizeSystemGS1 = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemGS1',
  );

  /// IRI for schema:WearableSizeSystemIT
  ///
  /// Italian size system for wearables.
  ///
  static const WearableSizeSystemIT = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemIT',
  );

  /// IRI for schema:WearableSizeSystemJP
  ///
  /// Japanese size system for wearables.
  ///
  static const WearableSizeSystemJP = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemJP',
  );

  /// IRI for schema:WearableSizeSystemMX
  ///
  /// Mexican size system for wearables.
  ///
  static const WearableSizeSystemMX = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemMX',
  );

  /// IRI for schema:WearableSizeSystemUK
  ///
  /// United Kingdom size system for wearables.
  ///
  static const WearableSizeSystemUK = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemUK',
  );

  /// IRI for schema:WearableSizeSystemUS
  ///
  /// United States size system for wearables.
  ///
  static const WearableSizeSystemUS = IriTerm.prevalidated(
    'https://schema.org/WearableSizeSystemUS',
  );

  /// IRI for schema:Wednesday
  ///
  /// The day of the week between Tuesday and Thursday.
  ///
  static const Wednesday = IriTerm.prevalidated('https://schema.org/Wednesday');

  /// IRI for schema:WesternConventional
  ///
  /// The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.
  ///
  static const WesternConventional = IriTerm.prevalidated(
    'https://schema.org/WesternConventional',
  );

  /// IRI for schema:Wholesale
  ///
  /// The drug's cost represents the wholesale acquisition cost of the drug.
  ///
  static const Wholesale = IriTerm.prevalidated('https://schema.org/Wholesale');

  /// IRI for schema:Withdrawn
  ///
  /// Withdrawn.
  ///
  static const Withdrawn = IriTerm.prevalidated('https://schema.org/Withdrawn');

  /// IRI for schema:WritePermission
  ///
  /// Permission to write or edit the document.
  ///
  static const WritePermission = IriTerm.prevalidated(
    'https://schema.org/WritePermission',
  );

  /// IRI for schema:XRay
  ///
  /// X-ray imaging.
  ///
  static const XRay = IriTerm.prevalidated('https://schema.org/XRay');

  /// IRI for schema:ZoneBoardingPolicy
  ///
  /// The airline boards by zones of the plane.
  ///
  static const ZoneBoardingPolicy = IriTerm.prevalidated(
    'https://schema.org/ZoneBoardingPolicy',
  );

  /// IRI for schema:docs_collab_STI_Accommodation_Ontology
  ///
  ///
  ///
  static const docs_collab_STI_Accommodation_Ontology = IriTerm.prevalidated(
    'https://schema.org/docs/collab/STI_Accommodation_Ontology',
  );

  /// IRI for schema:docs_collab_ActionCollabClass
  ///
  ///
  ///
  static const docs_collab_ActionCollabClass = IriTerm.prevalidated(
    'https://schema.org/docs/collab/ActionCollabClass',
  );

  /// IRI for schema:docs_collab_TP
  ///
  ///
  ///
  static const docs_collab_TP = IriTerm.prevalidated(
    'https://schema.org/docs/collab/TP',
  );

  /// IRI for schema:docs_collab_LRMIClass
  ///
  ///
  ///
  static const docs_collab_LRMIClass = IriTerm.prevalidated(
    'https://schema.org/docs/collab/LRMIClass',
  );

  /// IRI for schema:docs_collab_QAStackExchange
  ///
  ///
  ///
  static const docs_collab_QAStackExchange = IriTerm.prevalidated(
    'https://schema.org/docs/collab/QAStackExchange',
  );

  /// IRI for schema:docs_collab_rNews
  ///
  ///
  ///
  static const docs_collab_rNews = IriTerm.prevalidated(
    'https://schema.org/docs/collab/rNews',
  );

  /// IRI for schema:docs_collab_FIBO
  ///
  ///
  ///
  static const docs_collab_FIBO = IriTerm.prevalidated(
    'https://schema.org/docs/collab/FIBO',
  );

  /// IRI for schema:docs_collab_GoodRelationsClass
  ///
  ///
  ///
  static const docs_collab_GoodRelationsClass = IriTerm.prevalidated(
    'https://schema.org/docs/collab/GoodRelationsClass',
  );

  /// IRI for schema:docs_collab_Automotive_Ontology_Working_Group
  ///
  ///
  ///
  static const docs_collab_Automotive_Ontology_Working_Group =
      IriTerm.prevalidated(
        'https://schema.org/docs/collab/Automotive_Ontology_Working_Group',
      );

  /// IRI for schema:docs_collab_DatasetClass
  ///
  ///
  ///
  static const docs_collab_DatasetClass = IriTerm.prevalidated(
    'https://schema.org/docs/collab/DatasetClass',
  );

  /// IRI for schema:docs_collab_FundInfoCollab
  ///
  ///
  ///
  static const docs_collab_FundInfoCollab = IriTerm.prevalidated(
    'https://schema.org/docs/collab/FundInfoCollab',
  );

  /// IRI for schema:docs_collab_ELI
  ///
  ///
  ///
  static const docs_collab_ELI = IriTerm.prevalidated(
    'https://schema.org/docs/collab/ELI',
  );

  /// IRI for schema:docs_collab_WikiDoc
  ///
  ///
  ///
  static const docs_collab_WikiDoc = IriTerm.prevalidated(
    'https://schema.org/docs/collab/WikiDoc',
  );

  /// IRI for schema:docs_collab_MBZ
  ///
  ///
  ///
  static const docs_collab_MBZ = IriTerm.prevalidated(
    'https://schema.org/docs/collab/MBZ',
  );

  /// IRI for schema:docs_collab_GoodRelationsTerms
  ///
  ///
  ///
  static const docs_collab_GoodRelationsTerms = IriTerm.prevalidated(
    'https://schema.org/docs/collab/GoodRelationsTerms',
  );

  /// IRI for schema:docs_collab_bibex
  ///
  ///
  ///
  static const docs_collab_bibex = IriTerm.prevalidated(
    'https://schema.org/docs/collab/bibex',
  );

  /// IRI for schema:docs_collab_IIT_CNR_it
  ///
  ///
  ///
  static const docs_collab_IIT_CNR_it = IriTerm.prevalidated(
    'https://schema.org/docs/collab/IIT-CNR.it',
  );

  /// IRI for schema:docs_collab_Tourism
  ///
  ///
  ///
  static const docs_collab_Tourism = IriTerm.prevalidated(
    'https://schema.org/docs/collab/Tourism',
  );

  /// IRI for schema:DeliveryTimeSettings
  ///
  ///
  ///
  static const DeliveryTimeSettings = IriTerm.prevalidated(
    'https://schema.org/DeliveryTimeSettings',
  );

  /// IRI for schema:docs_collab_GLEIF
  ///
  ///
  ///
  static const docs_collab_GLEIF = IriTerm.prevalidated(
    'https://schema.org/docs/collab/GLEIF',
  );

  /// IRI for schema:abridged [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether the book is an abridged edition.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const abridged = IriTerm.prevalidated('https://schema.org/abridged');

  /// IRI for schema:abstract_ [Expects: https://schema.org/Text]
  ///
  /// An abstract is a short description that summarizes a {[CreativeWork]}.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const abstract_ = IriTerm.prevalidated('https://schema.org/abstract');

  /// IRI for schema:accelerationTime [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\n\nTypical unit code(s): SEC for seconds\n\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the {[name]} of the {[QuantitativeValue]}, or use {[valueReference]} with a {[QuantitativeValue]} of 0..60 mph or 0..100 km/h to specify the reference speeds.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const accelerationTime = IriTerm.prevalidated(
    'https://schema.org/accelerationTime',
  );

  /// IRI for schema:acceptedAnswer [Expects: https://schema.org/Answer, https://schema.org/ItemList]
  ///
  /// The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
  ///
  /// Can be used on: https://schema.org/Question
  ///
  static const acceptedAnswer = IriTerm.prevalidated(
    'https://schema.org/acceptedAnswer',
  );

  /// IRI for schema:acceptedOffer [Expects: https://schema.org/Offer]
  ///
  /// The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const acceptedOffer = IriTerm.prevalidated(
    'https://schema.org/acceptedOffer',
  );

  /// IRI for schema:acceptedPaymentMethod [Expects: https://schema.org/LoanOrCredit, https://schema.org/PaymentMethod, https://schema.org/Text]
  ///
  /// The payment method(s) that are accepted in general by an organization, or for some specific demand or offer.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Organization
  ///
  static const acceptedPaymentMethod = IriTerm.prevalidated(
    'https://schema.org/acceptedPaymentMethod',
  );

  /// IRI for schema:acceptsReservations [Expects: https://schema.org/Boolean, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
  ///
  /// Can be used on: https://schema.org/FoodEstablishment
  ///
  static const acceptsReservations = IriTerm.prevalidated(
    'https://schema.org/acceptsReservations',
  );

  /// IRI for schema:accessCode [Expects: https://schema.org/Text]
  ///
  /// Password, PIN, or access code needed for delivery (e.g. from a locker).
  ///
  /// Can be used on: https://schema.org/DeliveryEvent
  ///
  static const accessCode = IriTerm.prevalidated(
    'https://schema.org/accessCode',
  );

  /// IRI for schema:accessMode [Expects: https://schema.org/Text]
  ///
  /// The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessMode = IriTerm.prevalidated(
    'https://schema.org/accessMode',
  );

  /// IRI for schema:accessModeSufficient [Expects: https://schema.org/ItemList]
  ///
  /// A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessModeSufficient = IriTerm.prevalidated(
    'https://schema.org/accessModeSufficient',
  );

  /// IRI for schema:accessibilityAPI [Expects: https://schema.org/Text]
  ///
  /// Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessibilityAPI = IriTerm.prevalidated(
    'https://schema.org/accessibilityAPI',
  );

  /// IRI for schema:accessibilityControl [Expects: https://schema.org/Text]
  ///
  /// Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessibilityControl = IriTerm.prevalidated(
    'https://schema.org/accessibilityControl',
  );

  /// IRI for schema:accessibilityFeature [Expects: https://schema.org/Text]
  ///
  /// Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessibilityFeature = IriTerm.prevalidated(
    'https://schema.org/accessibilityFeature',
  );

  /// IRI for schema:accessibilityHazard [Expects: https://schema.org/Text]
  ///
  /// A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessibilityHazard = IriTerm.prevalidated(
    'https://schema.org/accessibilityHazard',
  );

  /// IRI for schema:accessibilitySummary [Expects: https://schema.org/Text]
  ///
  /// A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed".
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accessibilitySummary = IriTerm.prevalidated(
    'https://schema.org/accessibilitySummary',
  );

  /// IRI for schema:accommodationCategory [Expects: https://schema.org/Text]
  ///
  /// Category of an {[Accommodation]}, following real estate conventions, e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).
  ///
  /// Can be used on: https://schema.org/Accommodation
  ///
  static const accommodationCategory = IriTerm.prevalidated(
    'https://schema.org/accommodationCategory',
  );

  /// IRI for schema:accommodationFloorPlan [Expects: https://schema.org/FloorPlan]
  ///
  /// A floorplan of some {[Accommodation]}.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/Residence
  ///
  static const accommodationFloorPlan = IriTerm.prevalidated(
    'https://schema.org/accommodationFloorPlan',
  );

  /// IRI for schema:accountId [Expects: https://schema.org/Text]
  ///
  /// The identifier for the account the payment will be applied to.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const accountId = IriTerm.prevalidated('https://schema.org/accountId');

  /// IRI for schema:accountMinimumInflow [Expects: https://schema.org/MonetaryAmount]
  ///
  /// A minimum amount that has to be paid in every month.
  ///
  /// Can be used on: https://schema.org/BankAccount
  ///
  static const accountMinimumInflow = IriTerm.prevalidated(
    'https://schema.org/accountMinimumInflow',
  );

  /// IRI for schema:accountOverdraftLimit [Expects: https://schema.org/MonetaryAmount]
  ///
  /// An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.
  ///
  /// Can be used on: https://schema.org/BankAccount
  ///
  static const accountOverdraftLimit = IriTerm.prevalidated(
    'https://schema.org/accountOverdraftLimit',
  );

  /// IRI for schema:accountablePerson [Expects: https://schema.org/Person]
  ///
  /// Specifies the Person that is legally accountable for the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const accountablePerson = IriTerm.prevalidated(
    'https://schema.org/accountablePerson',
  );

  /// IRI for schema:acquireLicensePage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const acquireLicensePage = IriTerm.prevalidated(
    'https://schema.org/acquireLicensePage',
  );

  /// IRI for schema:acquiredFrom [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The organization or person from which the product was acquired.
  ///
  /// Can be used on: https://schema.org/OwnershipInfo
  ///
  static const acquiredFrom = IriTerm.prevalidated(
    'https://schema.org/acquiredFrom',
  );

  /// IRI for schema:acrissCode [Expects: https://schema.org/Text]
  ///
  /// The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.
  ///
  /// Can be used on: https://schema.org/BusOrCoach, https://schema.org/Car
  ///
  static const acrissCode = IriTerm.prevalidated(
    'https://schema.org/acrissCode',
  );

  /// IRI for schema:actionAccessibilityRequirement [Expects: https://schema.org/ActionAccessSpecification]
  ///
  /// A set of requirements that must be fulfilled in order to perform an Action. If more than one value is specified, fulfilling one set of requirements will allow the Action to be performed.
  ///
  /// Can be used on: https://schema.org/ConsumeAction
  ///
  static const actionAccessibilityRequirement = IriTerm.prevalidated(
    'https://schema.org/actionAccessibilityRequirement',
  );

  /// IRI for schema:actionPlatform [Expects: https://schema.org/DigitalPlatformEnumeration, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const actionPlatform = IriTerm.prevalidated(
    'https://schema.org/actionPlatform',
  );

  /// IRI for schema:actionProcess [Expects: https://schema.org/HowTo]
  ///
  /// Description of the process by which the action was performed.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const actionProcess = IriTerm.prevalidated(
    'https://schema.org/actionProcess',
  );

  /// IRI for schema:actionStatus [Expects: https://schema.org/ActionStatusType]
  ///
  /// Indicates the current disposition of the Action.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const actionStatus = IriTerm.prevalidated(
    'https://schema.org/actionStatus',
  );

  /// IRI for schema:actionableFeedbackPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For a {[NewsMediaOrganization]} or other news-related {[Organization]}, a statement about public engagement activities (for news media, the newsroom‚Äôs), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const actionableFeedbackPolicy = IriTerm.prevalidated(
    'https://schema.org/actionableFeedbackPolicy',
  );

  /// IRI for schema:activeIngredient [Expects: https://schema.org/Text]
  ///
  /// An active ingredient, typically chemical compounds and/or biologic substances.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug, https://schema.org/DrugStrength, https://schema.org/Substance
  ///
  static const activeIngredient = IriTerm.prevalidated(
    'https://schema.org/activeIngredient',
  );

  /// IRI for schema:activityDuration [Expects: https://schema.org/Duration, https://schema.org/QuantitativeValue]
  ///
  /// Length of time to engage in the activity.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const activityDuration = IriTerm.prevalidated(
    'https://schema.org/activityDuration',
  );

  /// IRI for schema:activityFrequency [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// How often one should engage in the activity.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const activityFrequency = IriTerm.prevalidated(
    'https://schema.org/activityFrequency',
  );

  /// IRI for schema:actors [Expects: https://schema.org/Person]
  ///
  /// An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/Episode, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const actors = IriTerm.prevalidated('https://schema.org/actors');

  /// IRI for schema:addOn [Expects: https://schema.org/Offer]
  ///
  /// An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
  ///
  /// Can be used on: https://schema.org/Offer
  ///
  static const addOn = IriTerm.prevalidated('https://schema.org/addOn');

  /// IRI for schema:additionalName [Expects: https://schema.org/Text]
  ///
  /// An additional name for a Person, can be used for a middle name.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const additionalName = IriTerm.prevalidated(
    'https://schema.org/additionalName',
  );

  /// IRI for schema:additionalNumberOfGuests [Expects: https://schema.org/Number]
  ///
  /// If responding yes, the number of guests who will attend in addition to the invitee.
  ///
  /// Can be used on: https://schema.org/RsvpAction
  ///
  static const additionalNumberOfGuests = IriTerm.prevalidated(
    'https://schema.org/additionalNumberOfGuests',
  );

  /// IRI for schema:additionalProperty [Expects: https://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Place, https://schema.org/Product, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'https://schema.org/additionalProperty',
  );

  /// IRI for schema:additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// IRI for schema:additionalVariable [Expects: https://schema.org/Text]
  ///
  /// Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const additionalVariable = IriTerm.prevalidated(
    'https://schema.org/additionalVariable',
  );

  /// IRI for schema:address [Expects: https://schema.org/PostalAddress, https://schema.org/Text]
  ///
  /// Physical address of the item.
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/GeoShape, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const address = IriTerm.prevalidated('https://schema.org/address');

  /// IRI for schema:addressCountry [Expects: https://schema.org/Country, https://schema.org/Text]
  ///
  /// The country. Recommended to be in 2-letter [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1) format, for example "US". For backward compatibility, a 3-letter [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code such as "SGP" or a full country name such as "Singapore" can also be used.
  ///
  /// Can be used on: https://schema.org/DefinedRegion, https://schema.org/GeoCoordinates, https://schema.org/GeoShape, https://schema.org/PostalAddress
  ///
  static const addressCountry = IriTerm.prevalidated(
    'https://schema.org/addressCountry',
  );

  /// IRI for schema:addressLocality [Expects: https://schema.org/Text]
  ///
  /// The locality in which the street address is, and which is in the region. For example, Mountain View.
  ///
  /// Can be used on: https://schema.org/PostalAddress
  ///
  static const addressLocality = IriTerm.prevalidated(
    'https://schema.org/addressLocality',
  );

  /// IRI for schema:addressRegion [Expects: https://schema.org/Text]
  ///
  /// The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).
  ///
  /// Can be used on: https://schema.org/DefinedRegion, https://schema.org/PostalAddress
  ///
  static const addressRegion = IriTerm.prevalidated(
    'https://schema.org/addressRegion',
  );

  /// IRI for schema:administrationRoute [Expects: https://schema.org/Text]
  ///
  /// A route by which this drug may be administered, e.g. 'oral'.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const administrationRoute = IriTerm.prevalidated(
    'https://schema.org/administrationRoute',
  );

  /// IRI for schema:advanceBookingRequirement [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The amount of time that is required between accepting the offer and the actual usage of the resource or service.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const advanceBookingRequirement = IriTerm.prevalidated(
    'https://schema.org/advanceBookingRequirement',
  );

  /// IRI for schema:adverseOutcome [Expects: https://schema.org/MedicalEntity]
  ///
  /// A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or otherwise life-threatening or requiring immediate medical attention), tag it as a seriousAdverseOutcome instead.
  ///
  /// Can be used on: https://schema.org/MedicalDevice, https://schema.org/TherapeuticProcedure
  ///
  static const adverseOutcome = IriTerm.prevalidated(
    'https://schema.org/adverseOutcome',
  );

  /// IRI for schema:affectedBy [Expects: https://schema.org/Drug]
  ///
  /// Drugs that affect the test's results.
  ///
  /// Can be used on: https://schema.org/MedicalTest
  ///
  static const affectedBy = IriTerm.prevalidated(
    'https://schema.org/affectedBy',
  );

  /// IRI for schema:affiliation [Expects: https://schema.org/Organization]
  ///
  /// An organization that this person is affiliated with. For example, a school/university, a club, or a team.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const affiliation = IriTerm.prevalidated(
    'https://schema.org/affiliation',
  );

  /// IRI for schema:afterMedia [Expects: https://schema.org/MediaObject, https://schema.org/URL]
  ///
  /// A media object representing the circumstances after performing this direction.
  ///
  /// Can be used on: https://schema.org/HowToDirection
  ///
  static const afterMedia = IriTerm.prevalidated(
    'https://schema.org/afterMedia',
  );

  /// IRI for schema:agent [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The direct performer or driver of the action (animate or inanimate). E.g. *John* wrote a book.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const agent = IriTerm.prevalidated('https://schema.org/agent');

  /// IRI for schema:agentInteractionStatistic [Expects: https://schema.org/InteractionCounter]
  ///
  /// The number of completed interactions for this entity, in a particular role (the 'agent'), in a particular action (indicated in the statistic), and in a particular context (i.e. interactionService).
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const agentInteractionStatistic = IriTerm.prevalidated(
    'https://schema.org/agentInteractionStatistic',
  );

  /// IRI for schema:aggregateElement [Expects: https://schema.org/Thing]
  ///
  /// Indicates a prototype of the elements in the list that is used to hold aggregate information (ratings, offers, etc.).
  ///
  /// Can be used on: https://schema.org/ItemList
  ///
  static const aggregateElement = IriTerm.prevalidated(
    'https://schema.org/aggregateElement',
  );

  /// IRI for schema:aggregateRating [Expects: https://schema.org/AggregateRating]
  ///
  /// The overall rating, based on a collection of reviews or ratings, of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const aggregateRating = IriTerm.prevalidated(
    'https://schema.org/aggregateRating',
  );

  /// IRI for schema:aircraft [Expects: https://schema.org/Text, https://schema.org/Vehicle]
  ///
  /// The kind of aircraft (e.g., "Boeing 747").
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const aircraft = IriTerm.prevalidated('https://schema.org/aircraft');

  /// IRI for schema:albumProductionType [Expects: https://schema.org/MusicAlbumProductionType]
  ///
  /// Classification of the album by its type of content: soundtrack, live album, studio album, etc.
  ///
  /// Can be used on: https://schema.org/MusicAlbum
  ///
  static const albumProductionType = IriTerm.prevalidated(
    'https://schema.org/albumProductionType',
  );

  /// IRI for schema:albumReleaseType [Expects: https://schema.org/MusicAlbumReleaseType]
  ///
  /// The kind of release which this album is: single, EP or album.
  ///
  /// Can be used on: https://schema.org/MusicAlbum
  ///
  static const albumReleaseType = IriTerm.prevalidated(
    'https://schema.org/albumReleaseType',
  );

  /// IRI for schema:albums [Expects: https://schema.org/MusicAlbum]
  ///
  /// A collection of music albums.
  ///
  /// Can be used on: https://schema.org/MusicGroup
  ///
  static const albums = IriTerm.prevalidated('https://schema.org/albums');

  /// IRI for schema:alcoholWarning [Expects: https://schema.org/Text]
  ///
  /// Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const alcoholWarning = IriTerm.prevalidated(
    'https://schema.org/alcoholWarning',
  );

  /// IRI for schema:algorithm [Expects: https://schema.org/Text]
  ///
  /// The algorithm or rules to follow to compute the score.
  ///
  /// Can be used on: https://schema.org/MedicalRiskScore
  ///
  static const algorithm = IriTerm.prevalidated('https://schema.org/algorithm');

  /// IRI for schema:alignmentType [Expects: https://schema.org/Text]
  ///
  /// A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.
  ///
  /// Can be used on: https://schema.org/AlignmentObject
  ///
  static const alignmentType = IriTerm.prevalidated(
    'https://schema.org/alignmentType',
  );

  /// IRI for schema:alternativeHeadline [Expects: https://schema.org/Text]
  ///
  /// A secondary title of the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const alternativeHeadline = IriTerm.prevalidated(
    'https://schema.org/alternativeHeadline',
  );

  /// IRI for schema:alternativeOf [Expects: https://schema.org/Gene]
  ///
  /// Another gene which is a variation of this one.
  ///
  /// Can be used on: https://schema.org/Gene
  ///
  static const alternativeOf = IriTerm.prevalidated(
    'https://schema.org/alternativeOf',
  );

  /// IRI for schema:amenityFeature [Expects: https://schema.org/LocationFeatureSpecification]
  ///
  /// An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan, https://schema.org/LodgingBusiness, https://schema.org/Place
  ///
  static const amenityFeature = IriTerm.prevalidated(
    'https://schema.org/amenityFeature',
  );

  /// IRI for schema:amount [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// The amount of money.
  ///
  /// Can be used on: https://schema.org/DatedMoneySpecification, https://schema.org/InvestmentOrDeposit, https://schema.org/LoanOrCredit, https://schema.org/MonetaryGrant, https://schema.org/MoneyTransfer
  ///
  static const amount = IriTerm.prevalidated('https://schema.org/amount');

  /// IRI for schema:amountOfThisGood [Expects: https://schema.org/Number]
  ///
  /// The quantity of the goods included in the offer.
  ///
  /// Can be used on: https://schema.org/TypeAndQuantityNode
  ///
  static const amountOfThisGood = IriTerm.prevalidated(
    'https://schema.org/amountOfThisGood',
  );

  /// IRI for schema:announcementLocation [Expects: https://schema.org/CivicStructure, https://schema.org/LocalBusiness]
  ///
  /// Indicates a specific {[CivicStructure]} or {[LocalBusiness]} associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use {[spatialCoverage]}.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const announcementLocation = IriTerm.prevalidated(
    'https://schema.org/announcementLocation',
  );

  /// IRI for schema:annualPercentageRate [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.
  ///
  /// Can be used on: https://schema.org/FinancialProduct
  ///
  static const annualPercentageRate = IriTerm.prevalidated(
    'https://schema.org/annualPercentageRate',
  );

  /// IRI for schema:answerCount [Expects: https://schema.org/Integer]
  ///
  /// The number of answers this question has received.
  ///
  /// Can be used on: https://schema.org/Question
  ///
  static const answerCount = IriTerm.prevalidated(
    'https://schema.org/answerCount',
  );

  /// IRI for schema:answerExplanation [Expects: https://schema.org/Comment, https://schema.org/WebContent]
  ///
  /// A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it.
  ///
  /// Can be used on: https://schema.org/Answer
  ///
  static const answerExplanation = IriTerm.prevalidated(
    'https://schema.org/answerExplanation',
  );

  /// IRI for schema:antagonist [Expects: https://schema.org/Muscle]
  ///
  /// The muscle whose action counteracts the specified muscle.
  ///
  /// Can be used on: https://schema.org/Muscle
  ///
  static const antagonist = IriTerm.prevalidated(
    'https://schema.org/antagonist',
  );

  /// IRI for schema:appearance [Expects: https://schema.org/CreativeWork]
  ///
  /// Indicates an occurrence of a {[Claim]} in some {[CreativeWork]}.
  ///
  /// Can be used on: https://schema.org/Claim
  ///
  static const appearance = IriTerm.prevalidated(
    'https://schema.org/appearance',
  );

  /// IRI for schema:applicableCountry [Expects: https://schema.org/Country, https://schema.org/Text]
  ///
  /// A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const applicableCountry = IriTerm.prevalidated(
    'https://schema.org/applicableCountry',
  );

  /// IRI for schema:applicableLocation [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The location in which the status applies.
  ///
  /// Can be used on: https://schema.org/DrugCost, https://schema.org/DrugLegalStatus
  ///
  static const applicableLocation = IriTerm.prevalidated(
    'https://schema.org/applicableLocation',
  );

  /// IRI for schema:applicantLocationRequirements [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const applicantLocationRequirements = IriTerm.prevalidated(
    'https://schema.org/applicantLocationRequirements',
  );

  /// IRI for schema:application [Expects: https://schema.org/SoftwareApplication]
  ///
  /// An application that can complete the request.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const application = IriTerm.prevalidated(
    'https://schema.org/application',
  );

  /// IRI for schema:applicationCategory [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Type of software application, e.g. 'Game, Multimedia'.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const applicationCategory = IriTerm.prevalidated(
    'https://schema.org/applicationCategory',
  );

  /// IRI for schema:applicationContact [Expects: https://schema.org/ContactPoint]
  ///
  /// Contact details for further information relevant to this job posting.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const applicationContact = IriTerm.prevalidated(
    'https://schema.org/applicationContact',
  );

  /// IRI for schema:applicationDeadline [Expects: https://schema.org/Date, https://schema.org/Text]
  ///
  /// The date on which the program stops collecting applications for the next enrollment cycle. Flexible application deadlines (for example, a program with rolling admissions) can be described in a textual string, rather than as a DateTime.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const applicationDeadline = IriTerm.prevalidated(
    'https://schema.org/applicationDeadline',
  );

  /// IRI for schema:applicationStartDate [Expects: https://schema.org/Date]
  ///
  /// The date at which the program begins collecting applications for the next enrollment cycle.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const applicationStartDate = IriTerm.prevalidated(
    'https://schema.org/applicationStartDate',
  );

  /// IRI for schema:applicationSubCategory [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Subcategory of the application, e.g. 'Arcade Game'.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const applicationSubCategory = IriTerm.prevalidated(
    'https://schema.org/applicationSubCategory',
  );

  /// IRI for schema:applicationSuite [Expects: https://schema.org/Text]
  ///
  /// The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const applicationSuite = IriTerm.prevalidated(
    'https://schema.org/applicationSuite',
  );

  /// IRI for schema:appliesToDeliveryMethod [Expects: https://schema.org/DeliveryMethod]
  ///
  /// The delivery method(s) to which the delivery charge or payment charge specification applies.
  ///
  /// Can be used on: https://schema.org/DeliveryChargeSpecification, https://schema.org/PaymentChargeSpecification
  ///
  static const appliesToDeliveryMethod = IriTerm.prevalidated(
    'https://schema.org/appliesToDeliveryMethod',
  );

  /// IRI for schema:appliesToPaymentMethod [Expects: https://schema.org/PaymentMethod]
  ///
  /// The payment method(s) to which the payment charge specification applies.
  ///
  /// Can be used on: https://schema.org/PaymentChargeSpecification
  ///
  static const appliesToPaymentMethod = IriTerm.prevalidated(
    'https://schema.org/appliesToPaymentMethod',
  );

  /// IRI for schema:archivedAt [Expects: https://schema.org/URL, https://schema.org/WebPage]
  ///
  /// Indicates a page or other link involved in archival of a {[CreativeWork]}. In the case of {[MediaReview]}, the items in a {[MediaReviewItem]} may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const archivedAt = IriTerm.prevalidated(
    'https://schema.org/archivedAt',
  );

  /// IRI for schema:area [Expects: https://schema.org/Place]
  ///
  /// The area within which users can expect to reach the broadcast service.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const area = IriTerm.prevalidated('https://schema.org/area');

  /// IRI for schema:arrivalAirport [Expects: https://schema.org/Airport]
  ///
  /// The airport where the flight terminates.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const arrivalAirport = IriTerm.prevalidated(
    'https://schema.org/arrivalAirport',
  );

  /// IRI for schema:arrivalBoatTerminal [Expects: https://schema.org/BoatTerminal]
  ///
  /// The terminal or port from which the boat arrives.
  ///
  /// Can be used on: https://schema.org/BoatTrip
  ///
  static const arrivalBoatTerminal = IriTerm.prevalidated(
    'https://schema.org/arrivalBoatTerminal',
  );

  /// IRI for schema:arrivalBusStop [Expects: https://schema.org/BusStation, https://schema.org/BusStop]
  ///
  /// The stop or station from which the bus arrives.
  ///
  /// Can be used on: https://schema.org/BusTrip
  ///
  static const arrivalBusStop = IriTerm.prevalidated(
    'https://schema.org/arrivalBusStop',
  );

  /// IRI for schema:arrivalGate [Expects: https://schema.org/Text]
  ///
  /// Identifier of the flight's arrival gate.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const arrivalGate = IriTerm.prevalidated(
    'https://schema.org/arrivalGate',
  );

  /// IRI for schema:arrivalPlatform [Expects: https://schema.org/Text]
  ///
  /// The platform where the train arrives.
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const arrivalPlatform = IriTerm.prevalidated(
    'https://schema.org/arrivalPlatform',
  );

  /// IRI for schema:arrivalStation [Expects: https://schema.org/TrainStation]
  ///
  /// The station where the train trip ends.
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const arrivalStation = IriTerm.prevalidated(
    'https://schema.org/arrivalStation',
  );

  /// IRI for schema:arrivalTerminal [Expects: https://schema.org/Text]
  ///
  /// Identifier of the flight's arrival terminal.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const arrivalTerminal = IriTerm.prevalidated(
    'https://schema.org/arrivalTerminal',
  );

  /// IRI for schema:arrivalTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The expected arrival time.
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const arrivalTime = IriTerm.prevalidated(
    'https://schema.org/arrivalTime',
  );

  /// IRI for schema:artEdition [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20").
  ///
  /// Can be used on: https://schema.org/VisualArtwork
  ///
  static const artEdition = IriTerm.prevalidated(
    'https://schema.org/artEdition',
  );

  /// IRI for schema:artMedium [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)
  ///
  /// Can be used on: https://schema.org/VisualArtwork
  ///
  static const artMedium = IriTerm.prevalidated('https://schema.org/artMedium');

  /// IRI for schema:artform [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.
  ///
  /// Can be used on: https://schema.org/VisualArtwork
  ///
  static const artform = IriTerm.prevalidated('https://schema.org/artform');

  /// IRI for schema:articleBody [Expects: https://schema.org/Text]
  ///
  /// The actual body of the article.
  ///
  /// Can be used on: https://schema.org/Article
  ///
  static const articleBody = IriTerm.prevalidated(
    'https://schema.org/articleBody',
  );

  /// IRI for schema:articleSection [Expects: https://schema.org/Text]
  ///
  /// Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
  ///
  /// Can be used on: https://schema.org/Article
  ///
  static const articleSection = IriTerm.prevalidated(
    'https://schema.org/articleSection',
  );

  /// IRI for schema:artist [Expects: https://schema.org/Person]
  ///
  /// The primary artist for a work
  /// in a medium other than pencils or digital line art--for example, if the
  /// primary artwork is done in watercolors or digital paints.
  ///
  /// Can be used on: https://schema.org/ComicIssue, https://schema.org/ComicStory, https://schema.org/VisualArtwork
  ///
  static const artist = IriTerm.prevalidated('https://schema.org/artist');

  /// IRI for schema:asin [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
  ///
  /// Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
  /// ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const asin = IriTerm.prevalidated('https://schema.org/asin');

  /// IRI for schema:aspect [Expects: https://schema.org/Text]
  ///
  /// An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.
  ///
  /// Can be used on: https://schema.org/MedicalWebPage
  ///
  static const aspect = IriTerm.prevalidated('https://schema.org/aspect');

  /// IRI for schema:assembly [Expects: https://schema.org/Text]
  ///
  /// Library file name, e.g., mscorlib.dll, system.web.dll.
  ///
  /// Can be used on: https://schema.org/APIReference
  ///
  static const assembly = IriTerm.prevalidated('https://schema.org/assembly');

  /// IRI for schema:assemblyVersion [Expects: https://schema.org/Text]
  ///
  /// Associated product/technology version. E.g., .NET Framework 4.5.
  ///
  /// Can be used on: https://schema.org/APIReference
  ///
  static const assemblyVersion = IriTerm.prevalidated(
    'https://schema.org/assemblyVersion',
  );

  /// IRI for schema:assesses [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The item being described is intended to assess the competency or learning outcome defined by the referenced term.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/EducationEvent, https://schema.org/LearningResource
  ///
  static const assesses = IriTerm.prevalidated('https://schema.org/assesses');

  /// IRI for schema:associatedAnatomy [Expects: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem, https://schema.org/SuperficialAnatomy]
  ///
  /// The anatomy of the underlying organ system or structures associated with this entity.
  ///
  /// Can be used on: https://schema.org/MedicalCondition, https://schema.org/PhysicalActivity
  ///
  static const associatedAnatomy = IriTerm.prevalidated(
    'https://schema.org/associatedAnatomy',
  );

  /// IRI for schema:associatedArticle [Expects: https://schema.org/NewsArticle]
  ///
  /// A NewsArticle associated with the Media Object.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const associatedArticle = IriTerm.prevalidated(
    'https://schema.org/associatedArticle',
  );

  /// IRI for schema:associatedClaimReview [Expects: https://schema.org/Review]
  ///
  /// An associated {[ClaimReview]}, related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case {[relatedMediaReview]} would commonly be used on a {[ClaimReview]}, while {[relatedClaimReview]} would be used on {[MediaReview]}.
  ///
  /// Can be used on: https://schema.org/Review
  ///
  static const associatedClaimReview = IriTerm.prevalidated(
    'https://schema.org/associatedClaimReview',
  );

  /// IRI for schema:associatedDisease [Expects: https://schema.org/MedicalCondition, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const associatedDisease = IriTerm.prevalidated(
    'https://schema.org/associatedDisease',
  );

  /// IRI for schema:associatedMedia [Expects: https://schema.org/MediaObject]
  ///
  /// A media object that encodes this CreativeWork. This property is a synonym for encoding.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/HyperToc, https://schema.org/HyperTocEntry
  ///
  static const associatedMedia = IriTerm.prevalidated(
    'https://schema.org/associatedMedia',
  );

  /// IRI for schema:associatedMediaReview [Expects: https://schema.org/Review]
  ///
  /// An associated {[MediaReview]}, related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case {[relatedMediaReview]} would commonly be used on a {[ClaimReview]}, while {[relatedClaimReview]} would be used on {[MediaReview]}.
  ///
  /// Can be used on: https://schema.org/Review
  ///
  static const associatedMediaReview = IriTerm.prevalidated(
    'https://schema.org/associatedMediaReview',
  );

  /// IRI for schema:associatedPathophysiology [Expects: https://schema.org/Text]
  ///
  /// If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem, https://schema.org/SuperficialAnatomy
  ///
  static const associatedPathophysiology = IriTerm.prevalidated(
    'https://schema.org/associatedPathophysiology',
  );

  /// IRI for schema:athlete [Expects: https://schema.org/Person]
  ///
  /// A person that acts as performing member of a sports team; a player as opposed to a coach.
  ///
  /// Can be used on: https://schema.org/SportsTeam
  ///
  static const athlete = IriTerm.prevalidated('https://schema.org/athlete');

  /// IRI for schema:attendees [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person attending the event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const attendees = IriTerm.prevalidated('https://schema.org/attendees');

  /// IRI for schema:audienceType [Expects: https://schema.org/Text]
  ///
  /// The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
  ///
  /// Can be used on: https://schema.org/Audience
  ///
  static const audienceType = IriTerm.prevalidated(
    'https://schema.org/audienceType',
  );

  /// IRI for schema:audio [Expects: https://schema.org/AudioObject, https://schema.org/Clip, https://schema.org/MusicRecording]
  ///
  /// An embedded audio object.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const audio = IriTerm.prevalidated('https://schema.org/audio');

  /// IRI for schema:auditDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date when a certification was last audited. See also  [gs1:certificationAuditDate](https://www.gs1.org/voc/certificationAuditDate).
  ///
  /// Can be used on: https://schema.org/Certification
  ///
  static const auditDate = IriTerm.prevalidated('https://schema.org/auditDate');

  /// IRI for schema:authenticator [Expects: https://schema.org/Organization]
  ///
  /// The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.
  ///
  /// Can be used on: https://schema.org/MediaSubscription
  ///
  static const authenticator = IriTerm.prevalidated(
    'https://schema.org/authenticator',
  );

  /// IRI for schema:author [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Rating
  ///
  static const author = IriTerm.prevalidated('https://schema.org/author');

  /// IRI for schema:availability [Expects: https://schema.org/ItemAvailability]
  ///
  /// The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const availability = IriTerm.prevalidated(
    'https://schema.org/availability',
  );

  /// IRI for schema:availabilityEnds [Expects: https://schema.org/Date, https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The end of the availability of the product or service included in the offer.
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/Demand, https://schema.org/Offer
  ///
  static const availabilityEnds = IriTerm.prevalidated(
    'https://schema.org/availabilityEnds',
  );

  /// IRI for schema:availabilityStarts [Expects: https://schema.org/Date, https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The beginning of the availability of the product or service included in the offer.
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/Demand, https://schema.org/Offer
  ///
  static const availabilityStarts = IriTerm.prevalidated(
    'https://schema.org/availabilityStarts',
  );

  /// IRI for schema:availableAtOrFrom [Expects: https://schema.org/Place]
  ///
  /// The place(s) from which the offer can be obtained (e.g. store locations).
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const availableAtOrFrom = IriTerm.prevalidated(
    'https://schema.org/availableAtOrFrom',
  );

  /// IRI for schema:availableChannel [Expects: https://schema.org/ServiceChannel]
  ///
  /// A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const availableChannel = IriTerm.prevalidated(
    'https://schema.org/availableChannel',
  );

  /// IRI for schema:availableDeliveryMethod [Expects: https://schema.org/DeliveryMethod]
  ///
  /// The delivery method(s) available for this offer.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const availableDeliveryMethod = IriTerm.prevalidated(
    'https://schema.org/availableDeliveryMethod',
  );

  /// IRI for schema:availableFrom [Expects: https://schema.org/DateTime]
  ///
  /// When the item is available for pickup from the store, locker, etc.
  ///
  /// Can be used on: https://schema.org/DeliveryEvent
  ///
  static const availableFrom = IriTerm.prevalidated(
    'https://schema.org/availableFrom',
  );

  /// IRI for schema:availableIn [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The location in which the strength is available.
  ///
  /// Can be used on: https://schema.org/DrugStrength
  ///
  static const availableIn = IriTerm.prevalidated(
    'https://schema.org/availableIn',
  );

  /// IRI for schema:availableLanguage [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also {[inLanguage]}.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Course, https://schema.org/LodgingBusiness, https://schema.org/ServiceChannel, https://schema.org/TouristAttraction
  ///
  static const availableLanguage = IriTerm.prevalidated(
    'https://schema.org/availableLanguage',
  );

  /// IRI for schema:availableService [Expects: https://schema.org/MedicalProcedure, https://schema.org/MedicalTest, https://schema.org/MedicalTherapy]
  ///
  /// A medical service available from this provider.
  ///
  /// Can be used on: https://schema.org/Hospital, https://schema.org/MedicalClinic, https://schema.org/Physician
  ///
  static const availableService = IriTerm.prevalidated(
    'https://schema.org/availableService',
  );

  /// IRI for schema:availableStrength [Expects: https://schema.org/DrugStrength]
  ///
  /// An available dosage strength for the drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const availableStrength = IriTerm.prevalidated(
    'https://schema.org/availableStrength',
  );

  /// IRI for schema:availableTest [Expects: https://schema.org/MedicalTest]
  ///
  /// A diagnostic test or procedure offered by this lab.
  ///
  /// Can be used on: https://schema.org/DiagnosticLab
  ///
  static const availableTest = IriTerm.prevalidated(
    'https://schema.org/availableTest',
  );

  /// IRI for schema:availableThrough [Expects: https://schema.org/DateTime]
  ///
  /// After this date, the item will no longer be available for pickup.
  ///
  /// Can be used on: https://schema.org/DeliveryEvent
  ///
  static const availableThrough = IriTerm.prevalidated(
    'https://schema.org/availableThrough',
  );

  /// IRI for schema:awards [Expects: https://schema.org/Text]
  ///
  /// Awards won by or for this item.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product
  ///
  static const awards = IriTerm.prevalidated('https://schema.org/awards');

  /// IRI for schema:awayTeam [Expects: https://schema.org/Person, https://schema.org/SportsTeam]
  ///
  /// The away team in a sports event.
  ///
  /// Can be used on: https://schema.org/SportsEvent
  ///
  static const awayTeam = IriTerm.prevalidated('https://schema.org/awayTeam');

  /// IRI for schema:backstory [Expects: https://schema.org/CreativeWork, https://schema.org/Text]
  ///
  /// For an {[Article]}, typically a {[NewsArticle]}, the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.
  ///
  /// Can be used on: https://schema.org/Article
  ///
  static const backstory = IriTerm.prevalidated('https://schema.org/backstory');

  /// IRI for schema:bankAccountType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The type of a bank account.
  ///
  /// Can be used on: https://schema.org/BankAccount
  ///
  static const bankAccountType = IriTerm.prevalidated(
    'https://schema.org/bankAccountType',
  );

  /// IRI for schema:baseSalary [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number, https://schema.org/PriceSpecification]
  ///
  /// The base salary of the job or of an employee in an EmployeeRole.
  ///
  /// Can be used on: https://schema.org/EmployeeRole, https://schema.org/JobPosting
  ///
  static const baseSalary = IriTerm.prevalidated(
    'https://schema.org/baseSalary',
  );

  /// IRI for schema:bccRecipient [Expects: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of recipient. The recipient blind copied on a message.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const bccRecipient = IriTerm.prevalidated(
    'https://schema.org/bccRecipient',
  );

  /// IRI for schema:bed [Expects: https://schema.org/BedDetails, https://schema.org/BedType, https://schema.org/Text]
  ///
  /// The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
  /// If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/HotelRoom, https://schema.org/Suite
  ///
  static const bed = IriTerm.prevalidated('https://schema.org/bed');

  /// IRI for schema:beforeMedia [Expects: https://schema.org/MediaObject, https://schema.org/URL]
  ///
  /// A media object representing the circumstances before performing this direction.
  ///
  /// Can be used on: https://schema.org/HowToDirection
  ///
  static const beforeMedia = IriTerm.prevalidated(
    'https://schema.org/beforeMedia',
  );

  /// IRI for schema:beneficiaryBank [Expects: https://schema.org/BankOrCreditUnion, https://schema.org/Text]
  ///
  /// A bank or bank‚Äôs branch, financial institution or international financial institution operating the beneficiary‚Äôs bank account or releasing funds for the beneficiary.
  ///
  /// Can be used on: https://schema.org/MoneyTransfer
  ///
  static const beneficiaryBank = IriTerm.prevalidated(
    'https://schema.org/beneficiaryBank',
  );

  /// IRI for schema:benefits [Expects: https://schema.org/Text]
  ///
  /// Description of benefits associated with the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const benefits = IriTerm.prevalidated('https://schema.org/benefits');

  /// IRI for schema:benefitsSummaryUrl [Expects: https://schema.org/URL]
  ///
  /// The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const benefitsSummaryUrl = IriTerm.prevalidated(
    'https://schema.org/benefitsSummaryUrl',
  );

  /// IRI for schema:bestRating [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The highest value allowed in this rating system.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const bestRating = IriTerm.prevalidated(
    'https://schema.org/bestRating',
  );

  /// IRI for schema:billingAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// The billing address for the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const billingAddress = IriTerm.prevalidated(
    'https://schema.org/billingAddress',
  );

  /// IRI for schema:billingDuration [Expects: https://schema.org/Duration, https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingDuration = IriTerm.prevalidated(
    'https://schema.org/billingDuration',
  );

  /// IRI for schema:billingIncrement [Expects: https://schema.org/Number]
  ///
  /// This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingIncrement = IriTerm.prevalidated(
    'https://schema.org/billingIncrement',
  );

  /// IRI for schema:billingPeriod [Expects: https://schema.org/Duration]
  ///
  /// The time interval used to compute the invoice.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const billingPeriod = IriTerm.prevalidated(
    'https://schema.org/billingPeriod',
  );

  /// IRI for schema:billingStart [Expects: https://schema.org/Number]
  ///
  /// Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const billingStart = IriTerm.prevalidated(
    'https://schema.org/billingStart',
  );

  /// IRI for schema:bioChemInteraction [Expects: https://schema.org/BioChemEntity]
  ///
  /// A BioChemEntity that is known to interact with this item.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const bioChemInteraction = IriTerm.prevalidated(
    'https://schema.org/bioChemInteraction',
  );

  /// IRI for schema:bioChemSimilarity [Expects: https://schema.org/BioChemEntity]
  ///
  /// A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const bioChemSimilarity = IriTerm.prevalidated(
    'https://schema.org/bioChemSimilarity',
  );

  /// IRI for schema:biologicalRole [Expects: https://schema.org/DefinedTerm]
  ///
  /// A role played by the BioChemEntity within a biological context.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const biologicalRole = IriTerm.prevalidated(
    'https://schema.org/biologicalRole',
  );

  /// IRI for schema:biomechnicalClass [Expects: https://schema.org/Text]
  ///
  /// The biomechanical properties of the bone.
  ///
  /// Can be used on: https://schema.org/Joint
  ///
  static const biomechnicalClass = IriTerm.prevalidated(
    'https://schema.org/biomechnicalClass',
  );

  /// IRI for schema:birthDate [Expects: https://schema.org/Date]
  ///
  /// Date of birth.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const birthDate = IriTerm.prevalidated('https://schema.org/birthDate');

  /// IRI for schema:birthPlace [Expects: https://schema.org/Place]
  ///
  /// The place where the person was born.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const birthPlace = IriTerm.prevalidated(
    'https://schema.org/birthPlace',
  );

  /// IRI for schema:bitrate [Expects: https://schema.org/Text]
  ///
  /// The bitrate of the media object.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const bitrate = IriTerm.prevalidated('https://schema.org/bitrate');

  /// IRI for schema:blogPosts [Expects: https://schema.org/BlogPosting]
  ///
  /// Indicates a post that is part of a {[Blog]}. Note that historically, what we term a "Blog" was once known as a "weblog", and that what we term a "BlogPosting" is now often colloquially referred to as a "blog".
  ///
  /// Can be used on: https://schema.org/Blog
  ///
  static const blogPosts = IriTerm.prevalidated('https://schema.org/blogPosts');

  /// IRI for schema:bloodSupply [Expects: https://schema.org/Vessel]
  ///
  /// The blood vessel that carries blood from the heart to the muscle.
  ///
  /// Can be used on: https://schema.org/Muscle
  ///
  static const bloodSupply = IriTerm.prevalidated(
    'https://schema.org/bloodSupply',
  );

  /// IRI for schema:boardingGroup [Expects: https://schema.org/Text]
  ///
  /// The airline-specific indicator of boarding order / preference.
  ///
  /// Can be used on: https://schema.org/FlightReservation
  ///
  static const boardingGroup = IriTerm.prevalidated(
    'https://schema.org/boardingGroup',
  );

  /// IRI for schema:boardingPolicy [Expects: https://schema.org/BoardingPolicyType]
  ///
  /// The type of boarding policy used by the airline (e.g. zone-based or group-based).
  ///
  /// Can be used on: https://schema.org/Airline, https://schema.org/Flight
  ///
  static const boardingPolicy = IriTerm.prevalidated(
    'https://schema.org/boardingPolicy',
  );

  /// IRI for schema:bodyLocation [Expects: https://schema.org/Text]
  ///
  /// Location in the body of the anatomical structure.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure, https://schema.org/MedicalProcedure
  ///
  static const bodyLocation = IriTerm.prevalidated(
    'https://schema.org/bodyLocation',
  );

  /// IRI for schema:bodyType [Expects: https://schema.org/QualitativeValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const bodyType = IriTerm.prevalidated('https://schema.org/bodyType');

  /// IRI for schema:bookEdition [Expects: https://schema.org/Text]
  ///
  /// The edition of the book.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const bookEdition = IriTerm.prevalidated(
    'https://schema.org/bookEdition',
  );

  /// IRI for schema:bookFormat [Expects: https://schema.org/BookFormatType]
  ///
  /// The format of the book.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const bookFormat = IriTerm.prevalidated(
    'https://schema.org/bookFormat',
  );

  /// IRI for schema:bookingAgent [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// 'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const bookingAgent = IriTerm.prevalidated(
    'https://schema.org/bookingAgent',
  );

  /// IRI for schema:bookingTime [Expects: https://schema.org/DateTime]
  ///
  /// The date and time the reservation was booked.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const bookingTime = IriTerm.prevalidated(
    'https://schema.org/bookingTime',
  );

  /// IRI for schema:borrower [Expects: https://schema.org/Person]
  ///
  /// A sub property of participant. The person that borrows the object being lent.
  ///
  /// Can be used on: https://schema.org/LendAction
  ///
  static const borrower = IriTerm.prevalidated('https://schema.org/borrower');

  /// IRI for schema:box [Expects: https://schema.org/Text]
  ///
  /// A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.
  ///
  /// Can be used on: https://schema.org/GeoShape
  ///
  static const box = IriTerm.prevalidated('https://schema.org/box');

  /// IRI for schema:branch [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// The branches that delineate from the nerve bundle. Not to be confused with {[branchOf]}.
  ///
  /// Can be used on: https://schema.org/Nerve
  ///
  static const branch = IriTerm.prevalidated('https://schema.org/branch');

  /// IRI for schema:branchCode [Expects: https://schema.org/Text]
  ///
  /// A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
  ///
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const branchCode = IriTerm.prevalidated(
    'https://schema.org/branchCode',
  );

  /// IRI for schema:branchOf [Expects: https://schema.org/Organization]
  ///
  /// The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical) {[branch]}.
  ///
  /// Can be used on: https://schema.org/LocalBusiness
  ///
  static const branchOf = IriTerm.prevalidated('https://schema.org/branchOf');

  /// IRI for schema:brand [Expects: https://schema.org/Brand, https://schema.org/Organization]
  ///
  /// The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product, https://schema.org/Service
  ///
  static const brand = IriTerm.prevalidated('https://schema.org/brand');

  /// IRI for schema:breadcrumb [Expects: https://schema.org/BreadcrumbList, https://schema.org/Text]
  ///
  /// A set of links that can help a user understand and navigate a website hierarchy.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const breadcrumb = IriTerm.prevalidated(
    'https://schema.org/breadcrumb',
  );

  /// IRI for schema:breastfeedingWarning [Expects: https://schema.org/Text]
  ///
  /// Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const breastfeedingWarning = IriTerm.prevalidated(
    'https://schema.org/breastfeedingWarning',
  );

  /// IRI for schema:broadcastAffiliateOf [Expects: https://schema.org/Organization]
  ///
  /// The media network(s) whose content is broadcast on this station.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const broadcastAffiliateOf = IriTerm.prevalidated(
    'https://schema.org/broadcastAffiliateOf',
  );

  /// IRI for schema:broadcastChannelId [Expects: https://schema.org/Text]
  ///
  /// The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
  ///
  /// Can be used on: https://schema.org/BroadcastChannel
  ///
  static const broadcastChannelId = IriTerm.prevalidated(
    'https://schema.org/broadcastChannelId',
  );

  /// IRI for schema:broadcastDisplayName [Expects: https://schema.org/Text]
  ///
  /// The name displayed in the channel guide. For many US affiliates, it is the network name.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const broadcastDisplayName = IriTerm.prevalidated(
    'https://schema.org/broadcastDisplayName',
  );

  /// IRI for schema:broadcastFrequency [Expects: https://schema.org/BroadcastFrequencySpecification, https://schema.org/Text]
  ///
  /// The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequencies of AM and FM radio channels, e.g. "87 FM".
  ///
  /// Can be used on: https://schema.org/BroadcastChannel, https://schema.org/BroadcastService
  ///
  static const broadcastFrequency = IriTerm.prevalidated(
    'https://schema.org/broadcastFrequency',
  );

  /// IRI for schema:broadcastFrequencyValue [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The frequency in MHz for a particular broadcast.
  ///
  /// Can be used on: https://schema.org/BroadcastFrequencySpecification
  ///
  static const broadcastFrequencyValue = IriTerm.prevalidated(
    'https://schema.org/broadcastFrequencyValue',
  );

  /// IRI for schema:broadcastOfEvent [Expects: https://schema.org/Event]
  ///
  /// The event being broadcast such as a sporting event or awards ceremony.
  ///
  /// Can be used on: https://schema.org/BroadcastEvent
  ///
  static const broadcastOfEvent = IriTerm.prevalidated(
    'https://schema.org/broadcastOfEvent',
  );

  /// IRI for schema:broadcastServiceTier [Expects: https://schema.org/Text]
  ///
  /// The type of service required to have access to the channel (e.g. Standard or Premium).
  ///
  /// Can be used on: https://schema.org/BroadcastChannel
  ///
  static const broadcastServiceTier = IriTerm.prevalidated(
    'https://schema.org/broadcastServiceTier',
  );

  /// IRI for schema:broadcastSignalModulation [Expects: https://schema.org/QualitativeValue, https://schema.org/Text]
  ///
  /// The modulation (e.g. FM, AM, etc) used by a particular broadcast service.
  ///
  /// Can be used on: https://schema.org/BroadcastFrequencySpecification
  ///
  static const broadcastSignalModulation = IriTerm.prevalidated(
    'https://schema.org/broadcastSignalModulation',
  );

  /// IRI for schema:broadcastSubChannel [Expects: https://schema.org/Text]
  ///
  /// The subchannel used for the broadcast.
  ///
  /// Can be used on: https://schema.org/BroadcastFrequencySpecification
  ///
  static const broadcastSubChannel = IriTerm.prevalidated(
    'https://schema.org/broadcastSubChannel',
  );

  /// IRI for schema:broadcastTimezone [Expects: https://schema.org/Text]
  ///
  /// The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const broadcastTimezone = IriTerm.prevalidated(
    'https://schema.org/broadcastTimezone',
  );

  /// IRI for schema:broadcaster [Expects: https://schema.org/Organization]
  ///
  /// The organization owning or operating the broadcast service.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const broadcaster = IriTerm.prevalidated(
    'https://schema.org/broadcaster',
  );

  /// IRI for schema:browserRequirements [Expects: https://schema.org/Text]
  ///
  /// Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.
  ///
  /// Can be used on: https://schema.org/WebApplication
  ///
  static const browserRequirements = IriTerm.prevalidated(
    'https://schema.org/browserRequirements',
  );

  /// IRI for schema:busName [Expects: https://schema.org/Text]
  ///
  /// The name of the bus (e.g. Bolt Express).
  ///
  /// Can be used on: https://schema.org/BusTrip
  ///
  static const busName = IriTerm.prevalidated('https://schema.org/busName');

  /// IRI for schema:busNumber [Expects: https://schema.org/Text]
  ///
  /// The unique identifier for the bus.
  ///
  /// Can be used on: https://schema.org/BusTrip
  ///
  static const busNumber = IriTerm.prevalidated('https://schema.org/busNumber');

  /// IRI for schema:businessDays [Expects: https://schema.org/DayOfWeek, https://schema.org/OpeningHoursSpecification]
  ///
  /// Days of the week when the merchant typically operates, indicated via opening hours markup.
  ///
  /// Can be used on: https://schema.org/ServicePeriod, https://schema.org/ShippingDeliveryTime
  ///
  static const businessDays = IriTerm.prevalidated(
    'https://schema.org/businessDays',
  );

  /// IRI for schema:businessFunction [Expects: https://schema.org/BusinessFunction]
  ///
  /// The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/TypeAndQuantityNode
  ///
  static const businessFunction = IriTerm.prevalidated(
    'https://schema.org/businessFunction',
  );

  /// IRI for schema:buyer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The participant/person/organization that bought the object.
  ///
  /// Can be used on: https://schema.org/SellAction
  ///
  static const buyer = IriTerm.prevalidated('https://schema.org/buyer');

  /// IRI for schema:byArtist [Expects: https://schema.org/MusicGroup, https://schema.org/Person]
  ///
  /// The artist that performed this album or recording.
  ///
  /// Can be used on: https://schema.org/MusicAlbum, https://schema.org/MusicRecording
  ///
  static const byArtist = IriTerm.prevalidated('https://schema.org/byArtist');

  /// IRI for schema:byDay [Expects: https://schema.org/DayOfWeek, https://schema.org/Text]
  ///
  /// Defines the day(s) of the week on which a recurring {[Event]} takes place. May be specified using either {[DayOfWeek]}, or alternatively {[Text]} conforming to iCal's syntax for byDay recurrence rules.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const byDay = IriTerm.prevalidated('https://schema.org/byDay');

  /// IRI for schema:byMonth [Expects: https://schema.org/Integer]
  ///
  /// Defines the month(s) of the year on which a recurring {[Event]} takes place. Specified as an {[Integer]} between 1-12. January is 1.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const byMonth = IriTerm.prevalidated('https://schema.org/byMonth');

  /// IRI for schema:byMonthDay [Expects: https://schema.org/Integer]
  ///
  /// Defines the day(s) of the month on which a recurring {[Event]} takes place. Specified as an {[Integer]} between 1-31.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const byMonthDay = IriTerm.prevalidated(
    'https://schema.org/byMonthDay',
  );

  /// IRI for schema:byMonthWeek [Expects: https://schema.org/Integer]
  ///
  /// Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const byMonthWeek = IriTerm.prevalidated(
    'https://schema.org/byMonthWeek',
  );

  /// IRI for schema:callSign [Expects: https://schema.org/Text]
  ///
  /// A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
  ///
  /// Can be used on: https://schema.org/BroadcastService, https://schema.org/Person, https://schema.org/Vehicle
  ///
  static const callSign = IriTerm.prevalidated('https://schema.org/callSign');

  /// IRI for schema:calories [Expects: https://schema.org/Energy]
  ///
  /// The number of calories.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const calories = IriTerm.prevalidated('https://schema.org/calories');

  /// IRI for schema:candidate [Expects: https://schema.org/Person]
  ///
  /// A sub property of object. The candidate subject of this action.
  ///
  /// Can be used on: https://schema.org/VoteAction
  ///
  static const candidate = IriTerm.prevalidated('https://schema.org/candidate');

  /// IRI for schema:carbohydrateContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of carbohydrates.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const carbohydrateContent = IriTerm.prevalidated(
    'https://schema.org/carbohydrateContent',
  );

  /// IRI for schema:cargoVolume [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\n\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\n\nNote: You can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const cargoVolume = IriTerm.prevalidated(
    'https://schema.org/cargoVolume',
  );

  /// IRI for schema:carrier [Expects: https://schema.org/Organization]
  ///
  /// 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
  ///
  /// Can be used on: https://schema.org/Flight, https://schema.org/ParcelDelivery
  ///
  static const carrier = IriTerm.prevalidated('https://schema.org/carrier');

  /// IRI for schema:carrierRequirements [Expects: https://schema.org/Text]
  ///
  /// Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
  ///
  /// Can be used on: https://schema.org/MobileApplication
  ///
  static const carrierRequirements = IriTerm.prevalidated(
    'https://schema.org/carrierRequirements',
  );

  /// IRI for schema:cashBack [Expects: https://schema.org/Boolean, https://schema.org/Number]
  ///
  /// A cardholder benefit that pays the cardholder a small percentage of their net expenditures.
  ///
  /// Can be used on: https://schema.org/PaymentCard
  ///
  static const cashBack = IriTerm.prevalidated('https://schema.org/cashBack');

  /// IRI for schema:catalog [Expects: https://schema.org/DataCatalog]
  ///
  /// A data catalog which contains this dataset.
  ///
  /// Can be used on: https://schema.org/Dataset
  ///
  static const catalog = IriTerm.prevalidated('https://schema.org/catalog');

  /// IRI for schema:catalogNumber [Expects: https://schema.org/Text]
  ///
  /// The catalog number for the release.
  ///
  /// Can be used on: https://schema.org/MusicRelease
  ///
  static const catalogNumber = IriTerm.prevalidated(
    'https://schema.org/catalogNumber',
  );

  /// IRI for schema:causeOf [Expects: https://schema.org/MedicalEntity]
  ///
  /// The condition, complication, symptom, sign, etc. caused.
  ///
  /// Can be used on: https://schema.org/MedicalCause
  ///
  static const causeOf = IriTerm.prevalidated('https://schema.org/causeOf');

  /// IRI for schema:ccRecipient [Expects: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of recipient. The recipient copied on a message.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const ccRecipient = IriTerm.prevalidated(
    'https://schema.org/ccRecipient',
  );

  /// IRI for schema:certificationIdentification [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// Identifier of a certification instance (as registered with an independent certification body). Typically this identifier can be used to consult and verify the certification instance. See also [gs1:certificationIdentification](https://www.gs1.org/voc/certificationIdentification).
  ///
  /// Can be used on: https://schema.org/Certification
  ///
  static const certificationIdentification = IriTerm.prevalidated(
    'https://schema.org/certificationIdentification',
  );

  /// IRI for schema:certificationRating [Expects: https://schema.org/Rating]
  ///
  /// Rating of a certification instance (as defined by an independent certification body). Typically this rating can be used to rate the level to which the requirements of the certification instance are fulfilled. See also [gs1:certificationValue](https://www.gs1.org/voc/certificationValue).
  ///
  /// Can be used on: https://schema.org/Certification
  ///
  static const certificationRating = IriTerm.prevalidated(
    'https://schema.org/certificationRating',
  );

  /// IRI for schema:certificationStatus [Expects: https://schema.org/CertificationStatusEnumeration]
  ///
  /// Indicates the current status of a certification: active or inactive. See also  [gs1:certificationStatus](https://www.gs1.org/voc/certificationStatus).
  ///
  /// Can be used on: https://schema.org/Certification
  ///
  static const certificationStatus = IriTerm.prevalidated(
    'https://schema.org/certificationStatus',
  );

  /// IRI for schema:character [Expects: https://schema.org/Person]
  ///
  /// Fictional person connected with a creative work.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const character = IriTerm.prevalidated('https://schema.org/character');

  /// IRI for schema:characterAttribute [Expects: https://schema.org/Thing]
  ///
  /// A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
  ///
  /// Can be used on: https://schema.org/Game, https://schema.org/VideoGameSeries
  ///
  static const characterAttribute = IriTerm.prevalidated(
    'https://schema.org/characterAttribute',
  );

  /// IRI for schema:characterName [Expects: https://schema.org/Text]
  ///
  /// The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
  ///
  /// Can be used on: https://schema.org/PerformanceRole
  ///
  static const characterName = IriTerm.prevalidated(
    'https://schema.org/characterName',
  );

  /// IRI for schema:cheatCode [Expects: https://schema.org/CreativeWork]
  ///
  /// Cheat codes to the game.
  ///
  /// Can be used on: https://schema.org/VideoGame, https://schema.org/VideoGameSeries
  ///
  static const cheatCode = IriTerm.prevalidated('https://schema.org/cheatCode');

  /// IRI for schema:checkinTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The earliest someone may check into a lodging establishment.
  ///
  /// Can be used on: https://schema.org/LodgingBusiness, https://schema.org/LodgingReservation
  ///
  static const checkinTime = IriTerm.prevalidated(
    'https://schema.org/checkinTime',
  );

  /// IRI for schema:checkoutPageURLTemplate [Expects: https://schema.org/Text]
  ///
  /// A URL template (RFC 6570) for a checkout page for an offer. This approach allows merchants to specify a URL for online checkout of the offered product, by interpolating parameters such as the logged in user ID, product ID, quantity, discount code etc. Parameter naming and standardization are not specified here.
  ///
  /// Can be used on: https://schema.org/Offer
  ///
  static const checkoutPageURLTemplate = IriTerm.prevalidated(
    'https://schema.org/checkoutPageURLTemplate',
  );

  /// IRI for schema:checkoutTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The latest someone may check out of a lodging establishment.
  ///
  /// Can be used on: https://schema.org/LodgingBusiness, https://schema.org/LodgingReservation
  ///
  static const checkoutTime = IriTerm.prevalidated(
    'https://schema.org/checkoutTime',
  );

  /// IRI for schema:chemicalComposition [Expects: https://schema.org/Text]
  ///
  /// The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.
  ///
  /// Can be used on: https://schema.org/ChemicalSubstance
  ///
  static const chemicalComposition = IriTerm.prevalidated(
    'https://schema.org/chemicalComposition',
  );

  /// IRI for schema:chemicalRole [Expects: https://schema.org/DefinedTerm]
  ///
  /// A role played by the BioChemEntity within a chemical context.
  ///
  /// Can be used on: https://schema.org/ChemicalSubstance, https://schema.org/MolecularEntity
  ///
  static const chemicalRole = IriTerm.prevalidated(
    'https://schema.org/chemicalRole',
  );

  /// IRI for schema:childMaxAge [Expects: https://schema.org/Number]
  ///
  /// Maximal age of the child.
  ///
  /// Can be used on: https://schema.org/ParentAudience
  ///
  static const childMaxAge = IriTerm.prevalidated(
    'https://schema.org/childMaxAge',
  );

  /// IRI for schema:childMinAge [Expects: https://schema.org/Number]
  ///
  /// Minimal age of the child.
  ///
  /// Can be used on: https://schema.org/ParentAudience
  ///
  static const childMinAge = IriTerm.prevalidated(
    'https://schema.org/childMinAge',
  );

  /// IRI for schema:children [Expects: https://schema.org/Person]
  ///
  /// A child of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const children = IriTerm.prevalidated('https://schema.org/children');

  /// IRI for schema:cholesterolContent [Expects: https://schema.org/Mass]
  ///
  /// The number of milligrams of cholesterol.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const cholesterolContent = IriTerm.prevalidated(
    'https://schema.org/cholesterolContent',
  );

  /// IRI for schema:circle [Expects: https://schema.org/Text]
  ///
  /// A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
  ///
  /// Can be used on: https://schema.org/GeoShape
  ///
  static const circle = IriTerm.prevalidated('https://schema.org/circle');

  /// IRI for schema:citation [Expects: https://schema.org/CreativeWork, https://schema.org/Text]
  ///
  /// A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const citation = IriTerm.prevalidated('https://schema.org/citation');

  /// IRI for schema:claimInterpreter [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// For a {[Claim]} interpreted from {[MediaObject]} content, the {[interpretedAsClaim]} property can be used to indicate a claim contained, implied or refined from the content of a {[MediaObject]}.
  ///
  /// Can be used on: https://schema.org/Claim
  ///
  static const claimInterpreter = IriTerm.prevalidated(
    'https://schema.org/claimInterpreter',
  );

  /// IRI for schema:claimReviewed [Expects: https://schema.org/Text]
  ///
  /// A short summary of the specific claims reviewed in a ClaimReview.
  ///
  /// Can be used on: https://schema.org/ClaimReview
  ///
  static const claimReviewed = IriTerm.prevalidated(
    'https://schema.org/claimReviewed',
  );

  /// IRI for schema:clincalPharmacology [Expects: https://schema.org/Text]
  ///
  /// Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const clincalPharmacology = IriTerm.prevalidated(
    'https://schema.org/clincalPharmacology',
  );

  /// IRI for schema:clipNumber [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// Position of the clip within an ordered group of clips.
  ///
  /// Can be used on: https://schema.org/Clip
  ///
  static const clipNumber = IriTerm.prevalidated(
    'https://schema.org/clipNumber',
  );

  /// IRI for schema:closes [Expects: https://schema.org/Time]
  ///
  /// The closing hour of the place or service on the given day(s) of the week.
  ///
  /// Can be used on: https://schema.org/OpeningHoursSpecification
  ///
  static const closes = IriTerm.prevalidated('https://schema.org/closes');

  /// IRI for schema:coach [Expects: https://schema.org/Person]
  ///
  /// A person that acts in a coaching role for a sports team.
  ///
  /// Can be used on: https://schema.org/SportsTeam
  ///
  static const coach = IriTerm.prevalidated('https://schema.org/coach');

  /// IRI for schema:code [Expects: https://schema.org/MedicalCode]
  ///
  /// A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const code = IriTerm.prevalidated('https://schema.org/code');

  /// IRI for schema:codeRepository [Expects: https://schema.org/URL]
  ///
  /// Link to the repository where the un-compiled, human readable code and related code is located (SVN, GitHub, CodePlex).
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const codeRepository = IriTerm.prevalidated(
    'https://schema.org/codeRepository',
  );

  /// IRI for schema:codeValue [Expects: https://schema.org/Text]
  ///
  /// A short textual code that uniquely identifies the value.
  ///
  /// Can be used on: https://schema.org/CategoryCode, https://schema.org/MedicalCode
  ///
  static const codeValue = IriTerm.prevalidated('https://schema.org/codeValue');

  /// IRI for schema:codingSystem [Expects: https://schema.org/Text]
  ///
  /// The coding system, e.g. 'ICD-10'.
  ///
  /// Can be used on: https://schema.org/MedicalCode
  ///
  static const codingSystem = IriTerm.prevalidated(
    'https://schema.org/codingSystem',
  );

  /// IRI for schema:colleagues [Expects: https://schema.org/Person]
  ///
  /// A colleague of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const colleagues = IriTerm.prevalidated(
    'https://schema.org/colleagues',
  );

  /// IRI for schema:collection [Expects: https://schema.org/Thing]
  ///
  /// A sub property of object. The collection target of the action.
  ///
  /// Can be used on: https://schema.org/UpdateAction
  ///
  static const collection = IriTerm.prevalidated(
    'https://schema.org/collection',
  );

  /// IRI for schema:collectionSize [Expects: https://schema.org/Integer]
  ///
  /// The number of items in the {[Collection]}.
  ///
  /// Can be used on: https://schema.org/Collection
  ///
  static const collectionSize = IriTerm.prevalidated(
    'https://schema.org/collectionSize',
  );

  /// IRI for schema:color [Expects: https://schema.org/Text]
  ///
  /// The color of the product.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const color = IriTerm.prevalidated('https://schema.org/color');

  /// IRI for schema:colorSwatch [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// A color swatch image, visualizing the color of a {[Product]}. Should match the textual description specified in the {[color]} property. This can be a URL or a fully described ImageObject.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const colorSwatch = IriTerm.prevalidated(
    'https://schema.org/colorSwatch',
  );

  /// IRI for schema:colorist [Expects: https://schema.org/Person]
  ///
  /// The individual who adds color to inked drawings.
  ///
  /// Can be used on: https://schema.org/ComicIssue, https://schema.org/ComicStory, https://schema.org/VisualArtwork
  ///
  static const colorist = IriTerm.prevalidated('https://schema.org/colorist');

  /// IRI for schema:comment [Expects: https://schema.org/Comment]
  ///
  /// Comments, typically from users.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/RsvpAction
  ///
  static const comment = IriTerm.prevalidated('https://schema.org/comment');

  /// IRI for schema:commentCount [Expects: https://schema.org/Integer]
  ///
  /// The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const commentCount = IriTerm.prevalidated(
    'https://schema.org/commentCount',
  );

  /// IRI for schema:commentText [Expects: https://schema.org/Text]
  ///
  /// The text of the UserComment.
  ///
  /// Can be used on: https://schema.org/UserComments
  ///
  static const commentText = IriTerm.prevalidated(
    'https://schema.org/commentText',
  );

  /// IRI for schema:commentTime [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The time at which the UserComment was made.
  ///
  /// Can be used on: https://schema.org/UserComments
  ///
  static const commentTime = IriTerm.prevalidated(
    'https://schema.org/commentTime',
  );

  /// IRI for schema:competencyRequired [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalCredential, https://schema.org/LearningResource
  ///
  static const competencyRequired = IriTerm.prevalidated(
    'https://schema.org/competencyRequired',
  );

  /// IRI for schema:composer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization who wrote a composition, or who is the composer of a work performed at some event.
  ///
  /// Can be used on: https://schema.org/Event, https://schema.org/MusicComposition
  ///
  static const composer = IriTerm.prevalidated('https://schema.org/composer');

  /// IRI for schema:comprisedOf [Expects: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem]
  ///
  /// Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.
  ///
  /// Can be used on: https://schema.org/AnatomicalSystem
  ///
  static const comprisedOf = IriTerm.prevalidated(
    'https://schema.org/comprisedOf',
  );

  /// IRI for schema:conditionsOfAccess [Expects: https://schema.org/Text]
  ///
  /// Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an {[ArchiveComponent]} held by an {[ArchiveOrganization]}. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\n\nFor example "Available by appointment from the Reading Room" or "Accessible only from logged-in accounts ".
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const conditionsOfAccess = IriTerm.prevalidated(
    'https://schema.org/conditionsOfAccess',
  );

  /// IRI for schema:confirmationNumber [Expects: https://schema.org/Text]
  ///
  /// A number that confirms the given order or payment has been received.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const confirmationNumber = IriTerm.prevalidated(
    'https://schema.org/confirmationNumber',
  );

  /// IRI for schema:connectedTo [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// Other anatomical structures to which this structure is connected.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure
  ///
  static const connectedTo = IriTerm.prevalidated(
    'https://schema.org/connectedTo',
  );

  /// IRI for schema:constraintProperty [Expects: https://schema.org/Property, https://schema.org/URL]
  ///
  /// Indicates a property used as a constraint. For example, in the definition of a {[StatisticalVariable]}. The value is a property, either from within Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org.
  ///
  /// Can be used on: https://schema.org/ConstraintNode
  ///
  static const constraintProperty = IriTerm.prevalidated(
    'https://schema.org/constraintProperty',
  );

  /// IRI for schema:contactOption [Expects: https://schema.org/ContactPointOption]
  ///
  /// An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).
  ///
  /// Can be used on: https://schema.org/ContactPoint
  ///
  static const contactOption = IriTerm.prevalidated(
    'https://schema.org/contactOption',
  );

  /// IRI for schema:contactPoints [Expects: https://schema.org/ContactPoint]
  ///
  /// A contact point for a person or organization.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const contactPoints = IriTerm.prevalidated(
    'https://schema.org/contactPoints',
  );

  /// IRI for schema:contactType [Expects: https://schema.org/Text]
  ///
  /// A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
  ///
  /// Can be used on: https://schema.org/ContactPoint
  ///
  static const contactType = IriTerm.prevalidated(
    'https://schema.org/contactType',
  );

  /// IRI for schema:contactlessPayment [Expects: https://schema.org/Boolean]
  ///
  /// A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.
  ///
  /// Can be used on: https://schema.org/PaymentCard
  ///
  static const contactlessPayment = IriTerm.prevalidated(
    'https://schema.org/contactlessPayment',
  );

  /// IRI for schema:containedIn [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and one that contains it.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containedIn = IriTerm.prevalidated(
    'https://schema.org/containedIn',
  );

  /// IRI for schema:contentRating [Expects: https://schema.org/Rating, https://schema.org/Text]
  ///
  /// Official rating of a piece of content&#x2014;for example, 'MPAA PG-13'.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const contentRating = IriTerm.prevalidated(
    'https://schema.org/contentRating',
  );

  /// IRI for schema:contentReferenceTime [Expects: https://schema.org/DateTime]
  ///
  /// The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const contentReferenceTime = IriTerm.prevalidated(
    'https://schema.org/contentReferenceTime',
  );

  /// IRI for schema:contentSize [Expects: https://schema.org/Text]
  ///
  /// File size in (mega/kilo)bytes.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const contentSize = IriTerm.prevalidated(
    'https://schema.org/contentSize',
  );

  /// IRI for schema:contentType [Expects: https://schema.org/Text]
  ///
  /// The supported content type(s) for an EntryPoint response.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const contentType = IriTerm.prevalidated(
    'https://schema.org/contentType',
  );

  /// IRI for schema:contentUrl [Expects: https://schema.org/URL]
  ///
  /// Actual bytes of the media object, for example the image file or video file.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const contentUrl = IriTerm.prevalidated(
    'https://schema.org/contentUrl',
  );

  /// IRI for schema:contraindication [Expects: https://schema.org/MedicalContraindication, https://schema.org/Text]
  ///
  /// A contraindication for this therapy.
  ///
  /// Can be used on: https://schema.org/MedicalDevice, https://schema.org/MedicalTherapy
  ///
  static const contraindication = IriTerm.prevalidated(
    'https://schema.org/contraindication',
  );

  /// IRI for schema:contributor [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A secondary contributor to the CreativeWork or Event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const contributor = IriTerm.prevalidated(
    'https://schema.org/contributor',
  );

  /// IRI for schema:cookTime [Expects: https://schema.org/Duration]
  ///
  /// The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const cookTime = IriTerm.prevalidated('https://schema.org/cookTime');

  /// IRI for schema:cookingMethod [Expects: https://schema.org/Text]
  ///
  /// The method of cooking, such as Frying, Steaming, ...
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const cookingMethod = IriTerm.prevalidated(
    'https://schema.org/cookingMethod',
  );

  /// IRI for schema:copyrightHolder [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The party holding the legal copyright to the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const copyrightHolder = IriTerm.prevalidated(
    'https://schema.org/copyrightHolder',
  );

  /// IRI for schema:copyrightNotice [Expects: https://schema.org/Text]
  ///
  /// Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const copyrightNotice = IriTerm.prevalidated(
    'https://schema.org/copyrightNotice',
  );

  /// IRI for schema:copyrightYear [Expects: https://schema.org/Number]
  ///
  /// The year during which the claimed copyright for the CreativeWork was first asserted.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const copyrightYear = IriTerm.prevalidated(
    'https://schema.org/copyrightYear',
  );

  /// IRI for schema:correction [Expects: https://schema.org/CorrectionComment, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates a correction to a {[CreativeWork]}, either via a {[CorrectionComment]}, textually or in another document.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const correction = IriTerm.prevalidated(
    'https://schema.org/correction',
  );

  /// IRI for schema:correctionsPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For an {[Organization]} (e.g. {[NewsMediaOrganization]}), a statement describing (in news media, the newsroom‚Äôs) disclosure and correction policy for errors.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const correctionsPolicy = IriTerm.prevalidated(
    'https://schema.org/correctionsPolicy',
  );

  /// IRI for schema:costCategory [Expects: https://schema.org/DrugCostCategory]
  ///
  /// The category of cost, such as wholesale, retail, reimbursement cap, etc.
  ///
  /// Can be used on: https://schema.org/DrugCost
  ///
  static const costCategory = IriTerm.prevalidated(
    'https://schema.org/costCategory',
  );

  /// IRI for schema:costCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217.
  ///
  /// Can be used on: https://schema.org/DrugCost
  ///
  static const costCurrency = IriTerm.prevalidated(
    'https://schema.org/costCurrency',
  );

  /// IRI for schema:costOrigin [Expects: https://schema.org/Text]
  ///
  /// Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.
  ///
  /// Can be used on: https://schema.org/DrugCost
  ///
  static const costOrigin = IriTerm.prevalidated(
    'https://schema.org/costOrigin',
  );

  /// IRI for schema:costPerUnit [Expects: https://schema.org/Number, https://schema.org/QualitativeValue, https://schema.org/Text]
  ///
  /// The cost per unit of the drug.
  ///
  /// Can be used on: https://schema.org/DrugCost
  ///
  static const costPerUnit = IriTerm.prevalidated(
    'https://schema.org/costPerUnit',
  );

  /// IRI for schema:countriesNotSupported [Expects: https://schema.org/Text]
  ///
  /// Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const countriesNotSupported = IriTerm.prevalidated(
    'https://schema.org/countriesNotSupported',
  );

  /// IRI for schema:countriesSupported [Expects: https://schema.org/Text]
  ///
  /// Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const countriesSupported = IriTerm.prevalidated(
    'https://schema.org/countriesSupported',
  );

  /// IRI for schema:countryOfAssembly [Expects: https://schema.org/Text]
  ///
  /// The place where the product was assembled.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const countryOfAssembly = IriTerm.prevalidated(
    'https://schema.org/countryOfAssembly',
  );

  /// IRI for schema:countryOfLastProcessing [Expects: https://schema.org/Text]
  ///
  /// The place where the item (typically {[Product]}) was last processed and tested before importation.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const countryOfLastProcessing = IriTerm.prevalidated(
    'https://schema.org/countryOfLastProcessing',
  );

  /// IRI for schema:countryOfOrigin [Expects: https://schema.org/Country]
  ///
  /// The country of origin of something, including products as well as creative  works such as movie and TV content.
  ///
  /// In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of {[CreativeWork]} it is difficult to provide fully general guidance, and properties such as {[contentLocation]} and {[locationCreated]} may be more applicable.
  ///
  /// In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Movie, https://schema.org/Product, https://schema.org/TVEpisode, https://schema.org/TVSeason, https://schema.org/TVSeries
  ///
  static const countryOfOrigin = IriTerm.prevalidated(
    'https://schema.org/countryOfOrigin',
  );

  /// IRI for schema:course [Expects: https://schema.org/Place]
  ///
  /// A sub property of location. The course where this action was taken.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const course = IriTerm.prevalidated('https://schema.org/course');

  /// IRI for schema:courseCode [Expects: https://schema.org/Text]
  ///
  /// The identifier for the {[Course]} used by the course {[provider]} (e.g. CS101 or 6.001).
  ///
  /// Can be used on: https://schema.org/Course
  ///
  static const courseCode = IriTerm.prevalidated(
    'https://schema.org/courseCode',
  );

  /// IRI for schema:courseMode [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).
  ///
  /// Can be used on: https://schema.org/CourseInstance
  ///
  static const courseMode = IriTerm.prevalidated(
    'https://schema.org/courseMode',
  );

  /// IRI for schema:coursePrerequisites [Expects: https://schema.org/AlignmentObject, https://schema.org/Course, https://schema.org/Text]
  ///
  /// Requirements for taking the Course. May be completion of another {[Course]} or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using {[AlignmentObject]}.
  ///
  /// Can be used on: https://schema.org/Course
  ///
  static const coursePrerequisites = IriTerm.prevalidated(
    'https://schema.org/coursePrerequisites',
  );

  /// IRI for schema:courseSchedule [Expects: https://schema.org/Schedule]
  ///
  /// Represents the length and pace of a course, expressed as a {[Schedule]}.
  ///
  /// Can be used on: https://schema.org/CourseInstance
  ///
  static const courseSchedule = IriTerm.prevalidated(
    'https://schema.org/courseSchedule',
  );

  /// IRI for schema:courseWorkload [Expects: https://schema.org/Text]
  ///
  /// The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, "2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week".
  ///
  /// Can be used on: https://schema.org/CourseInstance
  ///
  static const courseWorkload = IriTerm.prevalidated(
    'https://schema.org/courseWorkload',
  );

  /// IRI for schema:coverageEndTime [Expects: https://schema.org/DateTime]
  ///
  /// The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
  ///
  /// Can be used on: https://schema.org/LiveBlogPosting
  ///
  static const coverageEndTime = IriTerm.prevalidated(
    'https://schema.org/coverageEndTime',
  );

  /// IRI for schema:coverageStartTime [Expects: https://schema.org/DateTime]
  ///
  /// The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
  ///
  /// Can be used on: https://schema.org/LiveBlogPosting
  ///
  static const coverageStartTime = IriTerm.prevalidated(
    'https://schema.org/coverageStartTime',
  );

  /// IRI for schema:creativeWorkStatus [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const creativeWorkStatus = IriTerm.prevalidated(
    'https://schema.org/creativeWorkStatus',
  );

  /// IRI for schema:credentialCategory [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The category or type of credential being described, for example "degree‚Äù, ‚Äúcertificate‚Äù, ‚Äúbadge‚Äù, or more specific term.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalCredential
  ///
  static const credentialCategory = IriTerm.prevalidated(
    'https://schema.org/credentialCategory',
  );

  /// IRI for schema:creditText [Expects: https://schema.org/Text]
  ///
  /// Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const creditText = IriTerm.prevalidated(
    'https://schema.org/creditText',
  );

  /// IRI for schema:creditedTo [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.
  ///
  /// Can be used on: https://schema.org/MusicRelease
  ///
  static const creditedTo = IriTerm.prevalidated(
    'https://schema.org/creditedTo',
  );

  /// IRI for schema:cssSelector [Expects: https://schema.org/CssSelectorType]
  ///
  /// A CSS selector, e.g. of a {[SpeakableSpecification]} or {[WebPageElement]}. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
  ///
  /// Can be used on: https://schema.org/SpeakableSpecification, https://schema.org/WebPageElement
  ///
  static const cssSelector = IriTerm.prevalidated(
    'https://schema.org/cssSelector',
  );

  /// IRI for schema:currenciesAccepted [Expects: https://schema.org/Text]
  ///
  /// The currency accepted.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/LocalBusiness
  ///
  static const currenciesAccepted = IriTerm.prevalidated(
    'https://schema.org/currenciesAccepted',
  );

  /// IRI for schema:currency [Expects: https://schema.org/Text]
  ///
  /// The currency in which the monetary amount is expressed.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/DatedMoneySpecification, https://schema.org/ExchangeRateSpecification, https://schema.org/LoanOrCredit, https://schema.org/MonetaryAmount, https://schema.org/MonetaryAmountDistribution
  ///
  static const currency = IriTerm.prevalidated('https://schema.org/currency');

  /// IRI for schema:currentExchangeRate [Expects: https://schema.org/UnitPriceSpecification]
  ///
  /// The current price of a currency.
  ///
  /// Can be used on: https://schema.org/ExchangeRateSpecification
  ///
  static const currentExchangeRate = IriTerm.prevalidated(
    'https://schema.org/currentExchangeRate',
  );

  /// IRI for schema:customer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Party placing the order or paying the invoice.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const customer = IriTerm.prevalidated('https://schema.org/customer');

  /// IRI for schema:customerRemorseReturnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees if the product is returned due to customer remorse.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnFees = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnFees',
  );

  /// IRI for schema:customerRemorseReturnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnLabelSource = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnLabelSource',
  );

  /// IRI for schema:customerRemorseReturnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// The amount of shipping costs if a product is returned due to customer remorse. Applicable when property {[customerRemorseReturnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const customerRemorseReturnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/customerRemorseReturnShippingFeesAmount',
  );

  /// IRI for schema:cutoffTime [Expects: https://schema.org/Time]
  ///
  /// Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the {[ShippingRateSettings]} publication pattern. The time is indicated using the ISO-8601 Time format, e.g. "23:30:00-05:00" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).
  ///
  /// Can be used on: https://schema.org/ServicePeriod, https://schema.org/ShippingDeliveryTime
  ///
  static const cutoffTime = IriTerm.prevalidated(
    'https://schema.org/cutoffTime',
  );

  /// IRI for schema:cvdCollectionDate [Expects: https://schema.org/DateTime, https://schema.org/Text]
  ///
  /// collectiondate - Date for which patient counts are reported.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdCollectionDate = IriTerm.prevalidated(
    'https://schema.org/cvdCollectionDate',
  );

  /// IRI for schema:cvdFacilityCounty [Expects: https://schema.org/Text]
  ///
  /// Name of the County of the NHSN facility that this data record applies to. Use {[cvdFacilityId]} to identify the facility. To provide other details, {[healthcareReportingData]} can be used on a {[Hospital]} entry.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdFacilityCounty = IriTerm.prevalidated(
    'https://schema.org/cvdFacilityCounty',
  );

  /// IRI for schema:cvdFacilityId [Expects: https://schema.org/Text]
  ///
  /// Identifier of the NHSN facility that this data record applies to. Use {[cvdFacilityCounty]} to indicate the county. To provide other details, {[healthcareReportingData]} can be used on a {[Hospital]} entry.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdFacilityId = IriTerm.prevalidated(
    'https://schema.org/cvdFacilityId',
  );

  /// IRI for schema:cvdNumBeds [Expects: https://schema.org/Number]
  ///
  /// numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumBeds = IriTerm.prevalidated(
    'https://schema.org/cvdNumBeds',
  );

  /// IRI for schema:cvdNumBedsOcc [Expects: https://schema.org/Number]
  ///
  /// numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumBedsOcc = IriTerm.prevalidated(
    'https://schema.org/cvdNumBedsOcc',
  );

  /// IRI for schema:cvdNumC19Died [Expects: https://schema.org/Number]
  ///
  /// numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19Died = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19Died',
  );

  /// IRI for schema:cvdNumC19HOPats [Expects: https://schema.org/Number]
  ///
  /// numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19HOPats = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19HOPats',
  );

  /// IRI for schema:cvdNumC19HospPats [Expects: https://schema.org/Number]
  ///
  /// numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19HospPats = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19HospPats',
  );

  /// IRI for schema:cvdNumC19MechVentPats [Expects: https://schema.org/Number]
  ///
  /// numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19MechVentPats = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19MechVentPats',
  );

  /// IRI for schema:cvdNumC19OFMechVentPats [Expects: https://schema.org/Number]
  ///
  /// numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19OFMechVentPats = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19OFMechVentPats',
  );

  /// IRI for schema:cvdNumC19OverflowPats [Expects: https://schema.org/Number]
  ///
  /// numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumC19OverflowPats = IriTerm.prevalidated(
    'https://schema.org/cvdNumC19OverflowPats',
  );

  /// IRI for schema:cvdNumICUBeds [Expects: https://schema.org/Number]
  ///
  /// numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumICUBeds = IriTerm.prevalidated(
    'https://schema.org/cvdNumICUBeds',
  );

  /// IRI for schema:cvdNumICUBedsOcc [Expects: https://schema.org/Number]
  ///
  /// numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumICUBedsOcc = IriTerm.prevalidated(
    'https://schema.org/cvdNumICUBedsOcc',
  );

  /// IRI for schema:cvdNumTotBeds [Expects: https://schema.org/Number]
  ///
  /// numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumTotBeds = IriTerm.prevalidated(
    'https://schema.org/cvdNumTotBeds',
  );

  /// IRI for schema:cvdNumVent [Expects: https://schema.org/Number]
  ///
  /// numvent - MECHANICAL VENTILATORS: Total number of ventilators available.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumVent = IriTerm.prevalidated(
    'https://schema.org/cvdNumVent',
  );

  /// IRI for schema:cvdNumVentUse [Expects: https://schema.org/Number]
  ///
  /// numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord
  ///
  static const cvdNumVentUse = IriTerm.prevalidated(
    'https://schema.org/cvdNumVentUse',
  );

  /// IRI for schema:dataFeedElement [Expects: https://schema.org/DataFeedItem, https://schema.org/Text, https://schema.org/Thing]
  ///
  /// An item within a data feed. Data feeds may have many elements.
  ///
  /// Can be used on: https://schema.org/DataFeed
  ///
  static const dataFeedElement = IriTerm.prevalidated(
    'https://schema.org/dataFeedElement',
  );

  /// IRI for schema:datasetTimeInterval [Expects: https://schema.org/DateTime]
  ///
  /// The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
  ///
  /// Can be used on: https://schema.org/Dataset
  ///
  static const datasetTimeInterval = IriTerm.prevalidated(
    'https://schema.org/datasetTimeInterval',
  );

  /// IRI for schema:dateDeleted [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The datetime the item was removed from the DataFeed.
  ///
  /// Can be used on: https://schema.org/DataFeedItem
  ///
  static const dateDeleted = IriTerm.prevalidated(
    'https://schema.org/dateDeleted',
  );

  /// IRI for schema:dateIssued [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date the ticket was issued.
  ///
  /// Can be used on: https://schema.org/Ticket
  ///
  static const dateIssued = IriTerm.prevalidated(
    'https://schema.org/dateIssued',
  );

  /// IRI for schema:dateModified [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/DataFeedItem
  ///
  static const dateModified = IriTerm.prevalidated(
    'https://schema.org/dateModified',
  );

  /// IRI for schema:datePosted [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Publication date of an online listing.
  ///
  /// Can be used on: https://schema.org/CDCPMDRecord, https://schema.org/JobPosting, https://schema.org/RealEstateListing, https://schema.org/SpecialAnnouncement
  ///
  static const datePosted = IriTerm.prevalidated(
    'https://schema.org/datePosted',
  );

  /// IRI for schema:datePublished [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date of first publication or broadcast. For example the date a {[CreativeWork]} was broadcast or a {[Certification]} was issued.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/CreativeWork
  ///
  static const datePublished = IriTerm.prevalidated(
    'https://schema.org/datePublished',
  );

  /// IRI for schema:dateRead [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date/time at which the message has been read by the recipient if a single recipient exists.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const dateRead = IriTerm.prevalidated('https://schema.org/dateRead');

  /// IRI for schema:dateReceived [Expects: https://schema.org/DateTime]
  ///
  /// The date/time the message was received if a single recipient exists.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const dateReceived = IriTerm.prevalidated(
    'https://schema.org/dateReceived',
  );

  /// IRI for schema:dateSent [Expects: https://schema.org/DateTime]
  ///
  /// The date/time at which the message was sent.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const dateSent = IriTerm.prevalidated('https://schema.org/dateSent');

  /// IRI for schema:dateVehicleFirstRegistered [Expects: https://schema.org/Date]
  ///
  /// The date of the first registration of the vehicle with the respective public authorities.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const dateVehicleFirstRegistered = IriTerm.prevalidated(
    'https://schema.org/dateVehicleFirstRegistered',
  );

  /// IRI for schema:dateline [Expects: https://schema.org/Text]
  ///
  /// A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.
  ///
  /// Structured representations of dateline-related information can also be expressed more explicitly using {[locationCreated]} (which represents where a work was created, e.g. where a news report was written).  For location depicted or described in the content, use {[contentLocation]}.
  ///
  /// Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
  ///
  ///
  /// Can be used on: https://schema.org/NewsArticle
  ///
  static const dateline = IriTerm.prevalidated('https://schema.org/dateline');

  /// IRI for schema:dayOfWeek [Expects: https://schema.org/DayOfWeek]
  ///
  /// The day of the week for which these opening hours are valid.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram, https://schema.org/OpeningHoursSpecification
  ///
  static const dayOfWeek = IriTerm.prevalidated('https://schema.org/dayOfWeek');

  /// IRI for schema:deathDate [Expects: https://schema.org/Date]
  ///
  /// Date of death.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const deathDate = IriTerm.prevalidated('https://schema.org/deathDate');

  /// IRI for schema:deathPlace [Expects: https://schema.org/Place]
  ///
  /// The place where the person died.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const deathPlace = IriTerm.prevalidated(
    'https://schema.org/deathPlace',
  );

  /// IRI for schema:defaultValue [Expects: https://schema.org/Text, https://schema.org/Thing]
  ///
  /// The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const defaultValue = IriTerm.prevalidated(
    'https://schema.org/defaultValue',
  );

  /// IRI for schema:deliveryAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// Destination address.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const deliveryAddress = IriTerm.prevalidated(
    'https://schema.org/deliveryAddress',
  );

  /// IRI for schema:deliveryLeadTime [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const deliveryLeadTime = IriTerm.prevalidated(
    'https://schema.org/deliveryLeadTime',
  );

  /// IRI for schema:deliveryMethod [Expects: https://schema.org/DeliveryMethod]
  ///
  /// A sub property of instrument. The method of delivery.
  ///
  /// Can be used on: https://schema.org/OrderAction, https://schema.org/ReceiveAction, https://schema.org/SendAction, https://schema.org/TrackAction
  ///
  static const deliveryMethod = IriTerm.prevalidated(
    'https://schema.org/deliveryMethod',
  );

  /// IRI for schema:deliveryStatus [Expects: https://schema.org/DeliveryEvent]
  ///
  /// New entry added as the package passes through each leg of its journey (from shipment to final delivery).
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const deliveryStatus = IriTerm.prevalidated(
    'https://schema.org/deliveryStatus',
  );

  /// IRI for schema:deliveryTime [Expects: https://schema.org/ShippingDeliveryTime]
  ///
  /// The total delay between the receipt of the order and the goods reaching the final customer.
  ///
  /// Can be used on: https://schema.org/DeliveryTimeSettings, https://schema.org/OfferShippingDetails
  ///
  static const deliveryTime = IriTerm.prevalidated(
    'https://schema.org/deliveryTime',
  );

  /// IRI for schema:department [Expects: https://schema.org/Organization]
  ///
  /// A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const department = IriTerm.prevalidated(
    'https://schema.org/department',
  );

  /// IRI for schema:departureAirport [Expects: https://schema.org/Airport]
  ///
  /// The airport where the flight originates.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const departureAirport = IriTerm.prevalidated(
    'https://schema.org/departureAirport',
  );

  /// IRI for schema:departureBoatTerminal [Expects: https://schema.org/BoatTerminal]
  ///
  /// The terminal or port from which the boat departs.
  ///
  /// Can be used on: https://schema.org/BoatTrip
  ///
  static const departureBoatTerminal = IriTerm.prevalidated(
    'https://schema.org/departureBoatTerminal',
  );

  /// IRI for schema:departureBusStop [Expects: https://schema.org/BusStation, https://schema.org/BusStop]
  ///
  /// The stop or station from which the bus departs.
  ///
  /// Can be used on: https://schema.org/BusTrip
  ///
  static const departureBusStop = IriTerm.prevalidated(
    'https://schema.org/departureBusStop',
  );

  /// IRI for schema:departureGate [Expects: https://schema.org/Text]
  ///
  /// Identifier of the flight's departure gate.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const departureGate = IriTerm.prevalidated(
    'https://schema.org/departureGate',
  );

  /// IRI for schema:departurePlatform [Expects: https://schema.org/Text]
  ///
  /// The platform from which the train departs.
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const departurePlatform = IriTerm.prevalidated(
    'https://schema.org/departurePlatform',
  );

  /// IRI for schema:departureStation [Expects: https://schema.org/TrainStation]
  ///
  /// The station from which the train departs.
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const departureStation = IriTerm.prevalidated(
    'https://schema.org/departureStation',
  );

  /// IRI for schema:departureTerminal [Expects: https://schema.org/Text]
  ///
  /// Identifier of the flight's departure terminal.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const departureTerminal = IriTerm.prevalidated(
    'https://schema.org/departureTerminal',
  );

  /// IRI for schema:departureTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The expected departure time.
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const departureTime = IriTerm.prevalidated(
    'https://schema.org/departureTime',
  );

  /// IRI for schema:dependencies [Expects: https://schema.org/Text]
  ///
  /// Prerequisites needed to fulfill steps in article.
  ///
  /// Can be used on: https://schema.org/TechArticle
  ///
  static const dependencies = IriTerm.prevalidated(
    'https://schema.org/dependencies',
  );

  /// IRI for schema:depth [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The depth of the item.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const depth = IriTerm.prevalidated('https://schema.org/depth');

  /// IRI for schema:device [Expects: https://schema.org/Text]
  ///
  /// Device required to run the application. Used in cases where a specific make/model is required to run the application.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const device = IriTerm.prevalidated('https://schema.org/device');

  /// IRI for schema:diagnosis [Expects: https://schema.org/MedicalCondition]
  ///
  /// One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
  ///
  /// Can be used on: https://schema.org/DDxElement, https://schema.org/Patient
  ///
  static const diagnosis = IriTerm.prevalidated('https://schema.org/diagnosis');

  /// IRI for schema:diagram [Expects: https://schema.org/ImageObject]
  ///
  /// An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure
  ///
  static const diagram = IriTerm.prevalidated('https://schema.org/diagram');

  /// IRI for schema:diet [Expects: https://schema.org/Diet]
  ///
  /// A sub property of instrument. The diet used in this action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const diet = IriTerm.prevalidated('https://schema.org/diet');

  /// IRI for schema:dietFeatures [Expects: https://schema.org/Text]
  ///
  /// Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.
  ///
  /// Can be used on: https://schema.org/Diet
  ///
  static const dietFeatures = IriTerm.prevalidated(
    'https://schema.org/dietFeatures',
  );

  /// IRI for schema:differentialDiagnosis [Expects: https://schema.org/DDxElement]
  ///
  /// One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const differentialDiagnosis = IriTerm.prevalidated(
    'https://schema.org/differentialDiagnosis',
  );

  /// IRI for schema:digitalSourceType [Expects: https://schema.org/IPTCDigitalSourceEnumeration]
  ///
  /// Indicates an IPTCDigitalSourceEnumeration code indicating the nature of the digital source(s) for some {[CreativeWork]}.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const digitalSourceType = IriTerm.prevalidated(
    'https://schema.org/digitalSourceType',
  );

  /// IRI for schema:directApply [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether an {[url]} that is associated with a {[JobPosting]} enables direct application for the job, via the posting website. A job posting is considered to have directApply of {[True]} if an application process for the specified job can be directly initiated via the url(s) given (noting that e.g. multiple internet domains might nevertheless be involved at an implementation level). A value of {[False]} is appropriate if there is no clear path to applying directly online for the specified job, navigating directly from the JobPosting url(s) supplied.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const directApply = IriTerm.prevalidated(
    'https://schema.org/directApply',
  );

  /// IRI for schema:directors [Expects: https://schema.org/Person]
  ///
  /// A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/Episode, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const directors = IriTerm.prevalidated('https://schema.org/directors');

  /// IRI for schema:disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// IRI for schema:discount [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// Any discount applied (to an Order).
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discount = IriTerm.prevalidated('https://schema.org/discount');

  /// IRI for schema:discountCode [Expects: https://schema.org/Text]
  ///
  /// Code used to redeem a discount.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discountCode = IriTerm.prevalidated(
    'https://schema.org/discountCode',
  );

  /// IRI for schema:discountCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency of the discount.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const discountCurrency = IriTerm.prevalidated(
    'https://schema.org/discountCurrency',
  );

  /// IRI for schema:discusses [Expects: https://schema.org/CreativeWork]
  ///
  /// Specifies the CreativeWork associated with the UserComment.
  ///
  /// Can be used on: https://schema.org/UserComments
  ///
  static const discusses = IriTerm.prevalidated('https://schema.org/discusses');

  /// IRI for schema:discussionUrl [Expects: https://schema.org/URL]
  ///
  /// A link to the page containing the comments of the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const discussionUrl = IriTerm.prevalidated(
    'https://schema.org/discussionUrl',
  );

  /// IRI for schema:diseasePreventionInfo [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Information about disease prevention.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const diseasePreventionInfo = IriTerm.prevalidated(
    'https://schema.org/diseasePreventionInfo',
  );

  /// IRI for schema:diseaseSpreadStatistics [Expects: https://schema.org/Dataset, https://schema.org/Observation, https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Statistical information about the spread of a disease, either as {[WebContent]}, or
  /// described directly as a {[Dataset]}, or the specific {[Observation]}s in the dataset. When a {[WebContent]} URL is
  /// provided, the page indicated might also contain more such markup.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const diseaseSpreadStatistics = IriTerm.prevalidated(
    'https://schema.org/diseaseSpreadStatistics',
  );

  /// IRI for schema:dissolutionDate [Expects: https://schema.org/Date]
  ///
  /// The date that this organization was dissolved.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const dissolutionDate = IriTerm.prevalidated(
    'https://schema.org/dissolutionDate',
  );

  /// IRI for schema:distance [Expects: https://schema.org/Distance]
  ///
  /// The distance travelled, e.g. exercising or travelling.
  ///
  /// Can be used on: https://schema.org/ExerciseAction, https://schema.org/TravelAction
  ///
  static const distance = IriTerm.prevalidated('https://schema.org/distance');

  /// IRI for schema:distinguishingSign [Expects: https://schema.org/MedicalSignOrSymptom]
  ///
  /// One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.
  ///
  /// Can be used on: https://schema.org/DDxElement
  ///
  static const distinguishingSign = IriTerm.prevalidated(
    'https://schema.org/distinguishingSign',
  );

  /// IRI for schema:distribution [Expects: https://schema.org/DataDownload]
  ///
  /// A downloadable form of this dataset, at a specific location, in a specific format. This property can be repeated if different variations are available. There is no expectation that different downloadable distributions must contain exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) on this point). Different distributions might include or exclude different subsets of the entire dataset, for example.
  ///
  /// Can be used on: https://schema.org/Dataset
  ///
  static const distribution = IriTerm.prevalidated(
    'https://schema.org/distribution',
  );

  /// IRI for schema:diversityPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Statement on diversity policy by an {[Organization]} e.g. a {[NewsMediaOrganization]}. For a {[NewsMediaOrganization]}, a statement describing the newsroom‚Äôs diversity policy on both staffing and sources, typically providing staffing data.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const diversityPolicy = IriTerm.prevalidated(
    'https://schema.org/diversityPolicy',
  );

  /// IRI for schema:diversityStaffingReport [Expects: https://schema.org/Article, https://schema.org/URL]
  ///
  /// For an {[Organization]} (often but not necessarily a {[NewsMediaOrganization]}), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const diversityStaffingReport = IriTerm.prevalidated(
    'https://schema.org/diversityStaffingReport',
  );

  /// IRI for schema:documentation [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Further documentation describing the Web API in more detail.
  ///
  /// Can be used on: https://schema.org/WebAPI
  ///
  static const documentation = IriTerm.prevalidated(
    'https://schema.org/documentation',
  );

  /// IRI for schema:doesNotShip [Expects: https://schema.org/Boolean]
  ///
  /// Indicates when shipping to a particular {[shippingDestination]} is not available.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const doesNotShip = IriTerm.prevalidated(
    'https://schema.org/doesNotShip',
  );

  /// IRI for schema:domainIncludes [Expects: https://schema.org/Class]
  ///
  /// Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
  ///
  /// Can be used on: https://schema.org/Property
  ///
  static const domainIncludes = IriTerm.prevalidated(
    'https://schema.org/domainIncludes',
  );

  /// IRI for schema:domiciledMortgage [Expects: https://schema.org/Boolean]
  ///
  /// Whether borrower is a resident of the jurisdiction where the property is located.
  ///
  /// Can be used on: https://schema.org/MortgageLoan
  ///
  static const domiciledMortgage = IriTerm.prevalidated(
    'https://schema.org/domiciledMortgage',
  );

  /// IRI for schema:doorTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The time admission will commence.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const doorTime = IriTerm.prevalidated('https://schema.org/doorTime');

  /// IRI for schema:dosageForm [Expects: https://schema.org/Text]
  ///
  /// A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const dosageForm = IriTerm.prevalidated(
    'https://schema.org/dosageForm',
  );

  /// IRI for schema:doseSchedule [Expects: https://schema.org/DoseSchedule]
  ///
  /// A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.
  ///
  /// Can be used on: https://schema.org/Drug, https://schema.org/TherapeuticProcedure
  ///
  static const doseSchedule = IriTerm.prevalidated(
    'https://schema.org/doseSchedule',
  );

  /// IRI for schema:doseUnit [Expects: https://schema.org/Text]
  ///
  /// The unit of the dose, e.g. 'mg'.
  ///
  /// Can be used on: https://schema.org/DoseSchedule
  ///
  static const doseUnit = IriTerm.prevalidated('https://schema.org/doseUnit');

  /// IRI for schema:doseValue [Expects: https://schema.org/Number, https://schema.org/QualitativeValue]
  ///
  /// The value of the dose, e.g. 500.
  ///
  /// Can be used on: https://schema.org/DoseSchedule
  ///
  static const doseValue = IriTerm.prevalidated('https://schema.org/doseValue');

  /// IRI for schema:downPayment [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.
  ///
  /// Can be used on: https://schema.org/RepaymentSpecification
  ///
  static const downPayment = IriTerm.prevalidated(
    'https://schema.org/downPayment',
  );

  /// IRI for schema:downloadUrl [Expects: https://schema.org/URL]
  ///
  /// If the file can be downloaded, URL to download the binary.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const downloadUrl = IriTerm.prevalidated(
    'https://schema.org/downloadUrl',
  );

  /// IRI for schema:downvoteCount [Expects: https://schema.org/Integer]
  ///
  /// The number of downvotes this question, answer or comment has received from the community.
  ///
  /// Can be used on: https://schema.org/Comment
  ///
  static const downvoteCount = IriTerm.prevalidated(
    'https://schema.org/downvoteCount',
  );

  /// IRI for schema:drainsTo [Expects: https://schema.org/Vessel]
  ///
  /// The vasculature that the vein drains into.
  ///
  /// Can be used on: https://schema.org/Vein
  ///
  static const drainsTo = IriTerm.prevalidated('https://schema.org/drainsTo');

  /// IRI for schema:driveWheelConfiguration [Expects: https://schema.org/DriveWheelConfigurationValue, https://schema.org/Text]
  ///
  /// The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const driveWheelConfiguration = IriTerm.prevalidated(
    'https://schema.org/driveWheelConfiguration',
  );

  /// IRI for schema:dropoffLocation [Expects: https://schema.org/Place]
  ///
  /// Where a rental car can be dropped off.
  ///
  /// Can be used on: https://schema.org/RentalCarReservation
  ///
  static const dropoffLocation = IriTerm.prevalidated(
    'https://schema.org/dropoffLocation',
  );

  /// IRI for schema:dropoffTime [Expects: https://schema.org/DateTime]
  ///
  /// When a rental car can be dropped off.
  ///
  /// Can be used on: https://schema.org/RentalCarReservation
  ///
  static const dropoffTime = IriTerm.prevalidated(
    'https://schema.org/dropoffTime',
  );

  /// IRI for schema:drug [Expects: https://schema.org/Drug]
  ///
  /// Specifying a drug or medicine used in a medication procedure.
  ///
  /// Can be used on: https://schema.org/DrugClass, https://schema.org/MedicalCondition, https://schema.org/Patient, https://schema.org/TherapeuticProcedure
  ///
  static const drug = IriTerm.prevalidated('https://schema.org/drug');

  /// IRI for schema:drugClass [Expects: https://schema.org/DrugClass]
  ///
  /// The class of drug this belongs to (e.g., statins).
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const drugClass = IriTerm.prevalidated('https://schema.org/drugClass');

  /// IRI for schema:drugUnit [Expects: https://schema.org/Text]
  ///
  /// The unit in which the drug is measured, e.g. '5 mg tablet'.
  ///
  /// Can be used on: https://schema.org/Drug, https://schema.org/DrugCost
  ///
  static const drugUnit = IriTerm.prevalidated('https://schema.org/drugUnit');

  /// IRI for schema:duns [Expects: https://schema.org/Text]
  ///
  /// The Dun & Bradstreet DUNS number for identifying an organization or business person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const duns = IriTerm.prevalidated('https://schema.org/duns');

  /// IRI for schema:duplicateTherapy [Expects: https://schema.org/MedicalTherapy]
  ///
  /// A therapy that duplicates or overlaps this one.
  ///
  /// Can be used on: https://schema.org/MedicalTherapy
  ///
  static const duplicateTherapy = IriTerm.prevalidated(
    'https://schema.org/duplicateTherapy',
  );

  /// IRI for schema:durationOfWarranty [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
  ///
  /// Can be used on: https://schema.org/WarrantyPromise
  ///
  static const durationOfWarranty = IriTerm.prevalidated(
    'https://schema.org/durationOfWarranty',
  );

  /// IRI for schema:duringMedia [Expects: https://schema.org/MediaObject, https://schema.org/URL]
  ///
  /// A media object representing the circumstances while performing this direction.
  ///
  /// Can be used on: https://schema.org/HowToDirection
  ///
  static const duringMedia = IriTerm.prevalidated(
    'https://schema.org/duringMedia',
  );

  /// IRI for schema:earlyPrepaymentPenalty [Expects: https://schema.org/MonetaryAmount]
  ///
  /// The amount to be paid as a penalty in the event of early payment of the loan.
  ///
  /// Can be used on: https://schema.org/RepaymentSpecification
  ///
  static const earlyPrepaymentPenalty = IriTerm.prevalidated(
    'https://schema.org/earlyPrepaymentPenalty',
  );

  /// IRI for schema:editEIDR [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) {[identifier]} representing a specific edit / edition for a work of film or television.
  ///
  /// For example, the motion picture known as "Ghostbusters" whose {[titleEIDR]} is "10.5240/7EC7-228A-510A-053E-CBB8-J" has several edits, e.g. "10.5240/1F2A-E1C5-680A-14C6-E76B-I" and "10.5240/8A35-3BEE-6497-5D12-9E4F-3".
  ///
  /// Since schema.org types like {[Movie]} and {[TVEpisode]} can be used for both works and their multiple expressions, it is possible to use {[titleEIDR]} alone (for a general description), or alongside {[editEIDR]} for a more edit-specific description.
  ///
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const editEIDR = IriTerm.prevalidated('https://schema.org/editEIDR');

  /// IRI for schema:editor [Expects: https://schema.org/Person]
  ///
  /// Specifies the Person who edited the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const editor = IriTerm.prevalidated('https://schema.org/editor');

  /// IRI for schema:eduQuestionType [Expects: https://schema.org/Text]
  ///
  /// For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: "Multiple choice", "Open ended", "Flashcard".
  ///
  /// Can be used on: https://schema.org/Question, https://schema.org/SolveMathAction
  ///
  static const eduQuestionType = IriTerm.prevalidated(
    'https://schema.org/eduQuestionType',
  );

  /// IRI for schema:educationRequirements [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text]
  ///
  /// Educational background needed for the position or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const educationRequirements = IriTerm.prevalidated(
    'https://schema.org/educationRequirements',
  );

  /// IRI for schema:educationalAlignment [Expects: https://schema.org/AlignmentObject]
  ///
  /// An alignment to an established educational framework.
  ///
  /// This property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource {[teaches]} or {[assesses]} a competency.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/LearningResource
  ///
  static const educationalAlignment = IriTerm.prevalidated(
    'https://schema.org/educationalAlignment',
  );

  /// IRI for schema:educationalCredentialAwarded [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.
  ///
  /// Can be used on: https://schema.org/Course, https://schema.org/EducationalOccupationalProgram
  ///
  static const educationalCredentialAwarded = IriTerm.prevalidated(
    'https://schema.org/educationalCredentialAwarded',
  );

  /// IRI for schema:educationalFramework [Expects: https://schema.org/Text]
  ///
  /// The framework to which the resource being described is aligned.
  ///
  /// Can be used on: https://schema.org/AlignmentObject
  ///
  static const educationalFramework = IriTerm.prevalidated(
    'https://schema.org/educationalFramework',
  );

  /// IRI for schema:educationalLevel [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/EducationEvent, https://schema.org/EducationalOccupationalCredential, https://schema.org/LearningResource
  ///
  static const educationalLevel = IriTerm.prevalidated(
    'https://schema.org/educationalLevel',
  );

  /// IRI for schema:educationalProgramMode [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Similar to courseMode, the medium or means of delivery of the program as a whole. The value may either be a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const educationalProgramMode = IriTerm.prevalidated(
    'https://schema.org/educationalProgramMode',
  );

  /// IRI for schema:educationalRole [Expects: https://schema.org/Text]
  ///
  /// An educationalRole of an EducationalAudience.
  ///
  /// Can be used on: https://schema.org/EducationalAudience
  ///
  static const educationalRole = IriTerm.prevalidated(
    'https://schema.org/educationalRole',
  );

  /// IRI for schema:educationalUse [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The purpose of a work in the context of education; for example, 'assignment', 'group work'.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/LearningResource
  ///
  static const educationalUse = IriTerm.prevalidated(
    'https://schema.org/educationalUse',
  );

  /// IRI for schema:elevation [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT\_OF\_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/GeoShape
  ///
  static const elevation = IriTerm.prevalidated('https://schema.org/elevation');

  /// IRI for schema:eligibilityToWorkRequirement [Expects: https://schema.org/Text]
  ///
  /// The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const eligibilityToWorkRequirement = IriTerm.prevalidated(
    'https://schema.org/eligibilityToWorkRequirement',
  );

  /// IRI for schema:eligibleCustomerType [Expects: https://schema.org/BusinessEntityType]
  ///
  /// The type(s) of customers for which the given offer is valid.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const eligibleCustomerType = IriTerm.prevalidated(
    'https://schema.org/eligibleCustomerType',
  );

  /// IRI for schema:eligibleDuration [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The duration for which the given offer is valid.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const eligibleDuration = IriTerm.prevalidated(
    'https://schema.org/eligibleDuration',
  );

  /// IRI for schema:eligibleQuantity [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/PriceSpecification
  ///
  static const eligibleQuantity = IriTerm.prevalidated(
    'https://schema.org/eligibleQuantity',
  );

  /// IRI for schema:eligibleRegion [Expects: https://schema.org/GeoShape, https://schema.org/Place, https://schema.org/Text]
  ///
  /// The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n\nSee also {[ineligibleRegion]}.
  ///
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/DeliveryChargeSpecification, https://schema.org/Demand, https://schema.org/Offer
  ///
  static const eligibleRegion = IriTerm.prevalidated(
    'https://schema.org/eligibleRegion',
  );

  /// IRI for schema:eligibleTransactionVolume [Expects: https://schema.org/PriceSpecification]
  ///
  /// The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/PriceSpecification
  ///
  static const eligibleTransactionVolume = IriTerm.prevalidated(
    'https://schema.org/eligibleTransactionVolume',
  );

  /// IRI for schema:eligibleWithSupplier [Expects: https://schema.org/Organization]
  ///
  /// The supplier of the incentivized item/service for which the incentive is valid for such as a utility company, merchant, or contractor.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const eligibleWithSupplier = IriTerm.prevalidated(
    'https://schema.org/eligibleWithSupplier',
  );

  /// IRI for schema:email [Expects: https://schema.org/Text]
  ///
  /// Email address.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person
  ///
  static const email = IriTerm.prevalidated('https://schema.org/email');

  /// IRI for schema:embedUrl [Expects: https://schema.org/URL]
  ///
  /// A URL pointing to a player for a specific video. In general, this is the information in the ```src``` element of an ```embed``` tag and should not be the same as the content of the ```loc``` tag.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const embedUrl = IriTerm.prevalidated('https://schema.org/embedUrl');

  /// IRI for schema:embeddedTextCaption [Expects: https://schema.org/Text]
  ///
  /// Represents textual captioning from a {[MediaObject]}, e.g. text of a 'meme'.
  ///
  /// Can be used on: https://schema.org/AudioObject, https://schema.org/ImageObject, https://schema.org/VideoObject
  ///
  static const embeddedTextCaption = IriTerm.prevalidated(
    'https://schema.org/embeddedTextCaption',
  );

  /// IRI for schema:emissionsCO2 [Expects: https://schema.org/Number]
  ///
  /// The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put "g/km" into the unitText property of that value, since there is no UN/CEFACT Common Code for "g/km".
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const emissionsCO2 = IriTerm.prevalidated(
    'https://schema.org/emissionsCO2',
  );

  /// IRI for schema:employees [Expects: https://schema.org/Person]
  ///
  /// People working for this organization.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const employees = IriTerm.prevalidated('https://schema.org/employees');

  /// IRI for schema:employerOverview [Expects: https://schema.org/Text]
  ///
  /// A description of the employer, career opportunities and work environment for this position.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const employerOverview = IriTerm.prevalidated(
    'https://schema.org/employerOverview',
  );

  /// IRI for schema:employmentType [Expects: https://schema.org/Text]
  ///
  /// Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const employmentType = IriTerm.prevalidated(
    'https://schema.org/employmentType',
  );

  /// IRI for schema:employmentUnit [Expects: https://schema.org/Organization]
  ///
  /// Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const employmentUnit = IriTerm.prevalidated(
    'https://schema.org/employmentUnit',
  );

  /// IRI for schema:encodingType [Expects: https://schema.org/Text]
  ///
  /// The supported encoding type(s) for an EntryPoint request.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const encodingType = IriTerm.prevalidated(
    'https://schema.org/encodingType',
  );

  /// IRI for schema:encodings [Expects: https://schema.org/MediaObject]
  ///
  /// A media object that encodes this CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const encodings = IriTerm.prevalidated('https://schema.org/encodings');

  /// IRI for schema:endDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const endDate = IriTerm.prevalidated('https://schema.org/endDate');

  /// IRI for schema:endOffset [Expects: https://schema.org/HyperTocEntry, https://schema.org/Number]
  ///
  /// The end time of the clip expressed as the number of seconds from the beginning of the work.
  ///
  /// Can be used on: https://schema.org/Clip
  ///
  static const endOffset = IriTerm.prevalidated('https://schema.org/endOffset');

  /// IRI for schema:endTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. E.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
  ///
  /// Can be used on: https://schema.org/Action, https://schema.org/FoodEstablishmentReservation, https://schema.org/InteractionCounter, https://schema.org/MediaObject, https://schema.org/Schedule
  ///
  static const endTime = IriTerm.prevalidated('https://schema.org/endTime');

  /// IRI for schema:endorsee [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The person/organization being supported.
  ///
  /// Can be used on: https://schema.org/EndorseAction
  ///
  static const endorsee = IriTerm.prevalidated('https://schema.org/endorsee');

  /// IRI for schema:endorsers [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// People or organizations that endorse the plan.
  ///
  /// Can be used on: https://schema.org/Diet
  ///
  static const endorsers = IriTerm.prevalidated('https://schema.org/endorsers');

  /// IRI for schema:energyEfficiencyScaleMax [Expects: https://schema.org/EUEnergyEfficiencyEnumeration]
  ///
  /// Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.
  ///
  /// Can be used on: https://schema.org/EnergyConsumptionDetails
  ///
  static const energyEfficiencyScaleMax = IriTerm.prevalidated(
    'https://schema.org/energyEfficiencyScaleMax',
  );

  /// IRI for schema:energyEfficiencyScaleMin [Expects: https://schema.org/EUEnergyEfficiencyEnumeration]
  ///
  /// Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.
  ///
  /// Can be used on: https://schema.org/EnergyConsumptionDetails
  ///
  static const energyEfficiencyScaleMin = IriTerm.prevalidated(
    'https://schema.org/energyEfficiencyScaleMin',
  );

  /// IRI for schema:engineDisplacement [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \n\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\n* Note 1: You can link to information about how the given value has been determined using the {[valueReference]} property.\n* Note 2: You can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/EngineSpecification
  ///
  static const engineDisplacement = IriTerm.prevalidated(
    'https://schema.org/engineDisplacement',
  );

  /// IRI for schema:enginePower [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The power of the vehicle's engine.
  /// Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\n\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine\_power\_test\_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\n* Note 2: You can link to information about how the given value has been determined using the {[valueReference]} property.\n* Note 3: You can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/EngineSpecification
  ///
  static const enginePower = IriTerm.prevalidated(
    'https://schema.org/enginePower',
  );

  /// IRI for schema:engineType [Expects: https://schema.org/QualitativeValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The type of engine or engines powering the vehicle.
  ///
  /// Can be used on: https://schema.org/EngineSpecification
  ///
  static const engineType = IriTerm.prevalidated(
    'https://schema.org/engineType',
  );

  /// IRI for schema:entertainmentBusiness [Expects: https://schema.org/EntertainmentBusiness]
  ///
  /// A sub property of location. The entertainment business where the action occurred.
  ///
  /// Can be used on: https://schema.org/PerformAction
  ///
  static const entertainmentBusiness = IriTerm.prevalidated(
    'https://schema.org/entertainmentBusiness',
  );

  /// IRI for schema:epidemiology [Expects: https://schema.org/Text]
  ///
  /// The characteristics of associated patients, such as age, gender, race etc.
  ///
  /// Can be used on: https://schema.org/MedicalCondition, https://schema.org/PhysicalActivity
  ///
  static const epidemiology = IriTerm.prevalidated(
    'https://schema.org/epidemiology',
  );

  /// IRI for schema:episodeNumber [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// Position of the episode within an ordered group of episodes.
  ///
  /// Can be used on: https://schema.org/Episode
  ///
  static const episodeNumber = IriTerm.prevalidated(
    'https://schema.org/episodeNumber',
  );

  /// IRI for schema:episodes [Expects: https://schema.org/Episode]
  ///
  /// An episode of a TV/radio series or season.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const episodes = IriTerm.prevalidated('https://schema.org/episodes');

  /// IRI for schema:equal [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is equal to the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const equal = IriTerm.prevalidated('https://schema.org/equal');

  /// IRI for schema:error [Expects: https://schema.org/Thing]
  ///
  /// For failed actions, more information on the cause of the failure.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const error = IriTerm.prevalidated('https://schema.org/error');

  /// IRI for schema:estimatedCost [Expects: https://schema.org/MonetaryAmount, https://schema.org/Text]
  ///
  /// The estimated cost of the supply or supplies consumed when performing instructions.
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToSupply
  ///
  static const estimatedCost = IriTerm.prevalidated(
    'https://schema.org/estimatedCost',
  );

  /// IRI for schema:estimatedFlightDuration [Expects: https://schema.org/Duration, https://schema.org/Text]
  ///
  /// The estimated time the flight will take.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const estimatedFlightDuration = IriTerm.prevalidated(
    'https://schema.org/estimatedFlightDuration',
  );

  /// IRI for schema:estimatedSalary [Expects: https://schema.org/MonetaryAmount, https://schema.org/MonetaryAmountDistribution, https://schema.org/Number]
  ///
  /// An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const estimatedSalary = IriTerm.prevalidated(
    'https://schema.org/estimatedSalary',
  );

  /// IRI for schema:estimatesRiskOf [Expects: https://schema.org/MedicalEntity]
  ///
  /// The condition, complication, or symptom whose risk is being estimated.
  ///
  /// Can be used on: https://schema.org/MedicalRiskEstimator
  ///
  static const estimatesRiskOf = IriTerm.prevalidated(
    'https://schema.org/estimatesRiskOf',
  );

  /// IRI for schema:ethicsPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Statement about ethics policy, e.g. of a {[NewsMediaOrganization]} regarding journalistic and publishing practices, or of a {[Restaurant]}, a page describing food source policies. In the case of a {[NewsMediaOrganization]}, an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const ethicsPolicy = IriTerm.prevalidated(
    'https://schema.org/ethicsPolicy',
  );

  /// IRI for schema:eventAttendanceMode [Expects: https://schema.org/EventAttendanceModeEnumeration]
  ///
  /// The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const eventAttendanceMode = IriTerm.prevalidated(
    'https://schema.org/eventAttendanceMode',
  );

  /// IRI for schema:eventSchedule [Expects: https://schema.org/Schedule]
  ///
  /// Associates an {[Event]} with a {[Schedule]}. There are circumstances where it is preferable to share a schedule for a series of
  /// repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
  /// gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An {[Event]} that
  /// is associated with a {[Schedule]} using this property should not have {[startDate]} or {[endDate]} properties. These are instead defined within the associated
  /// {[Schedule]}, this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months
  /// or seasons.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const eventSchedule = IriTerm.prevalidated(
    'https://schema.org/eventSchedule',
  );

  /// IRI for schema:eventStatus [Expects: https://schema.org/EventStatusType]
  ///
  /// An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const eventStatus = IriTerm.prevalidated(
    'https://schema.org/eventStatus',
  );

  /// IRI for schema:events [Expects: https://schema.org/Event]
  ///
  /// Upcoming or past events associated with this place or organization.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Place
  ///
  static const events = IriTerm.prevalidated('https://schema.org/events');

  /// IRI for schema:evidenceLevel [Expects: https://schema.org/MedicalEvidenceLevel]
  ///
  /// Strength of evidence of the data used to formulate the guideline (enumerated).
  ///
  /// Can be used on: https://schema.org/MedicalGuideline
  ///
  static const evidenceLevel = IriTerm.prevalidated(
    'https://schema.org/evidenceLevel',
  );

  /// IRI for schema:evidenceOrigin [Expects: https://schema.org/Text]
  ///
  /// Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.
  ///
  /// Can be used on: https://schema.org/MedicalGuideline
  ///
  static const evidenceOrigin = IriTerm.prevalidated(
    'https://schema.org/evidenceOrigin',
  );

  /// IRI for schema:exceptDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Defines a {[Date]} or {[DateTime]} during which a scheduled {[Event]} will not take place. The property allows exceptions to
  /// a {[Schedule]} to be specified. If an exception is specified as a {[DateTime]} then only the event that would have started at that specific date and time
  /// should be excluded from the schedule. If an exception is specified as a {[Date]} then any event that is scheduled for that 24 hour period should be
  /// excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const exceptDate = IriTerm.prevalidated(
    'https://schema.org/exceptDate',
  );

  /// IRI for schema:exchangeRateSpread [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// The difference between the price at which a broker or other intermediary buys and sells foreign currency.
  ///
  /// Can be used on: https://schema.org/ExchangeRateSpecification
  ///
  static const exchangeRateSpread = IriTerm.prevalidated(
    'https://schema.org/exchangeRateSpread',
  );

  /// IRI for schema:exercisePlan [Expects: https://schema.org/ExercisePlan]
  ///
  /// A sub property of instrument. The exercise plan used on this action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const exercisePlan = IriTerm.prevalidated(
    'https://schema.org/exercisePlan',
  );

  /// IRI for schema:exerciseRelatedDiet [Expects: https://schema.org/Diet]
  ///
  /// A sub property of instrument. The diet used in this action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const exerciseRelatedDiet = IriTerm.prevalidated(
    'https://schema.org/exerciseRelatedDiet',
  );

  /// IRI for schema:exerciseType [Expects: https://schema.org/Text]
  ///
  /// Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.
  ///
  /// Can be used on: https://schema.org/ExerciseAction, https://schema.org/ExercisePlan
  ///
  static const exerciseType = IriTerm.prevalidated(
    'https://schema.org/exerciseType',
  );

  /// IRI for schema:exifData [Expects: https://schema.org/PropertyValue, https://schema.org/Text]
  ///
  /// exif data for this object.
  ///
  /// Can be used on: https://schema.org/ImageObject
  ///
  static const exifData = IriTerm.prevalidated('https://schema.org/exifData');

  /// IRI for schema:expectedArrivalFrom [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The earliest date the package may arrive.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const expectedArrivalFrom = IriTerm.prevalidated(
    'https://schema.org/expectedArrivalFrom',
  );

  /// IRI for schema:expectedArrivalUntil [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The latest date the package may arrive.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const expectedArrivalUntil = IriTerm.prevalidated(
    'https://schema.org/expectedArrivalUntil',
  );

  /// IRI for schema:expectedPrognosis [Expects: https://schema.org/Text]
  ///
  /// The likely outcome in either the short term or long term of the medical condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const expectedPrognosis = IriTerm.prevalidated(
    'https://schema.org/expectedPrognosis',
  );

  /// IRI for schema:expectsAcceptanceOf [Expects: https://schema.org/Offer]
  ///
  /// An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/ConsumeAction, https://schema.org/MediaSubscription
  ///
  static const expectsAcceptanceOf = IriTerm.prevalidated(
    'https://schema.org/expectsAcceptanceOf',
  );

  /// IRI for schema:experienceInPlaceOfEducation [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether a {[JobPosting]} will accept experience (as indicated by {[OccupationalExperienceRequirements]}) in place of its formal educational qualifications (as indicated by {[educationRequirements]}). If true, indicates that satisfying one of these requirements is sufficient.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const experienceInPlaceOfEducation = IriTerm.prevalidated(
    'https://schema.org/experienceInPlaceOfEducation',
  );

  /// IRI for schema:experienceRequirements [Expects: https://schema.org/OccupationalExperienceRequirements, https://schema.org/Text]
  ///
  /// Description of skills and experience needed for the position or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const experienceRequirements = IriTerm.prevalidated(
    'https://schema.org/experienceRequirements',
  );

  /// IRI for schema:expertConsiderations [Expects: https://schema.org/Text]
  ///
  /// Medical expert advice related to the plan.
  ///
  /// Can be used on: https://schema.org/Diet
  ///
  static const expertConsiderations = IriTerm.prevalidated(
    'https://schema.org/expertConsiderations',
  );

  /// IRI for schema:expires [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date the content expires and is no longer useful or available. For example a {[VideoObject]} or {[NewsArticle]} whose availability or relevance is time-limited, a {[ClaimReview]} fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date, or a {[Certification]} the validity has expired.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/CreativeWork
  ///
  static const expires = IriTerm.prevalidated('https://schema.org/expires');

  /// IRI for schema:expressedIn [Expects: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem, https://schema.org/BioChemEntity, https://schema.org/DefinedTerm]
  ///
  /// Tissue, organ, biological sample, etc in which activity of this gene has been observed experimentally. For example brain, digestive system.
  ///
  /// Can be used on: https://schema.org/Gene
  ///
  static const expressedIn = IriTerm.prevalidated(
    'https://schema.org/expressedIn',
  );

  /// IRI for schema:extendedAddress [Expects: https://schema.org/Text]
  ///
  /// An address extension such as an apartment number, C/O or alternative name.
  ///
  /// Can be used on: https://schema.org/PostalAddress
  ///
  static const extendedAddress = IriTerm.prevalidated(
    'https://schema.org/extendedAddress',
  );

  /// IRI for schema:familyName [Expects: https://schema.org/Text]
  ///
  /// Family name. In the U.S., the last name of a Person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const familyName = IriTerm.prevalidated(
    'https://schema.org/familyName',
  );

  /// IRI for schema:fatContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of fat.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const fatContent = IriTerm.prevalidated(
    'https://schema.org/fatContent',
  );

  /// IRI for schema:faxNumber [Expects: https://schema.org/Text]
  ///
  /// The fax number.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const faxNumber = IriTerm.prevalidated('https://schema.org/faxNumber');

  /// IRI for schema:featureList [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Features or modules provided by this application (and possibly required by other applications).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const featureList = IriTerm.prevalidated(
    'https://schema.org/featureList',
  );

  /// IRI for schema:feesAndCommissionsSpecification [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.
  ///
  /// Can be used on: https://schema.org/FinancialProduct, https://schema.org/FinancialService
  ///
  static const feesAndCommissionsSpecification = IriTerm.prevalidated(
    'https://schema.org/feesAndCommissionsSpecification',
  );

  /// IRI for schema:fiberContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of fiber.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const fiberContent = IriTerm.prevalidated(
    'https://schema.org/fiberContent',
  );

  /// IRI for schema:fileFormat [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content, e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const fileFormat = IriTerm.prevalidated(
    'https://schema.org/fileFormat',
  );

  /// IRI for schema:fileSize [Expects: https://schema.org/Text]
  ///
  /// Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const fileSize = IriTerm.prevalidated('https://schema.org/fileSize');

  /// IRI for schema:financialAidEligible [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// A financial aid type or program which students may use to pay for tuition or fees associated with the program.
  ///
  /// Can be used on: https://schema.org/Course, https://schema.org/EducationalOccupationalProgram
  ///
  static const financialAidEligible = IriTerm.prevalidated(
    'https://schema.org/financialAidEligible',
  );

  /// IRI for schema:firstAppearance [Expects: https://schema.org/CreativeWork]
  ///
  /// Indicates the first known occurrence of a {[Claim]} in some {[CreativeWork]}.
  ///
  /// Can be used on: https://schema.org/Claim
  ///
  static const firstAppearance = IriTerm.prevalidated(
    'https://schema.org/firstAppearance',
  );

  /// IRI for schema:firstPerformance [Expects: https://schema.org/Event]
  ///
  /// The date and place the work was first performed.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const firstPerformance = IriTerm.prevalidated(
    'https://schema.org/firstPerformance',
  );

  /// IRI for schema:flightDistance [Expects: https://schema.org/Distance, https://schema.org/Text]
  ///
  /// The distance of the flight.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const flightDistance = IriTerm.prevalidated(
    'https://schema.org/flightDistance',
  );

  /// IRI for schema:flightNumber [Expects: https://schema.org/Text]
  ///
  /// The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const flightNumber = IriTerm.prevalidated(
    'https://schema.org/flightNumber',
  );

  /// IRI for schema:floorLevel [Expects: https://schema.org/Text]
  ///
  /// The floor level for an {[Accommodation]} in a multi-storey building. Since counting
  /// systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.
  ///
  /// Can be used on: https://schema.org/Accommodation
  ///
  static const floorLevel = IriTerm.prevalidated(
    'https://schema.org/floorLevel',
  );

  /// IRI for schema:floorLimit [Expects: https://schema.org/MonetaryAmount]
  ///
  /// A floor limit is the amount of money above which credit card transactions must be authorized.
  ///
  /// Can be used on: https://schema.org/PaymentCard
  ///
  static const floorLimit = IriTerm.prevalidated(
    'https://schema.org/floorLimit',
  );

  /// IRI for schema:floorSize [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The size of the accommodation, e.g. in square meter or squarefoot.
  /// Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan
  ///
  static const floorSize = IriTerm.prevalidated('https://schema.org/floorSize');

  /// IRI for schema:followee [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of object. The person or organization being followed.
  ///
  /// Can be used on: https://schema.org/FollowAction
  ///
  static const followee = IriTerm.prevalidated('https://schema.org/followee');

  /// IRI for schema:follows [Expects: https://schema.org/Person]
  ///
  /// The most generic uni-directional social relation.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const follows = IriTerm.prevalidated('https://schema.org/follows');

  /// IRI for schema:followup [Expects: https://schema.org/Text]
  ///
  /// Typical or recommended followup care after the procedure is performed.
  ///
  /// Can be used on: https://schema.org/MedicalProcedure
  ///
  static const followup = IriTerm.prevalidated('https://schema.org/followup');

  /// IRI for schema:foodEstablishment [Expects: https://schema.org/FoodEstablishment, https://schema.org/Place]
  ///
  /// A sub property of location. The specific food establishment where the action occurred.
  ///
  /// Can be used on: https://schema.org/CookAction
  ///
  static const foodEstablishment = IriTerm.prevalidated(
    'https://schema.org/foodEstablishment',
  );

  /// IRI for schema:foodEvent [Expects: https://schema.org/FoodEvent]
  ///
  /// A sub property of location. The specific food event where the action occurred.
  ///
  /// Can be used on: https://schema.org/CookAction
  ///
  static const foodEvent = IriTerm.prevalidated('https://schema.org/foodEvent');

  /// IRI for schema:foodWarning [Expects: https://schema.org/Text]
  ///
  /// Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const foodWarning = IriTerm.prevalidated(
    'https://schema.org/foodWarning',
  );

  /// IRI for schema:founders [Expects: https://schema.org/Person]
  ///
  /// A person who founded this organization.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const founders = IriTerm.prevalidated('https://schema.org/founders');

  /// IRI for schema:foundingDate [Expects: https://schema.org/Date]
  ///
  /// The date that this organization was founded.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const foundingDate = IriTerm.prevalidated(
    'https://schema.org/foundingDate',
  );

  /// IRI for schema:foundingLocation [Expects: https://schema.org/Place]
  ///
  /// The place where the Organization was founded.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const foundingLocation = IriTerm.prevalidated(
    'https://schema.org/foundingLocation',
  );

  /// IRI for schema:free [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the item, event, or place is accessible for free.
  ///
  /// Can be used on: https://schema.org/PublicationEvent
  ///
  static const free = IriTerm.prevalidated('https://schema.org/free');

  /// IRI for schema:freeShippingThreshold [Expects: https://schema.org/DeliveryChargeSpecification, https://schema.org/MonetaryAmount]
  ///
  /// A monetary value above (or at) which the shipping rate becomes free. Intended to be used via an {[OfferShippingDetails]} with {[shippingSettingsLink]} matching this {[ShippingRateSettings]}.
  ///
  /// Can be used on: https://schema.org/ShippingRateSettings
  ///
  static const freeShippingThreshold = IriTerm.prevalidated(
    'https://schema.org/freeShippingThreshold',
  );

  /// IRI for schema:fromLocation [Expects: https://schema.org/Place]
  ///
  /// A sub property of location. The original location of the object or the agent before the action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction, https://schema.org/MoveAction, https://schema.org/TransferAction
  ///
  static const fromLocation = IriTerm.prevalidated(
    'https://schema.org/fromLocation',
  );

  /// IRI for schema:fuelCapacity [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\n\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const fuelCapacity = IriTerm.prevalidated(
    'https://schema.org/fuelCapacity',
  );

  /// IRI for schema:fuelConsumption [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\n\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use {[unitText]} to indicate the unit of measurement, e.g. L/100 km.\n* Note 2: There are two ways of indicating the fuel consumption, {[fuelConsumption]} (e.g. 8 liters per 100 km) and {[fuelEfficiency]} (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use {[valueReference]} to link the value for the fuel consumption to another value.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const fuelConsumption = IriTerm.prevalidated(
    'https://schema.org/fuelConsumption',
  );

  /// IRI for schema:fuelEfficiency [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\n\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use {[unitText]} to indicate the unit of measurement, e.g. mpg or km/L.\n* Note 2: There are two ways of indicating the fuel consumption, {[fuelConsumption]} (e.g. 8 liters per 100 km) and {[fuelEfficiency]} (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use {[valueReference]} to link the value for the fuel economy to another value.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const fuelEfficiency = IriTerm.prevalidated(
    'https://schema.org/fuelEfficiency',
  );

  /// IRI for schema:fuelType [Expects: https://schema.org/QualitativeValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
  ///
  /// Can be used on: https://schema.org/EngineSpecification, https://schema.org/Vehicle
  ///
  static const fuelType = IriTerm.prevalidated('https://schema.org/fuelType');

  /// IRI for schema:fulfillmentType [Expects: https://schema.org/FulfillmentTypeEnumeration]
  ///
  /// Type of fulfillment applicable to the {[ShippingService]}.
  ///
  /// Can be used on: https://schema.org/ShippingService
  ///
  static const fulfillmentType = IriTerm.prevalidated(
    'https://schema.org/fulfillmentType',
  );

  /// IRI for schema:functionalClass [Expects: https://schema.org/MedicalEntity, https://schema.org/Text]
  ///
  /// The degree of mobility the joint allows.
  ///
  /// Can be used on: https://schema.org/Joint
  ///
  static const functionalClass = IriTerm.prevalidated(
    'https://schema.org/functionalClass',
  );

  /// IRI for schema:funder [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization that supports (sponsors) something through some kind of financial contribution.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Grant, https://schema.org/MonetaryGrant, https://schema.org/Organization, https://schema.org/Person
  ///
  static const funder = IriTerm.prevalidated('https://schema.org/funder');

  /// IRI for schema:gameAvailabilityType [Expects: https://schema.org/GameAvailabilityEnumeration, https://schema.org/Text]
  ///
  /// Indicates the availability type of the game content associated with this action, such as whether it is a full version or a demo.
  ///
  /// Can be used on: https://schema.org/PlayGameAction
  ///
  static const gameAvailabilityType = IriTerm.prevalidated(
    'https://schema.org/gameAvailabilityType',
  );

  /// IRI for schema:gameEdition [Expects: https://schema.org/Text]
  ///
  /// The edition of a video game.
  ///
  /// Can be used on: https://schema.org/VideoGame
  ///
  static const gameEdition = IriTerm.prevalidated(
    'https://schema.org/gameEdition',
  );

  /// IRI for schema:gameItem [Expects: https://schema.org/Thing]
  ///
  /// An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
  ///
  /// Can be used on: https://schema.org/Game, https://schema.org/VideoGameSeries
  ///
  static const gameItem = IriTerm.prevalidated('https://schema.org/gameItem');

  /// IRI for schema:gameLocation [Expects: https://schema.org/Place, https://schema.org/PostalAddress, https://schema.org/URL]
  ///
  /// Real or fictional location of the game (or part of game).
  ///
  /// Can be used on: https://schema.org/Game, https://schema.org/VideoGameSeries
  ///
  static const gameLocation = IriTerm.prevalidated(
    'https://schema.org/gameLocation',
  );

  /// IRI for schema:gamePlatform [Expects: https://schema.org/Text, https://schema.org/Thing, https://schema.org/URL]
  ///
  /// The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
  ///
  /// Can be used on: https://schema.org/VideoGame, https://schema.org/VideoGameSeries
  ///
  static const gamePlatform = IriTerm.prevalidated(
    'https://schema.org/gamePlatform',
  );

  /// IRI for schema:gameTip [Expects: https://schema.org/CreativeWork]
  ///
  /// Links to tips, tactics, etc.
  ///
  /// Can be used on: https://schema.org/VideoGame
  ///
  static const gameTip = IriTerm.prevalidated('https://schema.org/gameTip');

  /// IRI for schema:gender [Expects: https://schema.org/GenderType, https://schema.org/Text]
  ///
  /// Gender of something, typically a {[Person]}, but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The {[gender]} property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender {[SportsTeam]} can be indicated with a text value of "Mixed".
  ///
  /// Can be used on: https://schema.org/Person, https://schema.org/SportsTeam
  ///
  static const gender = IriTerm.prevalidated('https://schema.org/gender');

  /// IRI for schema:geo [Expects: https://schema.org/GeoCoordinates, https://schema.org/GeoShape]
  ///
  /// The geo coordinates of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const geo = IriTerm.prevalidated('https://schema.org/geo');

  /// IRI for schema:geoContains [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoContains = IriTerm.prevalidated(
    'https://schema.org/geoContains',
  );

  /// IRI for schema:geoCoveredBy [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCoveredBy = IriTerm.prevalidated(
    'https://schema.org/geoCoveredBy',
  );

  /// IRI for schema:geoCovers [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCovers = IriTerm.prevalidated('https://schema.org/geoCovers');

  /// IRI for schema:geoCrosses [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCrosses = IriTerm.prevalidated(
    'https://schema.org/geoCrosses',
  );

  /// IRI for schema:geoDisjoint [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: "they have no point in common. They form a set of disconnected geometries." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoDisjoint = IriTerm.prevalidated(
    'https://schema.org/geoDisjoint',
  );

  /// IRI for schema:geoEquals [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoEquals = IriTerm.prevalidated('https://schema.org/geoEquals');

  /// IRI for schema:geoIntersects [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoIntersects = IriTerm.prevalidated(
    'https://schema.org/geoIntersects',
  );

  /// IRI for schema:geoMidpoint [Expects: https://schema.org/GeoCoordinates]
  ///
  /// Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.
  ///
  /// Can be used on: https://schema.org/GeoCircle
  ///
  static const geoMidpoint = IriTerm.prevalidated(
    'https://schema.org/geoMidpoint',
  );

  /// IRI for schema:geoOverlaps [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoOverlaps = IriTerm.prevalidated(
    'https://schema.org/geoOverlaps',
  );

  /// IRI for schema:geoRadius [Expects: https://schema.org/Distance, https://schema.org/Number, https://schema.org/Text]
  ///
  /// Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).
  ///
  /// Can be used on: https://schema.org/GeoCircle
  ///
  static const geoRadius = IriTerm.prevalidated('https://schema.org/geoRadius');

  /// IRI for schema:geoTouches [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) touch: "they have at least one boundary point in common, but no interior points." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoTouches = IriTerm.prevalidated(
    'https://schema.org/geoTouches',
  );

  /// IRI for schema:geoWithin [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoWithin = IriTerm.prevalidated('https://schema.org/geoWithin');

  /// IRI for schema:geographicArea [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The geographic area associated with the audience.
  ///
  /// Can be used on: https://schema.org/Audience
  ///
  static const geographicArea = IriTerm.prevalidated(
    'https://schema.org/geographicArea',
  );

  /// IRI for schema:gettingTestedInfo [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Information about getting tested (for a {[MedicalCondition]}), e.g. in the context of a pandemic.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const gettingTestedInfo = IriTerm.prevalidated(
    'https://schema.org/gettingTestedInfo',
  );

  /// IRI for schema:givenName [Expects: https://schema.org/Text]
  ///
  /// Given name. In the U.S., the first name of a Person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const givenName = IriTerm.prevalidated('https://schema.org/givenName');

  /// IRI for schema:globalLocationNumber [Expects: https://schema.org/Text]
  ///
  /// The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const globalLocationNumber = IriTerm.prevalidated(
    'https://schema.org/globalLocationNumber',
  );

  /// IRI for schema:governmentBenefitsInfo [Expects: https://schema.org/GovernmentService]
  ///
  /// governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const governmentBenefitsInfo = IriTerm.prevalidated(
    'https://schema.org/governmentBenefitsInfo',
  );

  /// IRI for schema:gracePeriod [Expects: https://schema.org/Duration]
  ///
  /// The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const gracePeriod = IriTerm.prevalidated(
    'https://schema.org/gracePeriod',
  );

  /// IRI for schema:grantee [Expects: https://schema.org/Audience, https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person, organization, contact point, or audience that has been granted this permission.
  ///
  /// Can be used on: https://schema.org/DigitalDocumentPermission
  ///
  static const grantee = IriTerm.prevalidated('https://schema.org/grantee');

  /// IRI for schema:greater [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is greater than the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const greater = IriTerm.prevalidated('https://schema.org/greater');

  /// IRI for schema:greaterOrEqual [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const greaterOrEqual = IriTerm.prevalidated(
    'https://schema.org/greaterOrEqual',
  );

  /// IRI for schema:gtin12 [Expects: https://schema.org/Text]
  ///
  /// The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const gtin12 = IriTerm.prevalidated('https://schema.org/gtin12');

  /// IRI for schema:gtin13 [Expects: https://schema.org/Text]
  ///
  /// The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const gtin13 = IriTerm.prevalidated('https://schema.org/gtin13');

  /// IRI for schema:gtin14 [Expects: https://schema.org/Text]
  ///
  /// The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const gtin14 = IriTerm.prevalidated('https://schema.org/gtin14');

  /// IRI for schema:gtin8 [Expects: https://schema.org/Text]
  ///
  /// The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const gtin8 = IriTerm.prevalidated('https://schema.org/gtin8');

  /// IRI for schema:guideline [Expects: https://schema.org/MedicalGuideline]
  ///
  /// A medical guideline related to this entity.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const guideline = IriTerm.prevalidated('https://schema.org/guideline');

  /// IRI for schema:guidelineDate [Expects: https://schema.org/Date]
  ///
  /// Date on which this guideline's recommendation was made.
  ///
  /// Can be used on: https://schema.org/MedicalGuideline
  ///
  static const guidelineDate = IriTerm.prevalidated(
    'https://schema.org/guidelineDate',
  );

  /// IRI for schema:guidelineSubject [Expects: https://schema.org/MedicalEntity]
  ///
  /// The medical conditions, treatments, etc. that are the subject of the guideline.
  ///
  /// Can be used on: https://schema.org/MedicalGuideline
  ///
  static const guidelineSubject = IriTerm.prevalidated(
    'https://schema.org/guidelineSubject',
  );

  /// IRI for schema:handlingTime [Expects: https://schema.org/QuantitativeValue, https://schema.org/ServicePeriod]
  ///
  /// The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
  ///
  /// In the context of {[ShippingDeliveryTime]}, Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as "d"), i.e. only counting days when the business normally operates.
  ///
  /// In the context of {[ShippingService]}, use the {[ServicePeriod]} format, that contains the same information in a structured form, with cut-off time, business days and duration.
  ///
  /// Can be used on: https://schema.org/ShippingDeliveryTime, https://schema.org/ShippingService
  ///
  static const handlingTime = IriTerm.prevalidated(
    'https://schema.org/handlingTime',
  );

  /// IRI for schema:hasAdultConsideration [Expects: https://schema.org/AdultOrientedEnumeration]
  ///
  /// Used to tag an item to be intended or suitable for consumption or use by adults only.
  ///
  /// Can be used on: https://schema.org/Offer, https://schema.org/Product
  ///
  static const hasAdultConsideration = IriTerm.prevalidated(
    'https://schema.org/hasAdultConsideration',
  );

  /// IRI for schema:hasBioPolymerSequence [Expects: https://schema.org/Text]
  ///
  /// A symbolic representation of a BioChemEntity. For example, a nucleotide sequence of a Gene or an amino acid sequence of a Protein.
  ///
  /// Can be used on: https://schema.org/Gene, https://schema.org/Protein
  ///
  static const hasBioPolymerSequence = IriTerm.prevalidated(
    'https://schema.org/hasBioPolymerSequence',
  );

  /// IRI for schema:hasCategoryCode [Expects: https://schema.org/CategoryCode]
  ///
  /// A Category code contained in this code set.
  ///
  /// Can be used on: https://schema.org/CategoryCodeSet
  ///
  static const hasCategoryCode = IriTerm.prevalidated(
    'https://schema.org/hasCategoryCode',
  );

  /// IRI for schema:hasCertification [Expects: https://schema.org/Certification]
  ///
  /// Certification information about a product, organization, service, place, or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const hasCertification = IriTerm.prevalidated(
    'https://schema.org/hasCertification',
  );

  /// IRI for schema:hasCourse [Expects: https://schema.org/Course]
  ///
  /// A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const hasCourse = IriTerm.prevalidated('https://schema.org/hasCourse');

  /// IRI for schema:hasCourseInstance [Expects: https://schema.org/CourseInstance]
  ///
  /// An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.
  ///
  /// Can be used on: https://schema.org/Course
  ///
  static const hasCourseInstance = IriTerm.prevalidated(
    'https://schema.org/hasCourseInstance',
  );

  /// IRI for schema:hasCredential [Expects: https://schema.org/EducationalOccupationalCredential]
  ///
  /// A credential awarded to the Person or Organization.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const hasCredential = IriTerm.prevalidated(
    'https://schema.org/hasCredential',
  );

  /// IRI for schema:hasDeliveryMethod [Expects: https://schema.org/DeliveryMethod]
  ///
  /// Method used for delivery or shipping.
  ///
  /// Can be used on: https://schema.org/DeliveryEvent, https://schema.org/ParcelDelivery
  ///
  static const hasDeliveryMethod = IriTerm.prevalidated(
    'https://schema.org/hasDeliveryMethod',
  );

  /// IRI for schema:hasDigitalDocumentPermission [Expects: https://schema.org/DigitalDocumentPermission]
  ///
  /// A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public".
  ///
  /// Can be used on: https://schema.org/DigitalDocument
  ///
  static const hasDigitalDocumentPermission = IriTerm.prevalidated(
    'https://schema.org/hasDigitalDocumentPermission',
  );

  /// IRI for schema:hasDriveThroughService [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether some facility (e.g. {[FoodEstablishment]}, {[CovidTestingFacility]}) offers a service that can be used by driving through in a car. In the case of {[CovidTestingFacility]} such facilities could potentially help with social distancing from other potentially-infected users.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const hasDriveThroughService = IriTerm.prevalidated(
    'https://schema.org/hasDriveThroughService',
  );

  /// IRI for schema:hasEnergyConsumptionDetails [Expects: https://schema.org/EnergyConsumptionDetails]
  ///
  /// Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const hasEnergyConsumptionDetails = IriTerm.prevalidated(
    'https://schema.org/hasEnergyConsumptionDetails',
  );

  /// IRI for schema:hasEnergyEfficiencyCategory [Expects: https://schema.org/EnergyEfficiencyEnumeration]
  ///
  /// Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.
  ///
  /// Can be used on: https://schema.org/EnergyConsumptionDetails
  ///
  static const hasEnergyEfficiencyCategory = IriTerm.prevalidated(
    'https://schema.org/hasEnergyEfficiencyCategory',
  );

  /// IRI for schema:hasGS1DigitalLink [Expects: https://schema.org/URL]
  ///
  /// The <a href="https://www.gs1.org/standards/gs1-digital-link">GS1 digital link</a> associated with the object. This URL should conform to the particular requirements of digital links. The link should only contain the Application Identifiers (AIs) that are relevant for the entity being annotated, for instance a {[Product]} or an {[Organization]}, and for the correct granularity. In particular, for products:<ul><li>A Digital Link that contains a serial number (AI <code>21</code>) should only be present on instances of {[IndividualProduct]}</li><li>A Digital Link that contains a lot number (AI <code>10</code>) should be annotated as {[SomeProduct]} if only products from that lot are sold, or {[IndividualProduct]} if there is only a specific product.</li><li>A Digital Link that contains a global model number (AI <code>8013</code>)  should be attached to a {[Product]} or a {[ProductModel]}.</li></ul> Other item types should be adapted similarly.
  ///
  /// Can be used on: https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const hasGS1DigitalLink = IriTerm.prevalidated(
    'https://schema.org/hasGS1DigitalLink',
  );

  /// IRI for schema:hasHealthAspect [Expects: https://schema.org/HealthAspectEnumeration]
  ///
  /// Indicates the aspect or aspects specifically addressed in some {[HealthTopicContent]}. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.
  ///
  /// Can be used on: https://schema.org/HealthTopicContent
  ///
  static const hasHealthAspect = IriTerm.prevalidated(
    'https://schema.org/hasHealthAspect',
  );

  /// IRI for schema:hasMeasurement [Expects: https://schema.org/QuantitativeValue]
  ///
  /// A measurement of an item, For example, the inseam of pants, the wheel size of a bicycle, the gauge of a screw, or the carbon footprint measured for certification by an authority. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Offer, https://schema.org/Product, https://schema.org/SizeSpecification
  ///
  static const hasMeasurement = IriTerm.prevalidated(
    'https://schema.org/hasMeasurement',
  );

  /// IRI for schema:hasMemberProgram [Expects: https://schema.org/MemberProgram]
  ///
  /// MemberProgram offered by an Organization, for example an eCommerce merchant or an airline.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const hasMemberProgram = IriTerm.prevalidated(
    'https://schema.org/hasMemberProgram',
  );

  /// IRI for schema:hasMenuItem [Expects: https://schema.org/MenuItem]
  ///
  /// A food or drink item contained in a menu or menu section.
  ///
  /// Can be used on: https://schema.org/Menu, https://schema.org/MenuSection
  ///
  static const hasMenuItem = IriTerm.prevalidated(
    'https://schema.org/hasMenuItem',
  );

  /// IRI for schema:hasMenuSection [Expects: https://schema.org/MenuSection]
  ///
  /// A subgrouping of the menu (by dishes, course, serving time period, etc.).
  ///
  /// Can be used on: https://schema.org/Menu, https://schema.org/MenuSection
  ///
  static const hasMenuSection = IriTerm.prevalidated(
    'https://schema.org/hasMenuSection',
  );

  /// IRI for schema:hasMerchantReturnPolicy [Expects: https://schema.org/MerchantReturnPolicy]
  ///
  /// Specifies a MerchantReturnPolicy that may be applicable.
  ///
  /// Can be used on: https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Product
  ///
  static const hasMerchantReturnPolicy = IriTerm.prevalidated(
    'https://schema.org/hasMerchantReturnPolicy',
  );

  /// IRI for schema:hasMolecularFunction [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasMolecularFunction = IriTerm.prevalidated(
    'https://schema.org/hasMolecularFunction',
  );

  /// IRI for schema:hasOccupation [Expects: https://schema.org/Occupation]
  ///
  /// The Person's occupation. For past professions, use Role for expressing dates.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const hasOccupation = IriTerm.prevalidated(
    'https://schema.org/hasOccupation',
  );

  /// IRI for schema:hasOfferCatalog [Expects: https://schema.org/OfferCatalog]
  ///
  /// Indicates an OfferCatalog listing for this Organization, Person, or Service.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Service
  ///
  static const hasOfferCatalog = IriTerm.prevalidated(
    'https://schema.org/hasOfferCatalog',
  );

  /// IRI for schema:hasPOS [Expects: https://schema.org/Place]
  ///
  /// Points-of-Sales operated by the organization or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const hasPOS = IriTerm.prevalidated('https://schema.org/hasPOS');

  /// IRI for schema:hasShippingService [Expects: https://schema.org/ShippingService]
  ///
  /// Specification of a shipping service offered by the organization.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Organization
  ///
  static const hasShippingService = IriTerm.prevalidated(
    'https://schema.org/hasShippingService',
  );

  /// IRI for schema:hasTierBenefit [Expects: https://schema.org/TierBenefitEnumeration]
  ///
  /// A member benefit for a particular tier of a loyalty program.
  ///
  /// Can be used on: https://schema.org/MemberProgramTier
  ///
  static const hasTierBenefit = IriTerm.prevalidated(
    'https://schema.org/hasTierBenefit',
  );

  /// IRI for schema:hasTierRequirement [Expects: https://schema.org/CreditCard, https://schema.org/MonetaryAmount, https://schema.org/Text, https://schema.org/UnitPriceSpecification]
  ///
  /// A requirement for a user to join a membership tier, for example: a CreditCard if the tier requires sign up for a credit card, A UnitPriceSpecification if the user is required to pay a (periodic) fee, or a MonetaryAmount if the user needs to spend a minimum amount to join the tier. If a tier is free to join then this property does not need to be specified.
  ///
  /// Can be used on: https://schema.org/MemberProgramTier
  ///
  static const hasTierRequirement = IriTerm.prevalidated(
    'https://schema.org/hasTierRequirement',
  );

  /// IRI for schema:headline [Expects: https://schema.org/Text]
  ///
  /// Headline of the article.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const headline = IriTerm.prevalidated('https://schema.org/headline');

  /// IRI for schema:healthCondition [Expects: https://schema.org/MedicalCondition]
  ///
  /// Specifying the health condition(s) of a patient, medical study, or other target audience.
  ///
  /// Can be used on: https://schema.org/MedicalStudy, https://schema.org/Patient, https://schema.org/PeopleAudience
  ///
  static const healthCondition = IriTerm.prevalidated(
    'https://schema.org/healthCondition',
  );

  /// IRI for schema:healthPlanCoinsuranceOption [Expects: https://schema.org/Text]
  ///
  /// Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?
  ///
  /// Can be used on: https://schema.org/HealthPlanCostSharingSpecification
  ///
  static const healthPlanCoinsuranceOption = IriTerm.prevalidated(
    'https://schema.org/healthPlanCoinsuranceOption',
  );

  /// IRI for schema:healthPlanCoinsuranceRate [Expects: https://schema.org/Number]
  ///
  /// The rate of coinsurance expressed as a number between 0.0 and 1.0.
  ///
  /// Can be used on: https://schema.org/HealthPlanCostSharingSpecification
  ///
  static const healthPlanCoinsuranceRate = IriTerm.prevalidated(
    'https://schema.org/healthPlanCoinsuranceRate',
  );

  /// IRI for schema:healthPlanCopay [Expects: https://schema.org/PriceSpecification]
  ///
  /// The copay amount.
  ///
  /// Can be used on: https://schema.org/HealthPlanCostSharingSpecification
  ///
  static const healthPlanCopay = IriTerm.prevalidated(
    'https://schema.org/healthPlanCopay',
  );

  /// IRI for schema:healthPlanCopayOption [Expects: https://schema.org/Text]
  ///
  /// Whether the copay is before or after deductible, etc. TODO: Is this a closed set?
  ///
  /// Can be used on: https://schema.org/HealthPlanCostSharingSpecification
  ///
  static const healthPlanCopayOption = IriTerm.prevalidated(
    'https://schema.org/healthPlanCopayOption',
  );

  /// IRI for schema:healthPlanCostSharing [Expects: https://schema.org/Boolean]
  ///
  /// The costs to the patient for services under this network or formulary.
  ///
  /// Can be used on: https://schema.org/HealthPlanFormulary, https://schema.org/HealthPlanNetwork
  ///
  static const healthPlanCostSharing = IriTerm.prevalidated(
    'https://schema.org/healthPlanCostSharing',
  );

  /// IRI for schema:healthPlanDrugOption [Expects: https://schema.org/Text]
  ///
  /// TODO.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const healthPlanDrugOption = IriTerm.prevalidated(
    'https://schema.org/healthPlanDrugOption',
  );

  /// IRI for schema:healthPlanDrugTier [Expects: https://schema.org/Text]
  ///
  /// The tier(s) of drugs offered by this formulary or insurance plan.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan, https://schema.org/HealthPlanFormulary
  ///
  static const healthPlanDrugTier = IriTerm.prevalidated(
    'https://schema.org/healthPlanDrugTier',
  );

  /// IRI for schema:healthPlanId [Expects: https://schema.org/Text]
  ///
  /// The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const healthPlanId = IriTerm.prevalidated(
    'https://schema.org/healthPlanId',
  );

  /// IRI for schema:healthPlanMarketingUrl [Expects: https://schema.org/URL]
  ///
  /// The URL that goes directly to the plan brochure for the specific standard plan or plan variation.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const healthPlanMarketingUrl = IriTerm.prevalidated(
    'https://schema.org/healthPlanMarketingUrl',
  );

  /// IRI for schema:healthPlanNetworkId [Expects: https://schema.org/Text]
  ///
  /// Name or unique ID of network. (Networks are often reused across different insurance plans.)
  ///
  /// Can be used on: https://schema.org/HealthPlanNetwork, https://schema.org/MedicalOrganization
  ///
  static const healthPlanNetworkId = IriTerm.prevalidated(
    'https://schema.org/healthPlanNetworkId',
  );

  /// IRI for schema:healthPlanNetworkTier [Expects: https://schema.org/Text]
  ///
  /// The tier(s) for this network.
  ///
  /// Can be used on: https://schema.org/HealthPlanNetwork
  ///
  static const healthPlanNetworkTier = IriTerm.prevalidated(
    'https://schema.org/healthPlanNetworkTier',
  );

  /// IRI for schema:healthPlanPharmacyCategory [Expects: https://schema.org/Text]
  ///
  /// The category or type of pharmacy associated with this cost sharing.
  ///
  /// Can be used on: https://schema.org/HealthPlanCostSharingSpecification
  ///
  static const healthPlanPharmacyCategory = IriTerm.prevalidated(
    'https://schema.org/healthPlanPharmacyCategory',
  );

  /// IRI for schema:healthcareReportingData [Expects: https://schema.org/CDCPMDRecord, https://schema.org/Dataset]
  ///
  /// Indicates data describing a hospital, e.g. a CDC {[CDCPMDRecord]} or as some kind of {[Dataset]}.
  ///
  /// Can be used on: https://schema.org/Hospital
  ///
  static const healthcareReportingData = IriTerm.prevalidated(
    'https://schema.org/healthcareReportingData',
  );

  /// IRI for schema:height [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The height of the item.
  ///
  /// Can be used on: https://schema.org/MediaObject, https://schema.org/OfferShippingDetails, https://schema.org/Person, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const height = IriTerm.prevalidated('https://schema.org/height');

  /// IRI for schema:highPrice [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The highest price of all offers available.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/AggregateOffer
  ///
  static const highPrice = IriTerm.prevalidated('https://schema.org/highPrice');

  /// IRI for schema:hiringOrganization [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Organization or Person offering the job position.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const hiringOrganization = IriTerm.prevalidated(
    'https://schema.org/hiringOrganization',
  );

  /// IRI for schema:homeLocation [Expects: https://schema.org/ContactPoint, https://schema.org/Place]
  ///
  /// A contact location for a person's residence.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const homeLocation = IriTerm.prevalidated(
    'https://schema.org/homeLocation',
  );

  /// IRI for schema:homeTeam [Expects: https://schema.org/Person, https://schema.org/SportsTeam]
  ///
  /// The home team in a sports event.
  ///
  /// Can be used on: https://schema.org/SportsEvent
  ///
  static const homeTeam = IriTerm.prevalidated('https://schema.org/homeTeam');

  /// IRI for schema:honorificPrefix [Expects: https://schema.org/Text]
  ///
  /// An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const honorificPrefix = IriTerm.prevalidated(
    'https://schema.org/honorificPrefix',
  );

  /// IRI for schema:honorificSuffix [Expects: https://schema.org/Text]
  ///
  /// An honorific suffix following a Person's name such as M.D./PhD/MSCSW.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const honorificSuffix = IriTerm.prevalidated(
    'https://schema.org/honorificSuffix',
  );

  /// IRI for schema:hospitalAffiliation [Expects: https://schema.org/Hospital]
  ///
  /// A hospital with which the physician or office is affiliated.
  ///
  /// Can be used on: https://schema.org/Physician
  ///
  static const hospitalAffiliation = IriTerm.prevalidated(
    'https://schema.org/hospitalAffiliation',
  );

  /// IRI for schema:hostingOrganization [Expects: https://schema.org/Organization]
  ///
  /// The Organization (airline, travelers' club, retailer, etc.) the membership is made with or which offers the  MemberProgram.
  ///
  /// Can be used on: https://schema.org/MemberProgram, https://schema.org/ProgramMembership
  ///
  static const hostingOrganization = IriTerm.prevalidated(
    'https://schema.org/hostingOrganization',
  );

  /// IRI for schema:hoursAvailable [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// The hours during which this service or contact is available.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/LocationFeatureSpecification, https://schema.org/Service
  ///
  static const hoursAvailable = IriTerm.prevalidated(
    'https://schema.org/hoursAvailable',
  );

  /// IRI for schema:howPerformed [Expects: https://schema.org/Text]
  ///
  /// How the procedure is performed.
  ///
  /// Can be used on: https://schema.org/MedicalProcedure
  ///
  static const howPerformed = IriTerm.prevalidated(
    'https://schema.org/howPerformed',
  );

  /// IRI for schema:httpMethod [Expects: https://schema.org/Text]
  ///
  /// An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const httpMethod = IriTerm.prevalidated(
    'https://schema.org/httpMethod',
  );

  /// IRI for schema:iataCode [Expects: https://schema.org/Text]
  ///
  /// IATA identifier for an airline or airport.
  ///
  /// Can be used on: https://schema.org/Airline, https://schema.org/Airport
  ///
  static const iataCode = IriTerm.prevalidated('https://schema.org/iataCode');

  /// IRI for schema:icaoCode [Expects: https://schema.org/Text]
  ///
  /// ICAO identifier for an airport.
  ///
  /// Can be used on: https://schema.org/Airport
  ///
  static const icaoCode = IriTerm.prevalidated('https://schema.org/icaoCode');

  /// IRI for schema:identifyingExam [Expects: https://schema.org/PhysicalExam]
  ///
  /// A physical examination that can identify this sign.
  ///
  /// Can be used on: https://schema.org/MedicalSign
  ///
  static const identifyingExam = IriTerm.prevalidated(
    'https://schema.org/identifyingExam',
  );

  /// IRI for schema:identifyingTest [Expects: https://schema.org/MedicalTest]
  ///
  /// A diagnostic test that can identify this sign.
  ///
  /// Can be used on: https://schema.org/MedicalSign
  ///
  static const identifyingTest = IriTerm.prevalidated(
    'https://schema.org/identifyingTest',
  );

  /// IRI for schema:illustrator [Expects: https://schema.org/Person]
  ///
  /// The illustrator of the book.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const illustrator = IriTerm.prevalidated(
    'https://schema.org/illustrator',
  );

  /// IRI for schema:imagingTechnique [Expects: https://schema.org/MedicalImagingTechnique]
  ///
  /// Imaging technique used.
  ///
  /// Can be used on: https://schema.org/ImagingTest
  ///
  static const imagingTechnique = IriTerm.prevalidated(
    'https://schema.org/imagingTechnique',
  );

  /// IRI for schema:inAlbum [Expects: https://schema.org/MusicAlbum]
  ///
  /// The album to which this recording belongs.
  ///
  /// Can be used on: https://schema.org/MusicRecording
  ///
  static const inAlbum = IriTerm.prevalidated('https://schema.org/inAlbum');

  /// IRI for schema:inBroadcastLineup [Expects: https://schema.org/CableOrSatelliteService]
  ///
  /// The CableOrSatelliteService offering the channel.
  ///
  /// Can be used on: https://schema.org/BroadcastChannel
  ///
  static const inBroadcastLineup = IriTerm.prevalidated(
    'https://schema.org/inBroadcastLineup',
  );

  /// IRI for schema:inChI [Expects: https://schema.org/Text]
  ///
  /// Non-proprietary identifier for molecular entity that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const inChI = IriTerm.prevalidated('https://schema.org/inChI');

  /// IRI for schema:inChIKey [Expects: https://schema.org/Text]
  ///
  /// InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const inChIKey = IriTerm.prevalidated('https://schema.org/inChIKey');

  /// IRI for schema:inCodeSet [Expects: https://schema.org/CategoryCodeSet, https://schema.org/URL]
  ///
  /// A {[CategoryCodeSet]} that contains this category code.
  ///
  /// Can be used on: https://schema.org/CategoryCode
  ///
  static const inCodeSet = IriTerm.prevalidated('https://schema.org/inCodeSet');

  /// IRI for schema:inPlaylist [Expects: https://schema.org/MusicPlaylist]
  ///
  /// The playlist to which this recording belongs.
  ///
  /// Can be used on: https://schema.org/MusicRecording
  ///
  static const inPlaylist = IriTerm.prevalidated(
    'https://schema.org/inPlaylist',
  );

  /// IRI for schema:inProductGroupWithID [Expects: https://schema.org/Text]
  ///
  /// Indicates the {[productGroupID]} for a {[ProductGroup]} that this product {[isVariantOf]}.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const inProductGroupWithID = IriTerm.prevalidated(
    'https://schema.org/inProductGroupWithID',
  );

  /// IRI for schema:inStoreReturnsOffered [Expects: https://schema.org/Boolean]
  ///
  /// Are in-store returns offered? (For more advanced return methods use the {[returnMethod]} property.)
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const inStoreReturnsOffered = IriTerm.prevalidated(
    'https://schema.org/inStoreReturnsOffered',
  );

  /// IRI for schema:inSupportOf [Expects: https://schema.org/Text]
  ///
  /// Qualification, candidature, degree, application that Thesis supports.
  ///
  /// Can be used on: https://schema.org/Thesis
  ///
  static const inSupportOf = IriTerm.prevalidated(
    'https://schema.org/inSupportOf',
  );

  /// IRI for schema:incentiveAmount [Expects: https://schema.org/LoanOrCredit, https://schema.org/QuantitativeValue, https://schema.org/UnitPriceSpecification]
  ///
  /// Describes the amount that can be redeemed from this incentive.
  ///
  /// <p>{[QuantitativeValue]}: Use this for incentives based on price (either raw amount or percentage-based). For a raw amount example, "You can claim $2,500 - $7,500 from the total cost of installation" would be represented as the following:</p>
  /// {
  /// "@type": "QuantitativeValue",
  /// ‚ÄúminValue‚Äù: 2500,
  /// ‚ÄúmaxValue‚Äù: 7500,
  /// "unitCode": "USD"
  /// }
  /// <p>{[QuantitivateValue]} can also be used for percentage amounts. In such cases, value is used to represent the incentive‚Äôs percentage, while maxValue represents a limit (if one exists) to that incentive. The unitCode should be 'P1' and the unitText should be '%', while valueReference should be used for holding the currency type. For example, "You can claim up to 30% of the total cost of installation, up to a maximum of $7,500" would be:</p>
  /// {
  /// "@type": "QuantitativeValue",
  /// "value": 30,
  /// "unitCode": "P1",
  /// "unitText": "%",
  /// ‚ÄúmaxValue‚Äù: 7500,
  /// ‚ÄúvalueReference‚Äù: ‚ÄúUSD‚Äù
  /// }
  /// <p>{[UnitPriceSpecification]}: Use this for incentives that are based on amounts rather than price. For example, a net metering rebate that pays $10/kWh, up to $1,000:</p>
  /// {
  /// "@type": "UnitPriceSpecification",
  /// "price": 10,
  /// "priceCurrency": "USD",
  /// "referenceQuantity": 1,
  /// "unitCode": "DO3",
  /// "unitText": "kw/h",
  /// "maxPrice": 1000,
  /// "description": "$10 / kwh up to $1000"
  /// }
  /// <p>{[LoanOrCredit]}: Use for incentives that are loan based. For example, a loan of $4,000 - $50,000 with a repayment term of 10 years, interest free would look like:</p>
  /// {
  /// "@type": "LoanOrCredit",
  /// "loanTerm": {
  /// "@type":"QuantitativeValue",
  /// "value":"10",
  /// "unitCode": "ANN"
  /// },
  /// "amount":[
  /// {
  /// "@type": "QuantitativeValue",
  /// "Name":"fixed interest rate",
  /// "value":"0",
  /// },
  /// ],
  /// "amount":[
  /// {
  /// "@type": "MonetaryAmount",
  /// "Name":"min loan amount",
  /// "value":"4000",
  /// "currency":"CAD"
  /// },
  /// {
  /// "@type": "MonetaryAmount",
  /// "Name":"max loan amount",
  /// "value":"50000",
  /// "currency":"CAD"
  /// }
  /// ],
  /// }
  ///
  /// In summary: <ul><li>Use {[QuantitativeValue]} for absolute/percentage-based incentives applied on the price of a good/service.</li>
  /// <li>Use {[UnitPriceSpecification]} for incentives based on a per-unit basis (e.g. net metering).</li>
  /// <li>Use {[LoanOrCredit]} for loans/credits.</li>
  /// </ul>.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const incentiveAmount = IriTerm.prevalidated(
    'https://schema.org/incentiveAmount',
  );

  /// IRI for schema:incentiveStatus [Expects: https://schema.org/IncentiveStatus]
  ///
  /// The status of the incentive (active, on hold, retired, etc.).
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const incentiveStatus = IriTerm.prevalidated(
    'https://schema.org/incentiveStatus',
  );

  /// IRI for schema:incentiveType [Expects: https://schema.org/IncentiveType]
  ///
  /// The type of incentive offered (tax credit/rebate, tax deduction, tax waiver, subsidies, etc.).
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const incentiveType = IriTerm.prevalidated(
    'https://schema.org/incentiveType',
  );

  /// IRI for schema:incentives [Expects: https://schema.org/Text]
  ///
  /// Description of bonus and commission compensation aspects of the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const incentives = IriTerm.prevalidated(
    'https://schema.org/incentives',
  );

  /// IRI for schema:incentivizedItem [Expects: https://schema.org/DefinedTerm, https://schema.org/Product]
  ///
  /// The type or specific product(s) and/or service(s) being incentivized.
  /// <p>DefinedTermSets are used for product and service categories such as the United Nations Standard Products and Services Code:</p>
  /// {
  /// "@type": "DefinedTerm",
  /// "inDefinedTermSet": "https://www.unspsc.org/",
  /// "termCode": "261315XX",
  /// "name": "Photovoltaic module"
  /// }
  ///
  /// <p>For a specific product or service, use the Product type:</p>
  /// {
  /// "@type": "Product",
  /// "name": "Kenmore White 17" Microwave",
  /// }
  /// For multiple different incentivized items, use multiple {[DefinedTerm]} or {[Product]}.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const incentivizedItem = IriTerm.prevalidated(
    'https://schema.org/incentivizedItem',
  );

  /// IRI for schema:includedComposition [Expects: https://schema.org/MusicComposition]
  ///
  /// Smaller compositions included in this work (e.g. a movement in a symphony).
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const includedComposition = IriTerm.prevalidated(
    'https://schema.org/includedComposition',
  );

  /// IRI for schema:includedDataCatalog [Expects: https://schema.org/DataCatalog]
  ///
  /// A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').
  ///
  /// Can be used on: https://schema.org/Dataset
  ///
  static const includedDataCatalog = IriTerm.prevalidated(
    'https://schema.org/includedDataCatalog',
  );

  /// IRI for schema:includedInHealthInsurancePlan [Expects: https://schema.org/HealthInsurancePlan]
  ///
  /// The insurance plans that cover this drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const includedInHealthInsurancePlan = IriTerm.prevalidated(
    'https://schema.org/includedInHealthInsurancePlan',
  );

  /// IRI for schema:includedRiskFactor [Expects: https://schema.org/MedicalRiskFactor]
  ///
  /// A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.
  ///
  /// Can be used on: https://schema.org/MedicalRiskEstimator
  ///
  static const includedRiskFactor = IriTerm.prevalidated(
    'https://schema.org/includedRiskFactor',
  );

  /// IRI for schema:includesAttraction [Expects: https://schema.org/TouristAttraction]
  ///
  /// Attraction located at destination.
  ///
  /// Can be used on: https://schema.org/TouristDestination
  ///
  static const includesAttraction = IriTerm.prevalidated(
    'https://schema.org/includesAttraction',
  );

  /// IRI for schema:includesHealthPlanFormulary [Expects: https://schema.org/HealthPlanFormulary]
  ///
  /// Formularies covered by this plan.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const includesHealthPlanFormulary = IriTerm.prevalidated(
    'https://schema.org/includesHealthPlanFormulary',
  );

  /// IRI for schema:includesHealthPlanNetwork [Expects: https://schema.org/HealthPlanNetwork]
  ///
  /// Networks covered by this plan.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const includesHealthPlanNetwork = IriTerm.prevalidated(
    'https://schema.org/includesHealthPlanNetwork',
  );

  /// IRI for schema:includesObject [Expects: https://schema.org/TypeAndQuantityNode]
  ///
  /// This links to a node or nodes indicating the exact quantity of the products included in  an {[Offer]} or {[ProductCollection]}.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/ProductCollection
  ///
  static const includesObject = IriTerm.prevalidated(
    'https://schema.org/includesObject',
  );

  /// IRI for schema:incomeLimit [Expects: https://schema.org/MonetaryAmount, https://schema.org/Text]
  ///
  /// Optional. Income limit for which the incentive is applicable for.
  ///
  /// <p>If MonetaryAmount is specified, this should be based on annualized income (e.g. if an incentive is limited to those making <$114,000 annually):</p>
  /// {
  /// "@type": "MonetaryAmount",
  /// "maxValue": 114000,
  /// "currency": "USD",
  /// }
  ///
  /// Use Text for incentives that are limited based on other criteria, for example if an incentive is only available to recipients making 120% of the median poverty income in their area.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const incomeLimit = IriTerm.prevalidated(
    'https://schema.org/incomeLimit',
  );

  /// IRI for schema:increasesRiskOf [Expects: https://schema.org/MedicalEntity]
  ///
  /// The condition, complication, etc. influenced by this factor.
  ///
  /// Can be used on: https://schema.org/MedicalRiskFactor
  ///
  static const increasesRiskOf = IriTerm.prevalidated(
    'https://schema.org/increasesRiskOf',
  );

  /// IRI for schema:industry [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The industry associated with the job position.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const industry = IriTerm.prevalidated('https://schema.org/industry');

  /// IRI for schema:ineligibleRegion [Expects: https://schema.org/GeoShape, https://schema.org/Place, https://schema.org/Text]
  ///
  /// The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n\nSee also {[eligibleRegion]}.
  ///
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/DeliveryChargeSpecification, https://schema.org/Demand, https://schema.org/MediaObject, https://schema.org/Offer
  ///
  static const ineligibleRegion = IriTerm.prevalidated(
    'https://schema.org/ineligibleRegion',
  );

  /// IRI for schema:infectiousAgent [Expects: https://schema.org/Text]
  ///
  /// The actual infectious agent, such as a specific bacterium.
  ///
  /// Can be used on: https://schema.org/InfectiousDisease
  ///
  static const infectiousAgent = IriTerm.prevalidated(
    'https://schema.org/infectiousAgent',
  );

  /// IRI for schema:infectiousAgentClass [Expects: https://schema.org/InfectiousAgentClass]
  ///
  /// The class of infectious agent (bacteria, prion, etc.) that causes the disease.
  ///
  /// Can be used on: https://schema.org/InfectiousDisease
  ///
  static const infectiousAgentClass = IriTerm.prevalidated(
    'https://schema.org/infectiousAgentClass',
  );

  /// IRI for schema:ingredients [Expects: https://schema.org/Text]
  ///
  /// A single ingredient used in the recipe, e.g. sugar, flour or garlic.
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const ingredients = IriTerm.prevalidated(
    'https://schema.org/ingredients',
  );

  /// IRI for schema:inker [Expects: https://schema.org/Person]
  ///
  /// The individual who traces over the pencil drawings in ink after pencils are complete.
  ///
  /// Can be used on: https://schema.org/ComicIssue, https://schema.org/ComicStory, https://schema.org/VisualArtwork
  ///
  static const inker = IriTerm.prevalidated('https://schema.org/inker');

  /// IRI for schema:insertion [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// The place of attachment of a muscle, or what the muscle moves.
  ///
  /// Can be used on: https://schema.org/Muscle
  ///
  static const insertion = IriTerm.prevalidated('https://schema.org/insertion');

  /// IRI for schema:installUrl [Expects: https://schema.org/URL]
  ///
  /// URL at which the app may be installed, if different from the URL of the item.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const installUrl = IriTerm.prevalidated(
    'https://schema.org/installUrl',
  );

  /// IRI for schema:instructor [Expects: https://schema.org/Person]
  ///
  /// A person assigned to instruct or provide instructional assistance for the {[CourseInstance]}.
  ///
  /// Can be used on: https://schema.org/CourseInstance
  ///
  static const instructor = IriTerm.prevalidated(
    'https://schema.org/instructor',
  );

  /// IRI for schema:intensity [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const intensity = IriTerm.prevalidated('https://schema.org/intensity');

  /// IRI for schema:interactingDrug [Expects: https://schema.org/Drug]
  ///
  /// Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const interactingDrug = IriTerm.prevalidated(
    'https://schema.org/interactingDrug',
  );

  /// IRI for schema:interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// IRI for schema:interactionService [Expects: https://schema.org/SoftwareApplication, https://schema.org/WebSite]
  ///
  /// The WebSite or SoftwareApplication where the interactions took place.
  ///
  /// Can be used on: https://schema.org/InteractionCounter
  ///
  static const interactionService = IriTerm.prevalidated(
    'https://schema.org/interactionService',
  );

  /// IRI for schema:interactionType [Expects: https://schema.org/Action]
  ///
  /// The Action representing the type of interaction. For up votes, +1s, etc. use {[LikeAction]}. For down votes use {[DislikeAction]}. Otherwise, use the most specific Action.
  ///
  /// Can be used on: https://schema.org/InteractionCounter
  ///
  static const interactionType = IriTerm.prevalidated(
    'https://schema.org/interactionType',
  );

  /// IRI for schema:interactivityType [Expects: https://schema.org/Text]
  ///
  /// The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const interactivityType = IriTerm.prevalidated(
    'https://schema.org/interactivityType',
  );

  /// IRI for schema:interestRate [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.
  ///
  /// Can be used on: https://schema.org/FinancialProduct
  ///
  static const interestRate = IriTerm.prevalidated(
    'https://schema.org/interestRate',
  );

  /// IRI for schema:interpretedAsClaim [Expects: https://schema.org/Claim]
  ///
  /// Used to indicate a specific claim contained, implied, translated or refined from the content of a {[MediaObject]} or other {[CreativeWork]}. The interpreting party can be indicated using {[claimInterpreter]}.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/MediaObject
  ///
  static const interpretedAsClaim = IriTerm.prevalidated(
    'https://schema.org/interpretedAsClaim',
  );

  /// IRI for schema:inventoryLevel [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The current approximate inventory level for the item or items.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/SomeProducts
  ///
  static const inventoryLevel = IriTerm.prevalidated(
    'https://schema.org/inventoryLevel',
  );

  /// IRI for schema:inverseOf [Expects: https://schema.org/Property]
  ///
  /// Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
  ///
  /// Can be used on: https://schema.org/Property
  ///
  static const inverseOf = IriTerm.prevalidated('https://schema.org/inverseOf');

  /// IRI for schema:isAcceptingNewPatients [Expects: https://schema.org/Boolean]
  ///
  /// Whether the provider is accepting new patients.
  ///
  /// Can be used on: https://schema.org/MedicalOrganization
  ///
  static const isAcceptingNewPatients = IriTerm.prevalidated(
    'https://schema.org/isAcceptingNewPatients',
  );

  /// IRI for schema:isAccessoryOrSparePartFor [Expects: https://schema.org/Product]
  ///
  /// A pointer to another product (or multiple products) for which this product is an accessory or spare part.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const isAccessoryOrSparePartFor = IriTerm.prevalidated(
    'https://schema.org/isAccessoryOrSparePartFor',
  );

  /// IRI for schema:isAvailableGenerically [Expects: https://schema.org/Boolean]
  ///
  /// True if the drug is available in a generic form (regardless of name).
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const isAvailableGenerically = IriTerm.prevalidated(
    'https://schema.org/isAvailableGenerically',
  );

  /// IRI for schema:isBasedOnUrl [Expects: https://schema.org/CreativeWork, https://schema.org/Product, https://schema.org/URL]
  ///
  /// A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const isBasedOnUrl = IriTerm.prevalidated(
    'https://schema.org/isBasedOnUrl',
  );

  /// IRI for schema:isConsumableFor [Expects: https://schema.org/Product]
  ///
  /// A pointer to another product (or multiple products) for which this product is a consumable.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const isConsumableFor = IriTerm.prevalidated(
    'https://schema.org/isConsumableFor',
  );

  /// IRI for schema:isFamilyFriendly [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether this content is family friendly.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Offer, https://schema.org/Product
  ///
  static const isFamilyFriendly = IriTerm.prevalidated(
    'https://schema.org/isFamilyFriendly',
  );

  /// IRI for schema:isGift [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether the offer was accepted as a gift for someone other than the buyer.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const isGift = IriTerm.prevalidated('https://schema.org/isGift');

  /// IRI for schema:isInvolvedInBiologicalProcess [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isInvolvedInBiologicalProcess = IriTerm.prevalidated(
    'https://schema.org/isInvolvedInBiologicalProcess',
  );

  /// IRI for schema:isLiveBroadcast [Expects: https://schema.org/Boolean]
  ///
  /// True if the broadcast is of a live event.
  ///
  /// Can be used on: https://schema.org/BroadcastEvent
  ///
  static const isLiveBroadcast = IriTerm.prevalidated(
    'https://schema.org/isLiveBroadcast',
  );

  /// IRI for schema:isLocatedInSubcellularLocation [Expects: https://schema.org/DefinedTerm, https://schema.org/PropertyValue, https://schema.org/URL]
  ///
  /// Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isLocatedInSubcellularLocation = IriTerm.prevalidated(
    'https://schema.org/isLocatedInSubcellularLocation',
  );

  /// IRI for schema:isPlanForApartment [Expects: https://schema.org/Accommodation]
  ///
  /// Indicates some accommodation that this floor plan describes.
  ///
  /// Can be used on: https://schema.org/FloorPlan
  ///
  static const isPlanForApartment = IriTerm.prevalidated(
    'https://schema.org/isPlanForApartment',
  );

  /// IRI for schema:isProprietary [Expects: https://schema.org/Boolean]
  ///
  /// True if this item's name is a proprietary/brand name (vs. generic name).
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug
  ///
  static const isProprietary = IriTerm.prevalidated(
    'https://schema.org/isProprietary',
  );

  /// IRI for schema:isRelatedTo [Expects: https://schema.org/Product, https://schema.org/Service]
  ///
  /// A pointer to another, somehow related product (or multiple products).
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Service
  ///
  static const isRelatedTo = IriTerm.prevalidated(
    'https://schema.org/isRelatedTo',
  );

  /// IRI for schema:isResizable [Expects: https://schema.org/Boolean]
  ///
  /// Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.
  ///
  /// Can be used on: https://schema.org/3DModel
  ///
  static const isResizable = IriTerm.prevalidated(
    'https://schema.org/isResizable',
  );

  /// IRI for schema:isSimilarTo [Expects: https://schema.org/Product, https://schema.org/Service]
  ///
  /// A pointer to another, functionally similar product (or multiple products).
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Service
  ///
  static const isSimilarTo = IriTerm.prevalidated(
    'https://schema.org/isSimilarTo',
  );

  /// IRI for schema:isUnlabelledFallback [Expects: https://schema.org/Boolean]
  ///
  /// This can be marked 'true' to indicate that some published {[DeliveryTimeSettings]} or {[ShippingRateSettings]} are intended to apply to all {[OfferShippingDetails]} published by the same merchant, when referenced by a {[shippingSettingsLink]} in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for {[DeliveryTimeSettings]}) or shippingLabel (for {[ShippingRateSettings]}), since this property is for use with unlabelled settings.
  ///
  /// Can be used on: https://schema.org/DeliveryTimeSettings, https://schema.org/ShippingRateSettings
  ///
  static const isUnlabelledFallback = IriTerm.prevalidated(
    'https://schema.org/isUnlabelledFallback',
  );

  /// IRI for schema:isbn [Expects: https://schema.org/Text]
  ///
  /// The ISBN of the book.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const isbn = IriTerm.prevalidated('https://schema.org/isbn');

  /// IRI for schema:isicV4 [Expects: https://schema.org/Text]
  ///
  /// The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const isicV4 = IriTerm.prevalidated('https://schema.org/isicV4');

  /// IRI for schema:iso6523Code [Expects: https://schema.org/Text]
  ///
  /// An organization identifier as defined in [ISO 6523(-1)](https://en.wikipedia.org/wiki/ISO/IEC_6523). The identifier should be in the `XXXX:YYYYYY:ZZZ` or `XXXX:YYYYYY`format. Where `XXXX` is a 4 digit _ICD_ (International Code Designator), `YYYYYY` is an _OID_ (Organization Identifier) with all formatting characters (dots, dashes, spaces) removed with a maximal length of 35 characters, and `ZZZ` is an optional OPI (Organization Part Identifier) with a maximum length of 35 characters. The various components (ICD, OID, OPI) are joined with a colon character (ASCII `0x3a`). Note that many existing organization identifiers defined as attributes like [leiCode](https://schema.org/leiCode) (`0199`), [duns](https://schema.org/duns) (`0060`) or [GLN](https://schema.org/globalLocationNumber) (`0088`) can be expressed using ISO-6523. If possible, ISO-6523 codes should be preferred to populating [vatID](https://schema.org/vatID) or [taxID](https://schema.org/taxID), as ISO identifiers are less ambiguous.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const iso6523Code = IriTerm.prevalidated(
    'https://schema.org/iso6523Code',
  );

  /// IRI for schema:isrcCode [Expects: https://schema.org/Text]
  ///
  /// The International Standard Recording Code for the recording.
  ///
  /// Can be used on: https://schema.org/MusicRecording
  ///
  static const isrcCode = IriTerm.prevalidated('https://schema.org/isrcCode');

  /// IRI for schema:issn [Expects: https://schema.org/Text]
  ///
  /// The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.
  ///
  /// Can be used on: https://schema.org/Blog, https://schema.org/CreativeWorkSeries, https://schema.org/Dataset, https://schema.org/WebSite
  ///
  static const issn = IriTerm.prevalidated('https://schema.org/issn');

  /// IRI for schema:issueNumber [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// Identifies the issue of publication; for example, "iii" or "2".
  ///
  /// Can be used on: https://schema.org/PublicationIssue
  ///
  static const issueNumber = IriTerm.prevalidated(
    'https://schema.org/issueNumber',
  );

  /// IRI for schema:issuedBy [Expects: https://schema.org/Organization]
  ///
  /// The organization issuing the item, for example a {[Permit]}, {[Ticket]}, or {[Certification]}.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Permit, https://schema.org/Ticket
  ///
  static const issuedBy = IriTerm.prevalidated('https://schema.org/issuedBy');

  /// IRI for schema:issuedThrough [Expects: https://schema.org/Service]
  ///
  /// The service through which the permit was granted.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const issuedThrough = IriTerm.prevalidated(
    'https://schema.org/issuedThrough',
  );

  /// IRI for schema:iswcCode [Expects: https://schema.org/Text]
  ///
  /// The International Standard Musical Work Code for the composition.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const iswcCode = IriTerm.prevalidated('https://schema.org/iswcCode');

  /// IRI for schema:item [Expects: https://schema.org/Thing]
  ///
  /// An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists').
  ///
  /// Can be used on: https://schema.org/DataFeedItem, https://schema.org/ListItem
  ///
  static const item = IriTerm.prevalidated('https://schema.org/item');

  /// IRI for schema:itemCondition [Expects: https://schema.org/OfferItemCondition]
  ///
  /// A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Product
  ///
  static const itemCondition = IriTerm.prevalidated(
    'https://schema.org/itemCondition',
  );

  /// IRI for schema:itemDefectReturnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees for returns of defect products.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnFees = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnFees',
  );

  /// IRI for schema:itemDefectReturnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnLabelSource = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnLabelSource',
  );

  /// IRI for schema:itemDefectReturnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of shipping costs for defect product returns. Applicable when property {[itemDefectReturnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const itemDefectReturnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/itemDefectReturnShippingFeesAmount',
  );

  /// IRI for schema:itemListElement [Expects: https://schema.org/ListItem, https://schema.org/Text, https://schema.org/Thing]
  ///
  /// For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.\n\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\n\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
  ///
  /// Can be used on: https://schema.org/ItemList
  ///
  static const itemListElement = IriTerm.prevalidated(
    'https://schema.org/itemListElement',
  );

  /// IRI for schema:itemListOrder [Expects: https://schema.org/ItemListOrderType, https://schema.org/Text]
  ///
  /// Type of ordering (e.g. Ascending, Descending, Unordered).
  ///
  /// Can be used on: https://schema.org/ItemList
  ///
  static const itemListOrder = IriTerm.prevalidated(
    'https://schema.org/itemListOrder',
  );

  /// IRI for schema:itemLocation [Expects: https://schema.org/Place, https://schema.org/PostalAddress, https://schema.org/Text]
  ///
  /// Current location of the item.
  ///
  /// Can be used on: https://schema.org/ArchiveComponent
  ///
  static const itemLocation = IriTerm.prevalidated(
    'https://schema.org/itemLocation',
  );

  /// IRI for schema:itemReviewed [Expects: https://schema.org/Thing]
  ///
  /// The item that is being reviewed/rated.
  ///
  /// Can be used on: https://schema.org/AggregateRating, https://schema.org/Review
  ///
  static const itemReviewed = IriTerm.prevalidated(
    'https://schema.org/itemReviewed',
  );

  /// IRI for schema:itemShipped [Expects: https://schema.org/Product]
  ///
  /// Item(s) being shipped.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const itemShipped = IriTerm.prevalidated(
    'https://schema.org/itemShipped',
  );

  /// IRI for schema:itinerary [Expects: https://schema.org/ItemList, https://schema.org/Place]
  ///
  /// Destination(s) ( {[Place]} ) that make up a trip. For a trip where destination order is important use {[ItemList]} to specify that order (see examples).
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const itinerary = IriTerm.prevalidated('https://schema.org/itinerary');

  /// IRI for schema:iupacName [Expects: https://schema.org/Text]
  ///
  /// Systematic method of naming chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const iupacName = IriTerm.prevalidated('https://schema.org/iupacName');

  /// IRI for schema:jobImmediateStart [Expects: https://schema.org/Boolean]
  ///
  /// An indicator as to whether a position is available for an immediate start.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const jobImmediateStart = IriTerm.prevalidated(
    'https://schema.org/jobImmediateStart',
  );

  /// IRI for schema:jobLocation [Expects: https://schema.org/Place]
  ///
  /// A (typically single) geographic location associated with the job position.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const jobLocation = IriTerm.prevalidated(
    'https://schema.org/jobLocation',
  );

  /// IRI for schema:jobLocationType [Expects: https://schema.org/Text]
  ///
  /// A description of the job location (e.g. TELECOMMUTE for telecommute jobs).
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const jobLocationType = IriTerm.prevalidated(
    'https://schema.org/jobLocationType',
  );

  /// IRI for schema:jobStartDate [Expects: https://schema.org/Date, https://schema.org/Text]
  ///
  /// The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const jobStartDate = IriTerm.prevalidated(
    'https://schema.org/jobStartDate',
  );

  /// IRI for schema:jobTitle [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The job title of the person (for example, Financial Manager).
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const jobTitle = IriTerm.prevalidated('https://schema.org/jobTitle');

  /// IRI for schema:keywords [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const keywords = IriTerm.prevalidated('https://schema.org/keywords');

  /// IRI for schema:knownVehicleDamages [Expects: https://schema.org/Text]
  ///
  /// A textual description of known damages, both repaired and unrepaired.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const knownVehicleDamages = IriTerm.prevalidated(
    'https://schema.org/knownVehicleDamages',
  );

  /// IRI for schema:knows [Expects: https://schema.org/Person]
  ///
  /// The most generic bi-directional social/work relation.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const knows = IriTerm.prevalidated('https://schema.org/knows');

  /// IRI for schema:knowsAbout [Expects: https://schema.org/Text, https://schema.org/Thing, https://schema.org/URL]
  ///
  /// Of a {[Person]}, and less typically of an {[Organization]}, to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or {[JobPosting]} descriptions.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const knowsAbout = IriTerm.prevalidated(
    'https://schema.org/knowsAbout',
  );

  /// IRI for schema:knowsLanguage [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// Of a {[Person]}, and less typically of an {[Organization]}, to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const knowsLanguage = IriTerm.prevalidated(
    'https://schema.org/knowsLanguage',
  );

  /// IRI for schema:labelDetails [Expects: https://schema.org/URL]
  ///
  /// Link to the drug's label details.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const labelDetails = IriTerm.prevalidated(
    'https://schema.org/labelDetails',
  );

  /// IRI for schema:landlord [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The owner of the real estate property.
  ///
  /// Can be used on: https://schema.org/RentAction
  ///
  static const landlord = IriTerm.prevalidated('https://schema.org/landlord');

  /// IRI for schema:language [Expects: https://schema.org/Language]
  ///
  /// A sub property of instrument. The language used on this action.
  ///
  /// Can be used on: https://schema.org/CommunicateAction, https://schema.org/WriteAction
  ///
  static const language = IriTerm.prevalidated('https://schema.org/language');

  /// IRI for schema:lastReviewed [Expects: https://schema.org/Date]
  ///
  /// Date on which the content on this web page was last reviewed for accuracy and/or completeness.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const lastReviewed = IriTerm.prevalidated(
    'https://schema.org/lastReviewed',
  );

  /// IRI for schema:latitude [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/Place
  ///
  static const latitude = IriTerm.prevalidated('https://schema.org/latitude');

  /// IRI for schema:layoutImage [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// A schematic image showing the floorplan layout.
  ///
  /// Can be used on: https://schema.org/FloorPlan
  ///
  static const layoutImage = IriTerm.prevalidated(
    'https://schema.org/layoutImage',
  );

  /// IRI for schema:learningResourceType [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/LearningResource
  ///
  static const learningResourceType = IriTerm.prevalidated(
    'https://schema.org/learningResourceType',
  );

  /// IRI for schema:leaseLength [Expects: https://schema.org/Duration, https://schema.org/QuantitativeValue]
  ///
  /// Length of the lease for some {[Accommodation]}, either particular to some {[Offer]} or in some cases intrinsic to the property.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/Offer, https://schema.org/RealEstateListing
  ///
  static const leaseLength = IriTerm.prevalidated(
    'https://schema.org/leaseLength',
  );

  /// IRI for schema:legalName [Expects: https://schema.org/Text]
  ///
  /// The official name of the organization, e.g. the registered company name.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const legalName = IriTerm.prevalidated('https://schema.org/legalName');

  /// IRI for schema:legalStatus [Expects: https://schema.org/DrugLegalStatus, https://schema.org/MedicalEnumeration, https://schema.org/Text]
  ///
  /// The drug or supplement's legal status, including any controlled substance schedules that apply.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug, https://schema.org/MedicalEntity
  ///
  static const legalStatus = IriTerm.prevalidated(
    'https://schema.org/legalStatus',
  );

  /// IRI for schema:legislationAmends [Expects: https://schema.org/Legislation]
  ///
  /// Another legislation that this legislation amends, introducing legal changes.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationAmends = IriTerm.prevalidated(
    'https://schema.org/legislationAmends',
  );

  /// IRI for schema:legislationCommences [Expects: https://schema.org/Legislation]
  ///
  /// Another legislation that this one sets into force.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationCommences = IriTerm.prevalidated(
    'https://schema.org/legislationCommences',
  );

  /// IRI for schema:legislationConsolidates [Expects: https://schema.org/Legislation]
  ///
  /// Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationConsolidates = IriTerm.prevalidated(
    'https://schema.org/legislationConsolidates',
  );

  /// IRI for schema:legislationCorrects [Expects: https://schema.org/Legislation]
  ///
  /// Another legislation in which this one introduces textual changes, like correction of spelling mistakes, with no legal impact (for modifications that have legal impact, use <a href="/legislationAmends">legislationAmends</a>).
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationCorrects = IriTerm.prevalidated(
    'https://schema.org/legislationCorrects',
  );

  /// IRI for schema:legislationCountersignedBy [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization that countersigned the legislation. Depending on the legal context, a countersignature can indicate that the signed authority undertakes to assume responsibility for texts emanating from a person who is inviolable and irresponsible, (for example a King, Grand Duc or President), or that the authority is in charge of the implementation of the text.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationCountersignedBy = IriTerm.prevalidated(
    'https://schema.org/legislationCountersignedBy',
  );

  /// IRI for schema:legislationDate [Expects: https://schema.org/Date]
  ///
  /// The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationDate = IriTerm.prevalidated(
    'https://schema.org/legislationDate',
  );

  /// IRI for schema:legislationDateOfApplicability [Expects: https://schema.org/Date]
  ///
  /// The date at which the Legislation becomes applicable. This can sometimes be distinct from the date of entry into force : a text may come in force today, and state it will become applicable in 3 months.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationDateOfApplicability = IriTerm.prevalidated(
    'https://schema.org/legislationDateOfApplicability',
  );

  /// IRI for schema:legislationDateVersion [Expects: https://schema.org/Date]
  ///
  /// The point-in-time at which the provided description of the legislation is valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the "National Insurance Contributions Act 2015")
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationDateVersion = IriTerm.prevalidated(
    'https://schema.org/legislationDateVersion',
  );

  /// IRI for schema:legislationEnsuresImplementationOf [Expects: https://schema.org/Legislation]
  ///
  /// Indicates that this Legislation ensures the implementation of another Legislation, for example by modifying national legislations so that they do not contradict to an EU regulation or decision. This implies a legal meaning. Transpositions of EU Directive should be captured with <a href="/legislationTransposes">legislationTransposes</a>.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationEnsuresImplementationOf = IriTerm.prevalidated(
    'https://schema.org/legislationEnsuresImplementationOf',
  );

  /// IRI for schema:legislationIdentifier [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationIdentifier = IriTerm.prevalidated(
    'https://schema.org/legislationIdentifier',
  );

  /// IRI for schema:legislationJurisdiction [Expects: https://schema.org/AdministrativeArea, https://schema.org/Text]
  ///
  /// The jurisdiction from which the legislation originates.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationJurisdiction = IriTerm.prevalidated(
    'https://schema.org/legislationJurisdiction',
  );

  /// IRI for schema:legislationLegalForce [Expects: https://schema.org/LegalForceStatus]
  ///
  /// Whether the legislation is currently in force, not in force, or partially in force.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationLegalForce = IriTerm.prevalidated(
    'https://schema.org/legislationLegalForce',
  );

  /// IRI for schema:legislationLegalValue [Expects: https://schema.org/LegalValueLevel]
  ///
  /// The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a "stronger" legal value than the HTML file of the same act.
  ///
  /// Can be used on: https://schema.org/LegislationObject
  ///
  static const legislationLegalValue = IriTerm.prevalidated(
    'https://schema.org/legislationLegalValue',
  );

  /// IRI for schema:legislationPassedBy [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization that originally passed or made the law: typically parliament (for primary legislation) or government (for secondary legislation). This indicates the "legal author" of the law, as opposed to its physical author.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationPassedBy = IriTerm.prevalidated(
    'https://schema.org/legislationPassedBy',
  );

  /// IRI for schema:legislationRepeals [Expects: https://schema.org/Legislation]
  ///
  /// Another legislation that this legislation repeals (cancels, abrogates).
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationRepeals = IriTerm.prevalidated(
    'https://schema.org/legislationRepeals',
  );

  /// IRI for schema:legislationResponsible [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationResponsible = IriTerm.prevalidated(
    'https://schema.org/legislationResponsible',
  );

  /// IRI for schema:legislationTransposes [Expects: https://schema.org/Legislation]
  ///
  /// Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationTransposes = IriTerm.prevalidated(
    'https://schema.org/legislationTransposes',
  );

  /// IRI for schema:legislationType [Expects: https://schema.org/CategoryCode, https://schema.org/Text]
  ///
  /// The type of the legislation. Examples of values are "law", "act", "directive", "decree", "regulation", "statutory instrument", "loi organique", "r√®glement grand-ducal", etc., depending on the country.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationType = IriTerm.prevalidated(
    'https://schema.org/legislationType',
  );

  /// IRI for schema:leiCode [Expects: https://schema.org/Text]
  ///
  /// An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const leiCode = IriTerm.prevalidated('https://schema.org/leiCode');

  /// IRI for schema:lender [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The person that lends the object being borrowed.
  ///
  /// Can be used on: https://schema.org/BorrowAction
  ///
  static const lender = IriTerm.prevalidated('https://schema.org/lender');

  /// IRI for schema:lesser [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is lesser than the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const lesser = IriTerm.prevalidated('https://schema.org/lesser');

  /// IRI for schema:lesserOrEqual [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const lesserOrEqual = IriTerm.prevalidated(
    'https://schema.org/lesserOrEqual',
  );

  /// IRI for schema:letterer [Expects: https://schema.org/Person]
  ///
  /// The individual who adds lettering, including speech balloons and sound effects, to artwork.
  ///
  /// Can be used on: https://schema.org/ComicIssue, https://schema.org/ComicStory, https://schema.org/VisualArtwork
  ///
  static const letterer = IriTerm.prevalidated('https://schema.org/letterer');

  /// IRI for schema:license [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// A license document that applies to this content, typically indicated by URL.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const license = IriTerm.prevalidated('https://schema.org/license');

  /// IRI for schema:line [Expects: https://schema.org/Text]
  ///
  /// A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
  ///
  /// Can be used on: https://schema.org/GeoShape
  ///
  static const line = IriTerm.prevalidated('https://schema.org/line');

  /// IRI for schema:linkRelationship [Expects: https://schema.org/Text]
  ///
  /// Indicates the relationship type of a Web link.
  ///
  /// Can be used on: https://schema.org/LinkRole
  ///
  static const linkRelationship = IriTerm.prevalidated(
    'https://schema.org/linkRelationship',
  );

  /// IRI for schema:liveBlogUpdate [Expects: https://schema.org/BlogPosting]
  ///
  /// An update to the LiveBlog.
  ///
  /// Can be used on: https://schema.org/LiveBlogPosting
  ///
  static const liveBlogUpdate = IriTerm.prevalidated(
    'https://schema.org/liveBlogUpdate',
  );

  /// IRI for schema:loanMortgageMandateAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.
  ///
  /// Can be used on: https://schema.org/MortgageLoan
  ///
  static const loanMortgageMandateAmount = IriTerm.prevalidated(
    'https://schema.org/loanMortgageMandateAmount',
  );

  /// IRI for schema:loanPaymentAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// The amount of money to pay in a single payment.
  ///
  /// Can be used on: https://schema.org/RepaymentSpecification
  ///
  static const loanPaymentAmount = IriTerm.prevalidated(
    'https://schema.org/loanPaymentAmount',
  );

  /// IRI for schema:loanPaymentFrequency [Expects: https://schema.org/Number]
  ///
  /// Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.
  ///
  /// Can be used on: https://schema.org/RepaymentSpecification
  ///
  static const loanPaymentFrequency = IriTerm.prevalidated(
    'https://schema.org/loanPaymentFrequency',
  );

  /// IRI for schema:loanRepaymentForm [Expects: https://schema.org/RepaymentSpecification]
  ///
  /// A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const loanRepaymentForm = IriTerm.prevalidated(
    'https://schema.org/loanRepaymentForm',
  );

  /// IRI for schema:loanTerm [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The duration of the loan or credit agreement.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const loanTerm = IriTerm.prevalidated('https://schema.org/loanTerm');

  /// IRI for schema:loanType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The type of a loan or credit.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const loanType = IriTerm.prevalidated('https://schema.org/loanType');

  /// IRI for schema:locationCreated [Expects: https://schema.org/Place]
  ///
  /// The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const locationCreated = IriTerm.prevalidated(
    'https://schema.org/locationCreated',
  );

  /// IRI for schema:lodgingUnitDescription [Expects: https://schema.org/Text]
  ///
  /// A full description of the lodging unit.
  ///
  /// Can be used on: https://schema.org/LodgingReservation
  ///
  static const lodgingUnitDescription = IriTerm.prevalidated(
    'https://schema.org/lodgingUnitDescription',
  );

  /// IRI for schema:lodgingUnitType [Expects: https://schema.org/QualitativeValue, https://schema.org/Text]
  ///
  /// Textual description of the unit type (including suite vs. room, size of bed, etc.).
  ///
  /// Can be used on: https://schema.org/LodgingReservation
  ///
  static const lodgingUnitType = IriTerm.prevalidated(
    'https://schema.org/lodgingUnitType',
  );

  /// IRI for schema:logo [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An associated logo.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/Certification, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const logo = IriTerm.prevalidated('https://schema.org/logo');

  /// IRI for schema:longitude [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/Place
  ///
  static const longitude = IriTerm.prevalidated('https://schema.org/longitude');

  /// IRI for schema:loser [Expects: https://schema.org/Person]
  ///
  /// A sub property of participant. The loser of the action.
  ///
  /// Can be used on: https://schema.org/WinAction
  ///
  static const loser = IriTerm.prevalidated('https://schema.org/loser');

  /// IRI for schema:lowPrice [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The lowest price of all offers available.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/AggregateOffer
  ///
  static const lowPrice = IriTerm.prevalidated('https://schema.org/lowPrice');

  /// IRI for schema:lyricist [Expects: https://schema.org/Person]
  ///
  /// The person who wrote the words.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const lyricist = IriTerm.prevalidated('https://schema.org/lyricist');

  /// IRI for schema:lyrics [Expects: https://schema.org/CreativeWork]
  ///
  /// The words in the song.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const lyrics = IriTerm.prevalidated('https://schema.org/lyrics');

  /// IRI for schema:maintainer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A maintainer of a {[Dataset]}, software package ({[SoftwareApplication]}), or other {[Project]}. A maintainer is a {[Person]} or {[Organization]} that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on "upstream" sources. When {[maintainer]} is applied to a specific version of something e.g. a particular version or packaging of a {[Dataset]}, it is always  possible that the upstream source has a different maintainer. The {[isBasedOn]} property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.
  ///
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const maintainer = IriTerm.prevalidated(
    'https://schema.org/maintainer',
  );

  /// IRI for schema:manufacturer [Expects: https://schema.org/Organization]
  ///
  /// The manufacturer of the product.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const manufacturer = IriTerm.prevalidated(
    'https://schema.org/manufacturer',
  );

  /// IRI for schema:map [Expects: https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const map = IriTerm.prevalidated('https://schema.org/map');

  /// IRI for schema:mapType [Expects: https://schema.org/MapCategoryType]
  ///
  /// Indicates the kind of Map, from the MapCategoryType Enumeration.
  ///
  /// Can be used on: https://schema.org/Map
  ///
  static const mapType = IriTerm.prevalidated('https://schema.org/mapType');

  /// IRI for schema:maps [Expects: https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const maps = IriTerm.prevalidated('https://schema.org/maps');

  /// IRI for schema:marginOfError [Expects: https://schema.org/QuantitativeValue]
  ///
  /// A {[marginOfError]} for an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const marginOfError = IriTerm.prevalidated(
    'https://schema.org/marginOfError',
  );

  /// IRI for schema:masthead [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For a {[NewsMediaOrganization]}, a link to the masthead page or a page listing top editorial management.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization
  ///
  static const masthead = IriTerm.prevalidated('https://schema.org/masthead');

  /// IRI for schema:materialExtent [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// The quantity of the materials being described or an expression of the physical space they occupy.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const materialExtent = IriTerm.prevalidated(
    'https://schema.org/materialExtent',
  );

  /// IRI for schema:mathExpression [Expects: https://schema.org/SolveMathAction, https://schema.org/Text]
  ///
  /// A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.
  ///
  /// Can be used on: https://schema.org/MathSolver
  ///
  static const mathExpression = IriTerm.prevalidated(
    'https://schema.org/mathExpression',
  );

  /// IRI for schema:maxPrice [Expects: https://schema.org/Number]
  ///
  /// The highest price if the price is a range.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const maxPrice = IriTerm.prevalidated('https://schema.org/maxPrice');

  /// IRI for schema:maxValue [Expects: https://schema.org/Number]
  ///
  /// The upper value of some characteristic or property.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/PropertyValueSpecification, https://schema.org/QuantitativeValue
  ///
  static const maxValue = IriTerm.prevalidated('https://schema.org/maxValue');

  /// IRI for schema:maximumAttendeeCapacity [Expects: https://schema.org/Integer]
  ///
  /// The total number of individuals that may attend an event or venue.
  ///
  /// Can be used on: https://schema.org/Event, https://schema.org/Place
  ///
  static const maximumAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumAttendeeCapacity',
  );

  /// IRI for schema:maximumEnrollment [Expects: https://schema.org/Integer]
  ///
  /// The maximum number of students who may be enrolled in the program.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const maximumEnrollment = IriTerm.prevalidated(
    'https://schema.org/maximumEnrollment',
  );

  /// IRI for schema:maximumIntake [Expects: https://schema.org/MaximumDoseSchedule]
  ///
  /// Recommended intake of this supplement for a given population as defined by a specific recommending authority.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug, https://schema.org/DrugStrength, https://schema.org/Substance
  ///
  static const maximumIntake = IriTerm.prevalidated(
    'https://schema.org/maximumIntake',
  );

  /// IRI for schema:maximumPhysicalAttendeeCapacity [Expects: https://schema.org/Integer]
  ///
  /// The maximum physical attendee capacity of an {[Event]} whose {[eventAttendanceMode]} is {[OfflineEventAttendanceMode]} (or the offline aspects, in the case of a {[MixedEventAttendanceMode]}).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const maximumPhysicalAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumPhysicalAttendeeCapacity',
  );

  /// IRI for schema:maximumVirtualAttendeeCapacity [Expects: https://schema.org/Integer]
  ///
  /// The maximum virtual attendee capacity of an {[Event]} whose {[eventAttendanceMode]} is {[OnlineEventAttendanceMode]} (or the online aspects, in the case of a {[MixedEventAttendanceMode]}).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const maximumVirtualAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumVirtualAttendeeCapacity',
  );

  /// IRI for schema:mealService [Expects: https://schema.org/Text]
  ///
  /// Description of the meals that will be provided or available for purchase.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const mealService = IriTerm.prevalidated(
    'https://schema.org/mealService',
  );

  /// IRI for schema:measuredProperty [Expects: https://schema.org/Property]
  ///
  /// The measuredProperty of an {[Observation]}, typically via its {[StatisticalVariable]}. There are various kinds of applicable {[Property]}: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measuredProperty = IriTerm.prevalidated(
    'https://schema.org/measuredProperty',
  );

  /// IRI for schema:measurementDenominator [Expects: https://schema.org/StatisticalVariable]
  ///
  /// Identifies the denominator variable when an observation represents a ratio or percentage.
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measurementDenominator = IriTerm.prevalidated(
    'https://schema.org/measurementDenominator',
  );

  /// IRI for schema:measurementMethod [Expects: https://schema.org/DefinedTerm, https://schema.org/MeasurementMethodEnum, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A subproperty of {[measurementTechnique]} that can be used for specifying specific methods, in particular via {[MeasurementMethodEnum]}.
  ///
  /// Can be used on: https://schema.org/DataCatalog, https://schema.org/DataDownload, https://schema.org/Dataset, https://schema.org/Observation, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable
  ///
  static const measurementMethod = IriTerm.prevalidated(
    'https://schema.org/measurementMethod',
  );

  /// IRI for schema:measurementQualifier [Expects: https://schema.org/Enumeration]
  ///
  /// Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measurementQualifier = IriTerm.prevalidated(
    'https://schema.org/measurementQualifier',
  );

  /// IRI for schema:mechanismOfAction [Expects: https://schema.org/Text]
  ///
  /// The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug
  ///
  static const mechanismOfAction = IriTerm.prevalidated(
    'https://schema.org/mechanismOfAction',
  );

  /// IRI for schema:mediaAuthenticityCategory [Expects: https://schema.org/MediaManipulationRatingEnumeration]
  ///
  /// Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).
  ///
  /// Can be used on: https://schema.org/MediaReview
  ///
  static const mediaAuthenticityCategory = IriTerm.prevalidated(
    'https://schema.org/mediaAuthenticityCategory',
  );

  /// IRI for schema:mediaItemAppearance [Expects: https://schema.org/MediaObject]
  ///
  /// In the context of a {[MediaReview]}, indicates specific media item(s) that are grouped using a {[MediaReviewItem]}.
  ///
  /// Can be used on: https://schema.org/MediaReviewItem
  ///
  static const mediaItemAppearance = IriTerm.prevalidated(
    'https://schema.org/mediaItemAppearance',
  );

  /// IRI for schema:median [Expects: https://schema.org/Number]
  ///
  /// The median value.
  ///
  /// Can be used on: https://schema.org/QuantitativeValueDistribution
  ///
  static const median = IriTerm.prevalidated('https://schema.org/median');

  /// IRI for schema:medicalAudience [Expects: https://schema.org/MedicalAudience, https://schema.org/MedicalAudienceType]
  ///
  /// Medical audience for page.
  ///
  /// Can be used on: https://schema.org/MedicalWebPage
  ///
  static const medicalAudience = IriTerm.prevalidated(
    'https://schema.org/medicalAudience',
  );

  /// IRI for schema:medicalSpecialty [Expects: https://schema.org/MedicalSpecialty]
  ///
  /// A medical specialty of the provider.
  ///
  /// Can be used on: https://schema.org/Hospital, https://schema.org/MedicalClinic, https://schema.org/MedicalOrganization, https://schema.org/Physician
  ///
  static const medicalSpecialty = IriTerm.prevalidated(
    'https://schema.org/medicalSpecialty',
  );

  /// IRI for schema:medicineSystem [Expects: https://schema.org/MedicineSystem]
  ///
  /// The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const medicineSystem = IriTerm.prevalidated(
    'https://schema.org/medicineSystem',
  );

  /// IRI for schema:meetsEmissionStandard [Expects: https://schema.org/QualitativeValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates that the vehicle meets the respective emission standard.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const meetsEmissionStandard = IriTerm.prevalidated(
    'https://schema.org/meetsEmissionStandard',
  );

  /// IRI for schema:members [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A member of this organization.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/ProgramMembership
  ///
  static const members = IriTerm.prevalidated('https://schema.org/members');

  /// IRI for schema:membershipNumber [Expects: https://schema.org/Text]
  ///
  /// A unique identifier for the membership.
  ///
  /// Can be used on: https://schema.org/ProgramMembership
  ///
  static const membershipNumber = IriTerm.prevalidated(
    'https://schema.org/membershipNumber',
  );

  /// IRI for schema:membershipPointsEarned [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)
  ///
  /// Can be used on: https://schema.org/MemberProgramTier, https://schema.org/PriceSpecification, https://schema.org/ProgramMembership
  ///
  static const membershipPointsEarned = IriTerm.prevalidated(
    'https://schema.org/membershipPointsEarned',
  );

  /// IRI for schema:memoryRequirements [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Minimum memory requirements.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const memoryRequirements = IriTerm.prevalidated(
    'https://schema.org/memoryRequirements',
  );

  /// IRI for schema:mentions [Expects: https://schema.org/Thing]
  ///
  /// Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const mentions = IriTerm.prevalidated('https://schema.org/mentions');

  /// IRI for schema:menu [Expects: https://schema.org/Menu, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Either the actual menu as a structured representation, as text, or a URL of the menu.
  ///
  /// Can be used on: https://schema.org/FoodEstablishment
  ///
  static const menu = IriTerm.prevalidated('https://schema.org/menu');

  /// IRI for schema:menuAddOn [Expects: https://schema.org/MenuItem, https://schema.org/MenuSection]
  ///
  /// Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.
  ///
  /// Can be used on: https://schema.org/MenuItem
  ///
  static const menuAddOn = IriTerm.prevalidated('https://schema.org/menuAddOn');

  /// IRI for schema:merchant [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// 'merchant' is an out-dated term for 'seller'.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const merchant = IriTerm.prevalidated('https://schema.org/merchant');

  /// IRI for schema:merchantReturnDays [Expects: https://schema.org/Date, https://schema.org/DateTime, https://schema.org/Integer]
  ///
  /// Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the {[returnPolicyCategory]} property is specified as {[MerchantReturnFiniteReturnWindow]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const merchantReturnDays = IriTerm.prevalidated(
    'https://schema.org/merchantReturnDays',
  );

  /// IRI for schema:merchantReturnLink [Expects: https://schema.org/URL]
  ///
  /// Specifies a Web page or service by URL, for product returns.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const merchantReturnLink = IriTerm.prevalidated(
    'https://schema.org/merchantReturnLink',
  );

  /// IRI for schema:messageAttachment [Expects: https://schema.org/CreativeWork]
  ///
  /// A CreativeWork attached to the message.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const messageAttachment = IriTerm.prevalidated(
    'https://schema.org/messageAttachment',
  );

  /// IRI for schema:mileageFromOdometer [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\n\nTypical unit code(s): KMT for kilometers, SMI for statute miles.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const mileageFromOdometer = IriTerm.prevalidated(
    'https://schema.org/mileageFromOdometer',
  );

  /// IRI for schema:minPrice [Expects: https://schema.org/Number]
  ///
  /// The lowest price if the price is a range.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const minPrice = IriTerm.prevalidated('https://schema.org/minPrice');

  /// IRI for schema:minValue [Expects: https://schema.org/Number]
  ///
  /// The lower value of some characteristic or property.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/PropertyValueSpecification, https://schema.org/QuantitativeValue
  ///
  static const minValue = IriTerm.prevalidated('https://schema.org/minValue');

  /// IRI for schema:minimumPaymentDue [Expects: https://schema.org/MonetaryAmount, https://schema.org/PriceSpecification]
  ///
  /// The minimum payment required at this time.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const minimumPaymentDue = IriTerm.prevalidated(
    'https://schema.org/minimumPaymentDue',
  );

  /// IRI for schema:missionCoveragePrioritiesPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For a {[NewsMediaOrganization]}, a statement on coverage priorities, including any public agenda or stance on issues.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization
  ///
  static const missionCoveragePrioritiesPolicy = IriTerm.prevalidated(
    'https://schema.org/missionCoveragePrioritiesPolicy',
  );

  /// IRI for schema:mobileUrl [Expects: https://schema.org/Text]
  ///
  /// The {[mobileUrl]} property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
  ///
  /// To discourage over-use, and reflecting intial usecases, the property is expected only on {[Product]} and {[Offer]}, rather than {[Thing]}. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established {[url]} property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all {[url]} markup to use {[mobileUrl]} for more mobile-oriented pages. The property is intended for the case when items (primarily {[Product]} and {[Offer]}) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
  ///
  ///
  /// Can be used on: https://schema.org/Offer, https://schema.org/Product
  ///
  static const mobileUrl = IriTerm.prevalidated('https://schema.org/mobileUrl');

  /// IRI for schema:model [Expects: https://schema.org/ProductModel, https://schema.org/Text]
  ///
  /// The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const model = IriTerm.prevalidated('https://schema.org/model');

  /// IRI for schema:modelDate [Expects: https://schema.org/Date]
  ///
  /// The release date of a vehicle model (often used to differentiate versions of the same make and model).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const modelDate = IriTerm.prevalidated('https://schema.org/modelDate');

  /// IRI for schema:modifiedTime [Expects: https://schema.org/DateTime]
  ///
  /// The date and time the reservation was modified.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const modifiedTime = IriTerm.prevalidated(
    'https://schema.org/modifiedTime',
  );

  /// IRI for schema:molecularFormula [Expects: https://schema.org/Text]
  ///
  /// The empirical formula is the simplest whole number ratio of all the atoms in a molecule.
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const molecularFormula = IriTerm.prevalidated(
    'https://schema.org/molecularFormula',
  );

  /// IRI for schema:molecularWeight [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// This is the molecular weight of the entity being described, not of the parent. Units should be included in the form '&lt;Number&gt; &lt;unit&gt;', for example '12 amu' or as '&lt;QuantitativeValue&gt;.
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const molecularWeight = IriTerm.prevalidated(
    'https://schema.org/molecularWeight',
  );

  /// IRI for schema:monoisotopicMolecularWeight [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// The monoisotopic mass is the sum of the masses of the atoms in a molecule using the unbound, ground-state, rest mass of the principal (most abundant) isotope for each element instead of the isotopic average mass. Please include the units in the form '&lt;Number&gt; &lt;unit&gt;', for example '770.230488 g/mol' or as '&lt;QuantitativeValue&gt;.
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const monoisotopicMolecularWeight = IriTerm.prevalidated(
    'https://schema.org/monoisotopicMolecularWeight',
  );

  /// IRI for schema:monthlyMinimumRepaymentAmount [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.
  ///
  /// Can be used on: https://schema.org/PaymentCard
  ///
  static const monthlyMinimumRepaymentAmount = IriTerm.prevalidated(
    'https://schema.org/monthlyMinimumRepaymentAmount',
  );

  /// IRI for schema:monthsOfExperience [Expects: https://schema.org/Number]
  ///
  /// Indicates the minimal number of months of experience required for a position.
  ///
  /// Can be used on: https://schema.org/OccupationalExperienceRequirements
  ///
  static const monthsOfExperience = IriTerm.prevalidated(
    'https://schema.org/monthsOfExperience',
  );

  /// IRI for schema:mpn [Expects: https://schema.org/Text]
  ///
  /// The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const mpn = IriTerm.prevalidated('https://schema.org/mpn');

  /// IRI for schema:multipleValues [Expects: https://schema.org/Boolean]
  ///
  /// Whether multiple values are allowed for the property.  Default is false.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const multipleValues = IriTerm.prevalidated(
    'https://schema.org/multipleValues',
  );

  /// IRI for schema:muscleAction [Expects: https://schema.org/Text]
  ///
  /// The movement the muscle generates.
  ///
  /// Can be used on: https://schema.org/Muscle
  ///
  static const muscleAction = IriTerm.prevalidated(
    'https://schema.org/muscleAction',
  );

  /// IRI for schema:musicArrangement [Expects: https://schema.org/MusicComposition]
  ///
  /// An arrangement derived from the composition.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const musicArrangement = IriTerm.prevalidated(
    'https://schema.org/musicArrangement',
  );

  /// IRI for schema:musicBy [Expects: https://schema.org/MusicGroup, https://schema.org/Person]
  ///
  /// The composer of the soundtrack.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/Episode, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const musicBy = IriTerm.prevalidated('https://schema.org/musicBy');

  /// IRI for schema:musicCompositionForm [Expects: https://schema.org/Text]
  ///
  /// The type of composition (e.g. overture, sonata, symphony, etc.).
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const musicCompositionForm = IriTerm.prevalidated(
    'https://schema.org/musicCompositionForm',
  );

  /// IRI for schema:musicGroupMember [Expects: https://schema.org/Person]
  ///
  /// A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
  ///
  /// Can be used on: https://schema.org/MusicGroup
  ///
  static const musicGroupMember = IriTerm.prevalidated(
    'https://schema.org/musicGroupMember',
  );

  /// IRI for schema:musicReleaseFormat [Expects: https://schema.org/MusicReleaseFormatType]
  ///
  /// Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).
  ///
  /// Can be used on: https://schema.org/MusicRelease
  ///
  static const musicReleaseFormat = IriTerm.prevalidated(
    'https://schema.org/musicReleaseFormat',
  );

  /// IRI for schema:musicalKey [Expects: https://schema.org/Text]
  ///
  /// The key, mode, or scale this composition uses.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const musicalKey = IriTerm.prevalidated(
    'https://schema.org/musicalKey',
  );

  /// IRI for schema:naics [Expects: https://schema.org/Text]
  ///
  /// The North American Industry Classification System (NAICS) code for a particular organization or business person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const naics = IriTerm.prevalidated('https://schema.org/naics');

  /// IRI for schema:name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// IRI for schema:namedPosition [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
  ///
  /// Can be used on: https://schema.org/Role
  ///
  static const namedPosition = IriTerm.prevalidated(
    'https://schema.org/namedPosition',
  );

  /// IRI for schema:nationality [Expects: https://schema.org/Country]
  ///
  /// Nationality of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const nationality = IriTerm.prevalidated(
    'https://schema.org/nationality',
  );

  /// IRI for schema:naturalProgression [Expects: https://schema.org/Text]
  ///
  /// The expected progression of the condition if it is not treated and allowed to progress naturally.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const naturalProgression = IriTerm.prevalidated(
    'https://schema.org/naturalProgression',
  );

  /// IRI for schema:negativeNotes [Expects: https://schema.org/ItemList, https://schema.org/ListItem, https://schema.org/Text, https://schema.org/WebContent]
  ///
  /// Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside {[positiveNotes]}). For symmetry
  ///
  /// In the case of a {[Review]}, the property describes the {[itemReviewed]} from the perspective of the review; in the case of a {[Product]}, the product itself is being described. Since product descriptions
  /// tend to emphasise positive claims, it may be relatively unusual to find {[negativeNotes]} used in this way. Nevertheless for the sake of symmetry, {[negativeNotes]} can be used on {[Product]}.
  ///
  /// The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Review
  ///
  static const negativeNotes = IriTerm.prevalidated(
    'https://schema.org/negativeNotes',
  );

  /// IRI for schema:nerve [Expects: https://schema.org/Nerve]
  ///
  /// The underlying innervation associated with the muscle.
  ///
  /// Can be used on: https://schema.org/Muscle
  ///
  static const nerve = IriTerm.prevalidated('https://schema.org/nerve');

  /// IRI for schema:nerveMotor [Expects: https://schema.org/Muscle]
  ///
  /// The neurological pathway extension that involves muscle control.
  ///
  /// Can be used on: https://schema.org/Nerve
  ///
  static const nerveMotor = IriTerm.prevalidated(
    'https://schema.org/nerveMotor',
  );

  /// IRI for schema:netWorth [Expects: https://schema.org/MonetaryAmount, https://schema.org/PriceSpecification]
  ///
  /// The total financial value of the person as calculated by subtracting the total value of liabilities from the total value of assets.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const netWorth = IriTerm.prevalidated('https://schema.org/netWorth');

  /// IRI for schema:newsUpdatesAndGuidelines [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing {[SpecialAnnouncement]} markup on a site.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const newsUpdatesAndGuidelines = IriTerm.prevalidated(
    'https://schema.org/newsUpdatesAndGuidelines',
  );

  /// IRI for schema:nextItem [Expects: https://schema.org/ListItem]
  ///
  /// A link to the ListItem that follows the current one.
  ///
  /// Can be used on: https://schema.org/ListItem
  ///
  static const nextItem = IriTerm.prevalidated('https://schema.org/nextItem');

  /// IRI for schema:noBylinesPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For a {[NewsMediaOrganization]} or other news-related {[Organization]}, a statement explaining when authors of articles are not named in bylines.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization
  ///
  static const noBylinesPolicy = IriTerm.prevalidated(
    'https://schema.org/noBylinesPolicy',
  );

  /// IRI for schema:nonEqual [Expects: https://schema.org/QualitativeValue]
  ///
  /// This ordering relation for qualitative values indicates that the subject is not equal to the object.
  ///
  /// Can be used on: https://schema.org/QualitativeValue
  ///
  static const nonEqual = IriTerm.prevalidated('https://schema.org/nonEqual');

  /// IRI for schema:nonProprietaryName [Expects: https://schema.org/Text]
  ///
  /// The generic name of this drug or supplement.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug
  ///
  static const nonProprietaryName = IriTerm.prevalidated(
    'https://schema.org/nonProprietaryName',
  );

  /// IRI for schema:nonprofitStatus [Expects: https://schema.org/NonprofitType]
  ///
  /// nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const nonprofitStatus = IriTerm.prevalidated(
    'https://schema.org/nonprofitStatus',
  );

  /// IRI for schema:normalRange [Expects: https://schema.org/MedicalEnumeration, https://schema.org/Text]
  ///
  /// Range of acceptable values for a typical patient, when applicable.
  ///
  /// Can be used on: https://schema.org/MedicalTest
  ///
  static const normalRange = IriTerm.prevalidated(
    'https://schema.org/normalRange',
  );

  /// IRI for schema:nsn [Expects: https://schema.org/Text]
  ///
  /// Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a {[Product]}.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const nsn = IriTerm.prevalidated('https://schema.org/nsn');

  /// IRI for schema:numAdults [Expects: https://schema.org/Integer, https://schema.org/QuantitativeValue]
  ///
  /// The number of adults staying in the unit.
  ///
  /// Can be used on: https://schema.org/LodgingReservation
  ///
  static const numAdults = IriTerm.prevalidated('https://schema.org/numAdults');

  /// IRI for schema:numChildren [Expects: https://schema.org/Integer, https://schema.org/QuantitativeValue]
  ///
  /// The number of children staying in the unit.
  ///
  /// Can be used on: https://schema.org/LodgingReservation
  ///
  static const numChildren = IriTerm.prevalidated(
    'https://schema.org/numChildren',
  );

  /// IRI for schema:numConstraints [Expects: https://schema.org/Integer]
  ///
  /// Indicates the number of constraints property values defined for a particular {[ConstraintNode]} such as {[StatisticalVariable]}. This helps applications understand if they have access to a sufficiently complete description of a {[StatisticalVariable]} or other construct that is defined using properties on template-style nodes.
  ///
  /// Can be used on: https://schema.org/ConstraintNode
  ///
  static const numConstraints = IriTerm.prevalidated(
    'https://schema.org/numConstraints',
  );

  /// IRI for schema:numItems [Expects: https://schema.org/QuantitativeValue]
  ///
  /// Limits the number of items being shipped for which these conditions apply.
  ///
  /// Can be used on: https://schema.org/ShippingConditions
  ///
  static const numItems = IriTerm.prevalidated('https://schema.org/numItems');

  /// IRI for schema:numTracks [Expects: https://schema.org/Integer]
  ///
  /// The number of tracks in this album or playlist.
  ///
  /// Can be used on: https://schema.org/MusicPlaylist
  ///
  static const numTracks = IriTerm.prevalidated('https://schema.org/numTracks');

  /// IRI for schema:numberOfAccommodationUnits [Expects: https://schema.org/QuantitativeValue]
  ///
  /// Indicates the total (available plus unavailable) number of accommodation units in an {[ApartmentComplex]}, or the number of accommodation units for a specific {[FloorPlan]} (within its specific {[ApartmentComplex]}). See also {[numberOfAvailableAccommodationUnits]}.
  ///
  /// Can be used on: https://schema.org/ApartmentComplex, https://schema.org/FloorPlan
  ///
  static const numberOfAccommodationUnits = IriTerm.prevalidated(
    'https://schema.org/numberOfAccommodationUnits',
  );

  /// IRI for schema:numberOfAirbags [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The number or type of airbags in the vehicle.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const numberOfAirbags = IriTerm.prevalidated(
    'https://schema.org/numberOfAirbags',
  );

  /// IRI for schema:numberOfAvailableAccommodationUnits [Expects: https://schema.org/QuantitativeValue]
  ///
  /// Indicates the number of available accommodation units in an {[ApartmentComplex]}, or the number of accommodation units for a specific {[FloorPlan]} (within its specific {[ApartmentComplex]}). See also {[numberOfAccommodationUnits]}.
  ///
  /// Can be used on: https://schema.org/ApartmentComplex, https://schema.org/FloorPlan
  ///
  static const numberOfAvailableAccommodationUnits = IriTerm.prevalidated(
    'https://schema.org/numberOfAvailableAccommodationUnits',
  );

  /// IRI for schema:numberOfAxles [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of axles.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const numberOfAxles = IriTerm.prevalidated(
    'https://schema.org/numberOfAxles',
  );

  /// IRI for schema:numberOfBathroomsTotal [Expects: https://schema.org/Integer]
  ///
  /// The total integer number of bathrooms in some {[Accommodation]}, following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): "The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.". See also {[numberOfRooms]}.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan
  ///
  static const numberOfBathroomsTotal = IriTerm.prevalidated(
    'https://schema.org/numberOfBathroomsTotal',
  );

  /// IRI for schema:numberOfBedrooms [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The total integer number of bedrooms in a some {[Accommodation]}, {[ApartmentComplex]} or {[FloorPlan]}.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/ApartmentComplex, https://schema.org/FloorPlan
  ///
  static const numberOfBedrooms = IriTerm.prevalidated(
    'https://schema.org/numberOfBedrooms',
  );

  /// IRI for schema:numberOfBeds [Expects: https://schema.org/Number]
  ///
  /// The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.
  ///
  /// Can be used on: https://schema.org/BedDetails
  ///
  static const numberOfBeds = IriTerm.prevalidated(
    'https://schema.org/numberOfBeds',
  );

  /// IRI for schema:numberOfCredits [Expects: https://schema.org/Integer, https://schema.org/StructuredValue]
  ///
  /// The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.
  ///
  /// Can be used on: https://schema.org/Course, https://schema.org/EducationalOccupationalProgram
  ///
  static const numberOfCredits = IriTerm.prevalidated(
    'https://schema.org/numberOfCredits',
  );

  /// IRI for schema:numberOfDoors [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of doors.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const numberOfDoors = IriTerm.prevalidated(
    'https://schema.org/numberOfDoors',
  );

  /// IRI for schema:numberOfEmployees [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The number of employees in an organization, e.g. business.
  ///
  /// Can be used on: https://schema.org/BusinessAudience, https://schema.org/Organization
  ///
  static const numberOfEmployees = IriTerm.prevalidated(
    'https://schema.org/numberOfEmployees',
  );

  /// IRI for schema:numberOfEpisodes [Expects: https://schema.org/Integer]
  ///
  /// The number of episodes in this season or series.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const numberOfEpisodes = IriTerm.prevalidated(
    'https://schema.org/numberOfEpisodes',
  );

  /// IRI for schema:numberOfForwardGears [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The total number of forward gears available for the transmission system of the vehicle.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const numberOfForwardGears = IriTerm.prevalidated(
    'https://schema.org/numberOfForwardGears',
  );

  /// IRI for schema:numberOfFullBathrooms [Expects: https://schema.org/Number]
  ///
  /// Number of full bathrooms - The total number of full and ¬æ bathrooms in an {[Accommodation]}. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan
  ///
  static const numberOfFullBathrooms = IriTerm.prevalidated(
    'https://schema.org/numberOfFullBathrooms',
  );

  /// IRI for schema:numberOfItems [Expects: https://schema.org/Integer]
  ///
  /// The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
  ///
  /// Can be used on: https://schema.org/ItemList
  ///
  static const numberOfItems = IriTerm.prevalidated(
    'https://schema.org/numberOfItems',
  );

  /// IRI for schema:numberOfLoanPayments [Expects: https://schema.org/Number]
  ///
  /// The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.
  ///
  /// Can be used on: https://schema.org/RepaymentSpecification
  ///
  static const numberOfLoanPayments = IriTerm.prevalidated(
    'https://schema.org/numberOfLoanPayments',
  );

  /// IRI for schema:numberOfPages [Expects: https://schema.org/Integer]
  ///
  /// The number of pages in the book.
  ///
  /// Can be used on: https://schema.org/Book
  ///
  static const numberOfPages = IriTerm.prevalidated(
    'https://schema.org/numberOfPages',
  );

  /// IRI for schema:numberOfPartialBathrooms [Expects: https://schema.org/Number]
  ///
  /// Number of partial bathrooms - The total number of half and ¬º bathrooms in an {[Accommodation]}. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field).
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan
  ///
  static const numberOfPartialBathrooms = IriTerm.prevalidated(
    'https://schema.org/numberOfPartialBathrooms',
  );

  /// IRI for schema:numberOfPlayers [Expects: https://schema.org/QuantitativeValue]
  ///
  /// Indicate how many people can play this game (minimum, maximum, or range).
  ///
  /// Can be used on: https://schema.org/Game, https://schema.org/VideoGameSeries
  ///
  static const numberOfPlayers = IriTerm.prevalidated(
    'https://schema.org/numberOfPlayers',
  );

  /// IRI for schema:numberOfPreviousOwners [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of owners of the vehicle, including the current one.\n\nTypical unit code(s): C62.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const numberOfPreviousOwners = IriTerm.prevalidated(
    'https://schema.org/numberOfPreviousOwners',
  );

  /// IRI for schema:numberOfRooms [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
  /// Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/Apartment, https://schema.org/FloorPlan, https://schema.org/House, https://schema.org/LodgingBusiness, https://schema.org/SingleFamilyResidence, https://schema.org/Suite
  ///
  static const numberOfRooms = IriTerm.prevalidated(
    'https://schema.org/numberOfRooms',
  );

  /// IRI for schema:numberOfSeasons [Expects: https://schema.org/Integer]
  ///
  /// The number of seasons in this series.
  ///
  /// Can be used on: https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const numberOfSeasons = IriTerm.prevalidated(
    'https://schema.org/numberOfSeasons',
  );

  /// IRI for schema:numberedPosition [Expects: https://schema.org/Number]
  ///
  /// A number associated with a role in an organization, for example, the number on an athlete's jersey.
  ///
  /// Can be used on: https://schema.org/OrganizationRole
  ///
  static const numberedPosition = IriTerm.prevalidated(
    'https://schema.org/numberedPosition',
  );

  /// IRI for schema:nutrition [Expects: https://schema.org/NutritionInformation]
  ///
  /// Nutrition information about the recipe or menu item.
  ///
  /// Can be used on: https://schema.org/MenuItem, https://schema.org/Recipe
  ///
  static const nutrition = IriTerm.prevalidated('https://schema.org/nutrition');

  /// IRI for schema:observationAbout [Expects: https://schema.org/Place, https://schema.org/Thing]
  ///
  /// The {[observationAbout]} property identifies an entity, often a {[Place]}, associated with an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationAbout = IriTerm.prevalidated(
    'https://schema.org/observationAbout',
  );

  /// IRI for schema:observationDate [Expects: https://schema.org/DateTime]
  ///
  /// The observationDate of an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationDate = IriTerm.prevalidated(
    'https://schema.org/observationDate',
  );

  /// IRI for schema:observationPeriod [Expects: https://schema.org/Text]
  ///
  /// The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationPeriod = IriTerm.prevalidated(
    'https://schema.org/observationPeriod',
  );

  /// IRI for schema:occupancy [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
  /// Typical unit code(s): C62 for person.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/Apartment, https://schema.org/HotelRoom, https://schema.org/SingleFamilyResidence, https://schema.org/Suite
  ///
  static const occupancy = IriTerm.prevalidated('https://schema.org/occupancy');

  /// IRI for schema:occupationLocation [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
  ///
  /// Can be used on: https://schema.org/Occupation
  ///
  static const occupationLocation = IriTerm.prevalidated(
    'https://schema.org/occupationLocation',
  );

  /// IRI for schema:occupationalCategory [Expects: https://schema.org/CategoryCode, https://schema.org/Text]
  ///
  /// A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\n
  /// Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram, https://schema.org/JobPosting, https://schema.org/Occupation, https://schema.org/Physician, https://schema.org/WorkBasedProgram
  ///
  static const occupationalCategory = IriTerm.prevalidated(
    'https://schema.org/occupationalCategory',
  );

  /// IRI for schema:occupationalCredentialAwarded [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.
  ///
  /// Can be used on: https://schema.org/Course, https://schema.org/EducationalOccupationalProgram
  ///
  static const occupationalCredentialAwarded = IriTerm.prevalidated(
    'https://schema.org/occupationalCredentialAwarded',
  );

  /// IRI for schema:offerCount [Expects: https://schema.org/Integer]
  ///
  /// The number of offers for the product.
  ///
  /// Can be used on: https://schema.org/AggregateOffer
  ///
  static const offerCount = IriTerm.prevalidated(
    'https://schema.org/offerCount',
  );

  /// IRI for schema:offersPrescriptionByMail [Expects: https://schema.org/Boolean]
  ///
  /// Whether prescriptions can be delivered by mail.
  ///
  /// Can be used on: https://schema.org/HealthPlanFormulary
  ///
  static const offersPrescriptionByMail = IriTerm.prevalidated(
    'https://schema.org/offersPrescriptionByMail',
  );

  /// IRI for schema:openingHours [Expects: https://schema.org/Text]
  ///
  /// The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\n\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \n* Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
  ///
  /// Can be used on: https://schema.org/CivicStructure, https://schema.org/LocalBusiness
  ///
  static const openingHours = IriTerm.prevalidated(
    'https://schema.org/openingHours',
  );

  /// IRI for schema:openingHoursSpecification [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// The opening hours of a certain place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const openingHoursSpecification = IriTerm.prevalidated(
    'https://schema.org/openingHoursSpecification',
  );

  /// IRI for schema:opens [Expects: https://schema.org/Time]
  ///
  /// The opening hour of the place or service on the given day(s) of the week.
  ///
  /// Can be used on: https://schema.org/OpeningHoursSpecification
  ///
  static const opens = IriTerm.prevalidated('https://schema.org/opens');

  /// IRI for schema:operatingSystem [Expects: https://schema.org/Text]
  ///
  /// Operating systems supported (Windows 7, OS X 10.6, Android 1.6).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const operatingSystem = IriTerm.prevalidated(
    'https://schema.org/operatingSystem',
  );

  /// IRI for schema:opponent [Expects: https://schema.org/Person]
  ///
  /// A sub property of participant. The opponent on this action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const opponent = IriTerm.prevalidated('https://schema.org/opponent');

  /// IRI for schema:option [Expects: https://schema.org/Text, https://schema.org/Thing]
  ///
  /// A sub property of object. The options subject to this action.
  ///
  /// Can be used on: https://schema.org/ChooseAction
  ///
  static const option = IriTerm.prevalidated('https://schema.org/option');

  /// IRI for schema:orderDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date order was placed.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderDate = IriTerm.prevalidated('https://schema.org/orderDate');

  /// IRI for schema:orderDelivery [Expects: https://schema.org/ParcelDelivery]
  ///
  /// The delivery of the parcel related to this order or order item.
  ///
  /// Can be used on: https://schema.org/Order, https://schema.org/OrderItem
  ///
  static const orderDelivery = IriTerm.prevalidated(
    'https://schema.org/orderDelivery',
  );

  /// IRI for schema:orderItemNumber [Expects: https://schema.org/Text]
  ///
  /// The identifier of the order item.
  ///
  /// Can be used on: https://schema.org/OrderItem
  ///
  static const orderItemNumber = IriTerm.prevalidated(
    'https://schema.org/orderItemNumber',
  );

  /// IRI for schema:orderItemStatus [Expects: https://schema.org/OrderStatus]
  ///
  /// The current status of the order item.
  ///
  /// Can be used on: https://schema.org/OrderItem
  ///
  static const orderItemStatus = IriTerm.prevalidated(
    'https://schema.org/orderItemStatus',
  );

  /// IRI for schema:orderNumber [Expects: https://schema.org/Text]
  ///
  /// The identifier of the transaction.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderNumber = IriTerm.prevalidated(
    'https://schema.org/orderNumber',
  );

  /// IRI for schema:orderPercentage [Expects: https://schema.org/Number]
  ///
  /// Fraction of the value of the order that is charged as shipping cost.
  ///
  /// Can be used on: https://schema.org/ShippingRateSettings
  ///
  static const orderPercentage = IriTerm.prevalidated(
    'https://schema.org/orderPercentage',
  );

  /// IRI for schema:orderQuantity [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of the item ordered. If the property is not set, assume the quantity is one.
  ///
  /// Can be used on: https://schema.org/OrderItem
  ///
  static const orderQuantity = IriTerm.prevalidated(
    'https://schema.org/orderQuantity',
  );

  /// IRI for schema:orderStatus [Expects: https://schema.org/OrderStatus]
  ///
  /// The current status of the order.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const orderStatus = IriTerm.prevalidated(
    'https://schema.org/orderStatus',
  );

  /// IRI for schema:orderValue [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Minimum and maximum order value for which these shipping conditions are valid.
  ///
  /// Can be used on: https://schema.org/ShippingConditions
  ///
  static const orderValue = IriTerm.prevalidated(
    'https://schema.org/orderValue',
  );

  /// IRI for schema:orderedItem [Expects: https://schema.org/OrderItem, https://schema.org/Product, https://schema.org/Service]
  ///
  /// The item ordered.
  ///
  /// Can be used on: https://schema.org/Order, https://schema.org/OrderItem
  ///
  static const orderedItem = IriTerm.prevalidated(
    'https://schema.org/orderedItem',
  );

  /// IRI for schema:organizer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An organizer of an Event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const organizer = IriTerm.prevalidated('https://schema.org/organizer');

  /// IRI for schema:originAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// Shipper's address.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const originAddress = IriTerm.prevalidated(
    'https://schema.org/originAddress',
  );

  /// IRI for schema:originalMediaContextDescription [Expects: https://schema.org/Text]
  ///
  /// Describes, in a {[MediaReview]} when dealing with {[DecontextualizedContent]}, background information that can contribute to better interpretation of the {[MediaObject]}.
  ///
  /// Can be used on: https://schema.org/MediaReview
  ///
  static const originalMediaContextDescription = IriTerm.prevalidated(
    'https://schema.org/originalMediaContextDescription',
  );

  /// IRI for schema:originalMediaLink [Expects: https://schema.org/MediaObject, https://schema.org/URL, https://schema.org/WebPage]
  ///
  /// Link to the page containing an original version of the content, or directly to an online copy of the original {[MediaObject]} content, e.g. video file.
  ///
  /// Can be used on: https://schema.org/MediaReview
  ///
  static const originalMediaLink = IriTerm.prevalidated(
    'https://schema.org/originalMediaLink',
  );

  /// IRI for schema:originatesFrom [Expects: https://schema.org/Vessel]
  ///
  /// The vasculature the lymphatic structure originates, or afferents, from.
  ///
  /// Can be used on: https://schema.org/LymphaticVessel
  ///
  static const originatesFrom = IriTerm.prevalidated(
    'https://schema.org/originatesFrom',
  );

  /// IRI for schema:overdosage [Expects: https://schema.org/Text]
  ///
  /// Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const overdosage = IriTerm.prevalidated(
    'https://schema.org/overdosage',
  );

  /// IRI for schema:ownedFrom [Expects: https://schema.org/DateTime]
  ///
  /// The date and time of obtaining the product.
  ///
  /// Can be used on: https://schema.org/OwnershipInfo
  ///
  static const ownedFrom = IriTerm.prevalidated('https://schema.org/ownedFrom');

  /// IRI for schema:ownedThrough [Expects: https://schema.org/DateTime]
  ///
  /// The date and time of giving up ownership on the product.
  ///
  /// Can be used on: https://schema.org/OwnershipInfo
  ///
  static const ownedThrough = IriTerm.prevalidated(
    'https://schema.org/ownedThrough',
  );

  /// IRI for schema:ownershipFundingInfo [Expects: https://schema.org/AboutPage, https://schema.org/CreativeWork, https://schema.org/Text, https://schema.org/URL]
  ///
  /// For an {[Organization]} (often but not necessarily a {[NewsMediaOrganization]}), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the {[funder]} is also available and can be used to make basic funder information machine-readable.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const ownershipFundingInfo = IriTerm.prevalidated(
    'https://schema.org/ownershipFundingInfo',
  );

  /// IRI for schema:owns [Expects: https://schema.org/OwnershipInfo, https://schema.org/Product]
  ///
  /// Products owned by the organization or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const owns = IriTerm.prevalidated('https://schema.org/owns');

  /// IRI for schema:pageEnd [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// The page on which the work ends; for example "138" or "xvi".
  ///
  /// Can be used on: https://schema.org/Article, https://schema.org/Chapter, https://schema.org/PublicationIssue, https://schema.org/PublicationVolume
  ///
  static const pageEnd = IriTerm.prevalidated('https://schema.org/pageEnd');

  /// IRI for schema:pageStart [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// The page on which the work starts; for example "135" or "xiii".
  ///
  /// Can be used on: https://schema.org/Article, https://schema.org/Chapter, https://schema.org/PublicationIssue, https://schema.org/PublicationVolume
  ///
  static const pageStart = IriTerm.prevalidated('https://schema.org/pageStart');

  /// IRI for schema:pagination [Expects: https://schema.org/Text]
  ///
  /// Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
  ///
  /// Can be used on: https://schema.org/Article, https://schema.org/Chapter, https://schema.org/PublicationIssue, https://schema.org/PublicationVolume
  ///
  static const pagination = IriTerm.prevalidated(
    'https://schema.org/pagination',
  );

  /// IRI for schema:parentItem [Expects: https://schema.org/Comment, https://schema.org/CreativeWork]
  ///
  /// The parent of a question, answer or item in general. Typically used for Q/A discussion threads e.g. a chain of comments with the first comment being an {[Article]} or other {[CreativeWork]}. See also {[comment]} which points from something to a comment about it.
  ///
  /// Can be used on: https://schema.org/Answer, https://schema.org/Comment, https://schema.org/Question
  ///
  static const parentItem = IriTerm.prevalidated(
    'https://schema.org/parentItem',
  );

  /// IRI for schema:parentService [Expects: https://schema.org/BroadcastService]
  ///
  /// A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const parentService = IriTerm.prevalidated(
    'https://schema.org/parentService',
  );

  /// IRI for schema:parents [Expects: https://schema.org/Person]
  ///
  /// A parents of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const parents = IriTerm.prevalidated('https://schema.org/parents');

  /// IRI for schema:partOfEpisode [Expects: https://schema.org/Episode]
  ///
  /// The episode to which this clip belongs.
  ///
  /// Can be used on: https://schema.org/Clip
  ///
  static const partOfEpisode = IriTerm.prevalidated(
    'https://schema.org/partOfEpisode',
  );

  /// IRI for schema:partOfInvoice [Expects: https://schema.org/Invoice]
  ///
  /// The order is being paid as part of the referenced Invoice.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const partOfInvoice = IriTerm.prevalidated(
    'https://schema.org/partOfInvoice',
  );

  /// IRI for schema:partOfOrder [Expects: https://schema.org/Order]
  ///
  /// The overall order the items in this delivery were included in.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const partOfOrder = IriTerm.prevalidated(
    'https://schema.org/partOfOrder',
  );

  /// IRI for schema:partOfSeason [Expects: https://schema.org/CreativeWorkSeason]
  ///
  /// The season to which this episode belongs.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/Episode
  ///
  static const partOfSeason = IriTerm.prevalidated(
    'https://schema.org/partOfSeason',
  );

  /// IRI for schema:partOfSystem [Expects: https://schema.org/AnatomicalSystem]
  ///
  /// The anatomical or organ system that this structure is part of.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure
  ///
  static const partOfSystem = IriTerm.prevalidated(
    'https://schema.org/partOfSystem',
  );

  /// IRI for schema:partOfTVSeries [Expects: https://schema.org/TVSeries]
  ///
  /// The TV series to which this episode or season belongs.
  ///
  /// Can be used on: https://schema.org/TVClip, https://schema.org/TVEpisode, https://schema.org/TVSeason
  ///
  static const partOfTVSeries = IriTerm.prevalidated(
    'https://schema.org/partOfTVSeries',
  );

  /// IRI for schema:partySize [Expects: https://schema.org/Integer, https://schema.org/QuantitativeValue]
  ///
  /// Number of people the reservation should accommodate.
  ///
  /// Can be used on: https://schema.org/FoodEstablishmentReservation, https://schema.org/TaxiReservation
  ///
  static const partySize = IriTerm.prevalidated('https://schema.org/partySize');

  /// IRI for schema:passengerPriorityStatus [Expects: https://schema.org/QualitativeValue, https://schema.org/Text]
  ///
  /// The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).
  ///
  /// Can be used on: https://schema.org/FlightReservation
  ///
  static const passengerPriorityStatus = IriTerm.prevalidated(
    'https://schema.org/passengerPriorityStatus',
  );

  /// IRI for schema:passengerSequenceNumber [Expects: https://schema.org/Text]
  ///
  /// The passenger's sequence number as assigned by the airline.
  ///
  /// Can be used on: https://schema.org/FlightReservation
  ///
  static const passengerSequenceNumber = IriTerm.prevalidated(
    'https://schema.org/passengerSequenceNumber',
  );

  /// IRI for schema:pathophysiology [Expects: https://schema.org/Text]
  ///
  /// Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition, https://schema.org/PhysicalActivity
  ///
  static const pathophysiology = IriTerm.prevalidated(
    'https://schema.org/pathophysiology',
  );

  /// IRI for schema:pattern [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Product
  ///
  static const pattern = IriTerm.prevalidated('https://schema.org/pattern');

  /// IRI for schema:payload [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of {[weight]} and {[payload]}\n* Note 2: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 3: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 4: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const payload = IriTerm.prevalidated('https://schema.org/payload');

  /// IRI for schema:paymentAccepted [Expects: https://schema.org/Text]
  ///
  /// Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
  ///
  /// Can be used on: https://schema.org/LocalBusiness
  ///
  static const paymentAccepted = IriTerm.prevalidated(
    'https://schema.org/paymentAccepted',
  );

  /// IRI for schema:paymentDue [Expects: https://schema.org/DateTime]
  ///
  /// The date that payment is due.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentDue = IriTerm.prevalidated(
    'https://schema.org/paymentDue',
  );

  /// IRI for schema:paymentMethod [Expects: https://schema.org/PaymentMethod, https://schema.org/Text]
  ///
  /// The name of the credit card or other method of payment for the order.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentMethod = IriTerm.prevalidated(
    'https://schema.org/paymentMethod',
  );

  /// IRI for schema:paymentMethodId [Expects: https://schema.org/Text]
  ///
  /// An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentMethodId = IriTerm.prevalidated(
    'https://schema.org/paymentMethodId',
  );

  /// IRI for schema:paymentMethodType [Expects: https://schema.org/PaymentMethodType]
  ///
  /// The type of a payment method.
  ///
  /// Can be used on: https://schema.org/PaymentMethod
  ///
  static const paymentMethodType = IriTerm.prevalidated(
    'https://schema.org/paymentMethodType',
  );

  /// IRI for schema:paymentStatus [Expects: https://schema.org/PaymentStatusType, https://schema.org/Text]
  ///
  /// The status of payment; whether the invoice has been paid or not.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const paymentStatus = IriTerm.prevalidated(
    'https://schema.org/paymentStatus',
  );

  /// IRI for schema:paymentUrl [Expects: https://schema.org/URL]
  ///
  /// The URL for sending a payment.
  ///
  /// Can be used on: https://schema.org/Order
  ///
  static const paymentUrl = IriTerm.prevalidated(
    'https://schema.org/paymentUrl',
  );

  /// IRI for schema:penciler [Expects: https://schema.org/Person]
  ///
  /// The individual who draws the primary narrative artwork.
  ///
  /// Can be used on: https://schema.org/ComicIssue, https://schema.org/ComicStory, https://schema.org/VisualArtwork
  ///
  static const penciler = IriTerm.prevalidated('https://schema.org/penciler');

  /// IRI for schema:percentile10 [Expects: https://schema.org/Number]
  ///
  /// The 10th percentile value.
  ///
  /// Can be used on: https://schema.org/QuantitativeValueDistribution
  ///
  static const percentile10 = IriTerm.prevalidated(
    'https://schema.org/percentile10',
  );

  /// IRI for schema:percentile25 [Expects: https://schema.org/Number]
  ///
  /// The 25th percentile value.
  ///
  /// Can be used on: https://schema.org/QuantitativeValueDistribution
  ///
  static const percentile25 = IriTerm.prevalidated(
    'https://schema.org/percentile25',
  );

  /// IRI for schema:percentile75 [Expects: https://schema.org/Number]
  ///
  /// The 75th percentile value.
  ///
  /// Can be used on: https://schema.org/QuantitativeValueDistribution
  ///
  static const percentile75 = IriTerm.prevalidated(
    'https://schema.org/percentile75',
  );

  /// IRI for schema:percentile90 [Expects: https://schema.org/Number]
  ///
  /// The 90th percentile value.
  ///
  /// Can be used on: https://schema.org/QuantitativeValueDistribution
  ///
  static const percentile90 = IriTerm.prevalidated(
    'https://schema.org/percentile90',
  );

  /// IRI for schema:performerIn [Expects: https://schema.org/Event]
  ///
  /// Event that this person is a performer or participant in.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const performerIn = IriTerm.prevalidated(
    'https://schema.org/performerIn',
  );

  /// IRI for schema:performers [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const performers = IriTerm.prevalidated(
    'https://schema.org/performers',
  );

  /// IRI for schema:permissionType [Expects: https://schema.org/DigitalDocumentPermissionType]
  ///
  /// The type of permission granted the person, organization, or audience.
  ///
  /// Can be used on: https://schema.org/DigitalDocumentPermission
  ///
  static const permissionType = IriTerm.prevalidated(
    'https://schema.org/permissionType',
  );

  /// IRI for schema:permissions [Expects: https://schema.org/Text]
  ///
  /// Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const permissions = IriTerm.prevalidated(
    'https://schema.org/permissions',
  );

  /// IRI for schema:permitAudience [Expects: https://schema.org/Audience]
  ///
  /// The target audience for this permit.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const permitAudience = IriTerm.prevalidated(
    'https://schema.org/permitAudience',
  );

  /// IRI for schema:permittedUsage [Expects: https://schema.org/Text]
  ///
  /// Indications regarding the permitted usage of the accommodation.
  ///
  /// Can be used on: https://schema.org/Accommodation
  ///
  static const permittedUsage = IriTerm.prevalidated(
    'https://schema.org/permittedUsage',
  );

  /// IRI for schema:petsAllowed [Expects: https://schema.org/Boolean, https://schema.org/Text]
  ///
  /// Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/ApartmentComplex, https://schema.org/FloorPlan, https://schema.org/LodgingBusiness
  ///
  static const petsAllowed = IriTerm.prevalidated(
    'https://schema.org/petsAllowed',
  );

  /// IRI for schema:phoneticText [Expects: https://schema.org/Text]
  ///
  /// Representation of a text {[textValue]} using the specified {[speechToTextMarkup]}. For example the city name of Houston in IPA: /ÀàhjuÀêst…ôn/.
  ///
  /// Can be used on: https://schema.org/PronounceableText
  ///
  static const phoneticText = IriTerm.prevalidated(
    'https://schema.org/phoneticText',
  );

  /// IRI for schema:photos [Expects: https://schema.org/ImageObject, https://schema.org/Photograph]
  ///
  /// Photographs of this place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const photos = IriTerm.prevalidated('https://schema.org/photos');

  /// IRI for schema:physicalRequirement [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const physicalRequirement = IriTerm.prevalidated(
    'https://schema.org/physicalRequirement',
  );

  /// IRI for schema:physiologicalBenefits [Expects: https://schema.org/Text]
  ///
  /// Specific physiologic benefits associated to the plan.
  ///
  /// Can be used on: https://schema.org/Diet
  ///
  static const physiologicalBenefits = IriTerm.prevalidated(
    'https://schema.org/physiologicalBenefits',
  );

  /// IRI for schema:pickupLocation [Expects: https://schema.org/Place]
  ///
  /// Where a taxi will pick up a passenger or a rental car can be picked up.
  ///
  /// Can be used on: https://schema.org/RentalCarReservation, https://schema.org/TaxiReservation
  ///
  static const pickupLocation = IriTerm.prevalidated(
    'https://schema.org/pickupLocation',
  );

  /// IRI for schema:pickupTime [Expects: https://schema.org/DateTime]
  ///
  /// When a taxi will pick up a passenger or a rental car can be picked up.
  ///
  /// Can be used on: https://schema.org/RentalCarReservation, https://schema.org/TaxiReservation
  ///
  static const pickupTime = IriTerm.prevalidated(
    'https://schema.org/pickupTime',
  );

  /// IRI for schema:playMode [Expects: https://schema.org/GamePlayMode]
  ///
  /// Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
  ///
  /// Can be used on: https://schema.org/VideoGame, https://schema.org/VideoGameSeries
  ///
  static const playMode = IriTerm.prevalidated('https://schema.org/playMode');

  /// IRI for schema:playerType [Expects: https://schema.org/Text]
  ///
  /// Player type required&#x2014;for example, Flash or Silverlight.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const playerType = IriTerm.prevalidated(
    'https://schema.org/playerType',
  );

  /// IRI for schema:playersOnline [Expects: https://schema.org/Integer]
  ///
  /// Number of players on the server.
  ///
  /// Can be used on: https://schema.org/GameServer
  ///
  static const playersOnline = IriTerm.prevalidated(
    'https://schema.org/playersOnline',
  );

  /// IRI for schema:polygon [Expects: https://schema.org/Text]
  ///
  /// A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
  ///
  /// Can be used on: https://schema.org/GeoShape
  ///
  static const polygon = IriTerm.prevalidated('https://schema.org/polygon');

  /// IRI for schema:populationType [Expects: https://schema.org/Class]
  ///
  /// Indicates the populationType common to all members of a {[StatisticalPopulation]} or all cases within the scope of a {[StatisticalVariable]}.
  ///
  /// Can be used on: https://schema.org/StatisticalPopulation, https://schema.org/StatisticalVariable
  ///
  static const populationType = IriTerm.prevalidated(
    'https://schema.org/populationType',
  );

  /// IRI for schema:positiveNotes [Expects: https://schema.org/ItemList, https://schema.org/ListItem, https://schema.org/Text, https://schema.org/WebContent]
  ///
  /// Provides positive considerations regarding something, for example product highlights or (alongside {[negativeNotes]}) pro/con lists for reviews.
  ///
  /// In the case of a {[Review]}, the property describes the {[itemReviewed]} from the perspective of the review; in the case of a {[Product]}, the product itself is being described.
  ///
  /// The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Review
  ///
  static const positiveNotes = IriTerm.prevalidated(
    'https://schema.org/positiveNotes',
  );

  /// IRI for schema:possibleComplication [Expects: https://schema.org/Text]
  ///
  /// A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const possibleComplication = IriTerm.prevalidated(
    'https://schema.org/possibleComplication',
  );

  /// IRI for schema:possibleTreatment [Expects: https://schema.org/MedicalTherapy]
  ///
  /// A possible treatment to address this condition, sign or symptom.
  ///
  /// Can be used on: https://schema.org/MedicalCondition, https://schema.org/MedicalSignOrSymptom
  ///
  static const possibleTreatment = IriTerm.prevalidated(
    'https://schema.org/possibleTreatment',
  );

  /// IRI for schema:postOfficeBoxNumber [Expects: https://schema.org/Text]
  ///
  /// The post office box number for PO box addresses.
  ///
  /// Can be used on: https://schema.org/PostalAddress
  ///
  static const postOfficeBoxNumber = IriTerm.prevalidated(
    'https://schema.org/postOfficeBoxNumber',
  );

  /// IRI for schema:postOp [Expects: https://schema.org/Text]
  ///
  /// A description of the postoperative procedures, care, and/or followups for this device.
  ///
  /// Can be used on: https://schema.org/MedicalDevice
  ///
  static const postOp = IriTerm.prevalidated('https://schema.org/postOp');

  /// IRI for schema:postalCode [Expects: https://schema.org/Text]
  ///
  /// The postal code. For example, 94043.
  ///
  /// Can be used on: https://schema.org/DefinedRegion, https://schema.org/GeoCoordinates, https://schema.org/GeoShape, https://schema.org/PostalAddress
  ///
  static const postalCode = IriTerm.prevalidated(
    'https://schema.org/postalCode',
  );

  /// IRI for schema:postalCodeBegin [Expects: https://schema.org/Text]
  ///
  /// First postal code in a range (included).
  ///
  /// Can be used on: https://schema.org/PostalCodeRangeSpecification
  ///
  static const postalCodeBegin = IriTerm.prevalidated(
    'https://schema.org/postalCodeBegin',
  );

  /// IRI for schema:postalCodeEnd [Expects: https://schema.org/Text]
  ///
  /// Last postal code in the range (included). Needs to be after {[postalCodeBegin]}.
  ///
  /// Can be used on: https://schema.org/PostalCodeRangeSpecification
  ///
  static const postalCodeEnd = IriTerm.prevalidated(
    'https://schema.org/postalCodeEnd',
  );

  /// IRI for schema:postalCodePrefix [Expects: https://schema.org/Text]
  ///
  /// A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.
  ///
  /// Can be used on: https://schema.org/DefinedRegion
  ///
  static const postalCodePrefix = IriTerm.prevalidated(
    'https://schema.org/postalCodePrefix',
  );

  /// IRI for schema:postalCodeRange [Expects: https://schema.org/PostalCodeRangeSpecification]
  ///
  /// A defined range of postal codes.
  ///
  /// Can be used on: https://schema.org/DefinedRegion
  ///
  static const postalCodeRange = IriTerm.prevalidated(
    'https://schema.org/postalCodeRange',
  );

  /// IRI for schema:potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// IRI for schema:potentialUse [Expects: https://schema.org/DefinedTerm]
  ///
  /// Intended use of the BioChemEntity by humans.
  ///
  /// Can be used on: https://schema.org/ChemicalSubstance, https://schema.org/MolecularEntity
  ///
  static const potentialUse = IriTerm.prevalidated(
    'https://schema.org/potentialUse',
  );

  /// IRI for schema:practicesAt [Expects: https://schema.org/MedicalOrganization]
  ///
  /// A {[MedicalOrganization]} where the {[IndividualPhysician]} practices.
  ///
  /// Can be used on: https://schema.org/IndividualPhysician
  ///
  static const practicesAt = IriTerm.prevalidated(
    'https://schema.org/practicesAt',
  );

  /// IRI for schema:preOp [Expects: https://schema.org/Text]
  ///
  /// A description of the workup, testing, and other preparations required before implanting this device.
  ///
  /// Can be used on: https://schema.org/MedicalDevice
  ///
  static const preOp = IriTerm.prevalidated('https://schema.org/preOp');

  /// IRI for schema:predecessorOf [Expects: https://schema.org/ProductModel]
  ///
  /// A pointer from a previous, often discontinued variant of the product to its newer variant.
  ///
  /// Can be used on: https://schema.org/ProductModel
  ///
  static const predecessorOf = IriTerm.prevalidated(
    'https://schema.org/predecessorOf',
  );

  /// IRI for schema:pregnancyCategory [Expects: https://schema.org/DrugPregnancyCategory]
  ///
  /// Pregnancy category of this drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const pregnancyCategory = IriTerm.prevalidated(
    'https://schema.org/pregnancyCategory',
  );

  /// IRI for schema:pregnancyWarning [Expects: https://schema.org/Text]
  ///
  /// Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const pregnancyWarning = IriTerm.prevalidated(
    'https://schema.org/pregnancyWarning',
  );

  /// IRI for schema:prepTime [Expects: https://schema.org/Duration]
  ///
  /// The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToDirection
  ///
  static const prepTime = IriTerm.prevalidated('https://schema.org/prepTime');

  /// IRI for schema:preparation [Expects: https://schema.org/MedicalEntity, https://schema.org/Text]
  ///
  /// Typical preparation that a patient must undergo before having the procedure performed.
  ///
  /// Can be used on: https://schema.org/MedicalProcedure
  ///
  static const preparation = IriTerm.prevalidated(
    'https://schema.org/preparation',
  );

  /// IRI for schema:prescribingInfo [Expects: https://schema.org/URL]
  ///
  /// Link to prescribing information for the drug.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const prescribingInfo = IriTerm.prevalidated(
    'https://schema.org/prescribingInfo',
  );

  /// IRI for schema:prescriptionStatus [Expects: https://schema.org/DrugPrescriptionStatus, https://schema.org/Text]
  ///
  /// Indicates the status of drug prescription, e.g. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const prescriptionStatus = IriTerm.prevalidated(
    'https://schema.org/prescriptionStatus',
  );

  /// IRI for schema:previousItem [Expects: https://schema.org/ListItem]
  ///
  /// A link to the ListItem that precedes the current one.
  ///
  /// Can be used on: https://schema.org/ListItem
  ///
  static const previousItem = IriTerm.prevalidated(
    'https://schema.org/previousItem',
  );

  /// IRI for schema:previousStartDate [Expects: https://schema.org/Date]
  ///
  /// Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const previousStartDate = IriTerm.prevalidated(
    'https://schema.org/previousStartDate',
  );

  /// IRI for schema:price [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n\nUsage guidelines:\n\n* Use the {[priceCurrency]} property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.
  ///
  ///
  /// Can be used on: https://schema.org/DonateAction, https://schema.org/Offer, https://schema.org/PriceSpecification, https://schema.org/TradeAction
  ///
  static const price = IriTerm.prevalidated('https://schema.org/price');

  /// IRI for schema:priceComponent [Expects: https://schema.org/UnitPriceSpecification]
  ///
  /// This property links to all {[UnitPriceSpecification]} nodes that apply in parallel for the {[CompoundPriceSpecification]} node.
  ///
  /// Can be used on: https://schema.org/CompoundPriceSpecification
  ///
  static const priceComponent = IriTerm.prevalidated(
    'https://schema.org/priceComponent',
  );

  /// IRI for schema:priceComponentType [Expects: https://schema.org/PriceComponentTypeEnumeration]
  ///
  /// Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const priceComponentType = IriTerm.prevalidated(
    'https://schema.org/priceComponentType',
  );

  /// IRI for schema:priceCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency of the price, or a price component when attached to {[PriceSpecification]} and its subtypes.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
  ///
  /// Can be used on: https://schema.org/DonateAction, https://schema.org/Offer, https://schema.org/PriceSpecification, https://schema.org/Reservation, https://schema.org/Ticket, https://schema.org/TradeAction
  ///
  static const priceCurrency = IriTerm.prevalidated(
    'https://schema.org/priceCurrency',
  );

  /// IRI for schema:priceRange [Expects: https://schema.org/Text]
  ///
  /// The price range of the business, for example ```$$$```.
  ///
  /// Can be used on: https://schema.org/LocalBusiness
  ///
  static const priceRange = IriTerm.prevalidated(
    'https://schema.org/priceRange',
  );

  /// IRI for schema:priceSpecification [Expects: https://schema.org/PriceSpecification]
  ///
  /// One or more detailed price specifications, indicating the unit price and delivery or payment charges.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/DonateAction, https://schema.org/Offer, https://schema.org/TradeAction
  ///
  static const priceSpecification = IriTerm.prevalidated(
    'https://schema.org/priceSpecification',
  );

  /// IRI for schema:priceType [Expects: https://schema.org/PriceTypeEnumeration, https://schema.org/Text]
  ///
  /// Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the {[priceType]} property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.
  ///
  /// Can be used on: https://schema.org/CompoundPriceSpecification, https://schema.org/UnitPriceSpecification
  ///
  static const priceType = IriTerm.prevalidated('https://schema.org/priceType');

  /// IRI for schema:priceValidUntil [Expects: https://schema.org/Date]
  ///
  /// The date after which the price is no longer available.
  ///
  /// Can be used on: https://schema.org/Offer
  ///
  static const priceValidUntil = IriTerm.prevalidated(
    'https://schema.org/priceValidUntil',
  );

  /// IRI for schema:primaryImageOfPage [Expects: https://schema.org/ImageObject]
  ///
  /// Indicates the main image on the page.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const primaryImageOfPage = IriTerm.prevalidated(
    'https://schema.org/primaryImageOfPage',
  );

  /// IRI for schema:primaryPrevention [Expects: https://schema.org/MedicalTherapy]
  ///
  /// A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const primaryPrevention = IriTerm.prevalidated(
    'https://schema.org/primaryPrevention',
  );

  /// IRI for schema:printColumn [Expects: https://schema.org/Text]
  ///
  /// The number of the column in which the NewsArticle appears in the print edition.
  ///
  /// Can be used on: https://schema.org/NewsArticle
  ///
  static const printColumn = IriTerm.prevalidated(
    'https://schema.org/printColumn',
  );

  /// IRI for schema:printEdition [Expects: https://schema.org/Text]
  ///
  /// The edition of the print product in which the NewsArticle appears.
  ///
  /// Can be used on: https://schema.org/NewsArticle
  ///
  static const printEdition = IriTerm.prevalidated(
    'https://schema.org/printEdition',
  );

  /// IRI for schema:printPage [Expects: https://schema.org/Text]
  ///
  /// If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
  ///
  /// Can be used on: https://schema.org/NewsArticle
  ///
  static const printPage = IriTerm.prevalidated('https://schema.org/printPage');

  /// IRI for schema:printSection [Expects: https://schema.org/Text]
  ///
  /// If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
  ///
  /// Can be used on: https://schema.org/NewsArticle
  ///
  static const printSection = IriTerm.prevalidated(
    'https://schema.org/printSection',
  );

  /// IRI for schema:procedure [Expects: https://schema.org/Text]
  ///
  /// A description of the procedure involved in setting up, using, and/or installing the device.
  ///
  /// Can be used on: https://schema.org/MedicalDevice
  ///
  static const procedure = IriTerm.prevalidated('https://schema.org/procedure');

  /// IRI for schema:procedureType [Expects: https://schema.org/MedicalProcedureType]
  ///
  /// The type of procedure, for example Surgical, Noninvasive, or Percutaneous.
  ///
  /// Can be used on: https://schema.org/MedicalProcedure
  ///
  static const procedureType = IriTerm.prevalidated(
    'https://schema.org/procedureType',
  );

  /// IRI for schema:processingTime [Expects: https://schema.org/Duration]
  ///
  /// Estimated processing time for the service using this channel.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const processingTime = IriTerm.prevalidated(
    'https://schema.org/processingTime',
  );

  /// IRI for schema:processorRequirements [Expects: https://schema.org/Text]
  ///
  /// Processor architecture required to run the application (e.g. IA64).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const processorRequirements = IriTerm.prevalidated(
    'https://schema.org/processorRequirements',
  );

  /// IRI for schema:producer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const producer = IriTerm.prevalidated('https://schema.org/producer');

  /// IRI for schema:produces [Expects: https://schema.org/Thing]
  ///
  /// The tangible thing generated by the service, e.g. a passport, permit, etc.
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const produces = IriTerm.prevalidated('https://schema.org/produces');

  /// IRI for schema:productGroupID [Expects: https://schema.org/Text]
  ///
  /// Indicates a textual identifier for a ProductGroup.
  ///
  /// Can be used on: https://schema.org/ProductGroup
  ///
  static const productGroupID = IriTerm.prevalidated(
    'https://schema.org/productGroupID',
  );

  /// IRI for schema:productID [Expects: https://schema.org/Text]
  ///
  /// The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const productID = IriTerm.prevalidated('https://schema.org/productID');

  /// IRI for schema:productSupported [Expects: https://schema.org/Product, https://schema.org/Text]
  ///
  /// The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
  ///
  /// Can be used on: https://schema.org/ContactPoint
  ///
  static const productSupported = IriTerm.prevalidated(
    'https://schema.org/productSupported',
  );

  /// IRI for schema:productionCompany [Expects: https://schema.org/Organization]
  ///
  /// The production company or studio responsible for the item, e.g. series, video game, episode etc.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/MediaObject, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const productionCompany = IriTerm.prevalidated(
    'https://schema.org/productionCompany',
  );

  /// IRI for schema:productionDate [Expects: https://schema.org/Date]
  ///
  /// The date of production of the item, e.g. vehicle.
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Vehicle
  ///
  static const productionDate = IriTerm.prevalidated(
    'https://schema.org/productionDate',
  );

  /// IRI for schema:proficiencyLevel [Expects: https://schema.org/Text]
  ///
  /// Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
  ///
  /// Can be used on: https://schema.org/TechArticle
  ///
  static const proficiencyLevel = IriTerm.prevalidated(
    'https://schema.org/proficiencyLevel',
  );

  /// IRI for schema:program [Expects: https://schema.org/MemberProgram]
  ///
  /// The [MemberProgram](https://schema.org/MemberProgram) associated with a [ProgramMembership](https://schema.org/ProgramMembership).
  ///
  /// Can be used on: https://schema.org/ProgramMembership
  ///
  static const program = IriTerm.prevalidated('https://schema.org/program');

  /// IRI for schema:programMembershipUsed [Expects: https://schema.org/ProgramMembership]
  ///
  /// Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const programMembershipUsed = IriTerm.prevalidated(
    'https://schema.org/programMembershipUsed',
  );

  /// IRI for schema:programName [Expects: https://schema.org/Text]
  ///
  /// The program providing the membership. It is preferable to use [:program](https://schema.org/program) instead.
  ///
  /// Can be used on: https://schema.org/ProgramMembership
  ///
  static const programName = IriTerm.prevalidated(
    'https://schema.org/programName',
  );

  /// IRI for schema:programPrerequisites [Expects: https://schema.org/AlignmentObject, https://schema.org/Course, https://schema.org/EducationalOccupationalCredential, https://schema.org/Text]
  ///
  /// Prerequisites for enrolling in the program.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const programPrerequisites = IriTerm.prevalidated(
    'https://schema.org/programPrerequisites',
  );

  /// IRI for schema:programType [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The type of educational or occupational program. For example, classroom, internship, alternance, etc.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const programType = IriTerm.prevalidated(
    'https://schema.org/programType',
  );

  /// IRI for schema:programmingLanguage [Expects: https://schema.org/ComputerLanguage, https://schema.org/Text]
  ///
  /// The computer programming language.
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const programmingLanguage = IriTerm.prevalidated(
    'https://schema.org/programmingLanguage',
  );

  /// IRI for schema:programmingModel [Expects: https://schema.org/Text]
  ///
  /// Indicates whether API is managed or unmanaged.
  ///
  /// Can be used on: https://schema.org/APIReference
  ///
  static const programmingModel = IriTerm.prevalidated(
    'https://schema.org/programmingModel',
  );

  /// IRI for schema:propertyID [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
  /// (1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific ID of the property), or (3)
  /// a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
  /// Standards bodies should promote a standard prefix for the identifiers of properties from their standards.
  ///
  /// Can be used on: https://schema.org/PropertyValue
  ///
  static const propertyID = IriTerm.prevalidated(
    'https://schema.org/propertyID',
  );

  /// IRI for schema:proprietaryName [Expects: https://schema.org/Text]
  ///
  /// Proprietary name given to the diet plan, typically by its originator or creator.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/Drug
  ///
  static const proprietaryName = IriTerm.prevalidated(
    'https://schema.org/proprietaryName',
  );

  /// IRI for schema:proteinContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of protein.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const proteinContent = IriTerm.prevalidated(
    'https://schema.org/proteinContent',
  );

  /// IRI for schema:providerMobility [Expects: https://schema.org/Text]
  ///
  /// Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const providerMobility = IriTerm.prevalidated(
    'https://schema.org/providerMobility',
  );

  /// IRI for schema:providesService [Expects: https://schema.org/Service]
  ///
  /// The service provided by this channel.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const providesService = IriTerm.prevalidated(
    'https://schema.org/providesService',
  );

  /// IRI for schema:publicAccess [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the {[Place]} is open to public visitors.  If this property is omitted there is no assumed default boolean value.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const publicAccess = IriTerm.prevalidated(
    'https://schema.org/publicAccess',
  );

  /// IRI for schema:publicTransportClosuresInfo [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Information about public transport closures.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const publicTransportClosuresInfo = IriTerm.prevalidated(
    'https://schema.org/publicTransportClosuresInfo',
  );

  /// IRI for schema:publication [Expects: https://schema.org/PublicationEvent]
  ///
  /// A publication event associated with the item.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const publication = IriTerm.prevalidated(
    'https://schema.org/publication',
  );

  /// IRI for schema:publicationType [Expects: https://schema.org/Text]
  ///
  /// The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).
  ///
  /// Can be used on: https://schema.org/MedicalScholarlyArticle
  ///
  static const publicationType = IriTerm.prevalidated(
    'https://schema.org/publicationType',
  );

  /// IRI for schema:publishedBy [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An agent associated with the publication event.
  ///
  /// Can be used on: https://schema.org/PublicationEvent
  ///
  static const publishedBy = IriTerm.prevalidated(
    'https://schema.org/publishedBy',
  );

  /// IRI for schema:publishedOn [Expects: https://schema.org/BroadcastService]
  ///
  /// A broadcast service associated with the publication event.
  ///
  /// Can be used on: https://schema.org/PublicationEvent
  ///
  static const publishedOn = IriTerm.prevalidated(
    'https://schema.org/publishedOn',
  );

  /// IRI for schema:publisher [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The publisher of the article in question.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/FinancialIncentive
  ///
  static const publisher = IriTerm.prevalidated('https://schema.org/publisher');

  /// IRI for schema:publisherImprint [Expects: https://schema.org/Organization]
  ///
  /// The publishing division which published the comic.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const publisherImprint = IriTerm.prevalidated(
    'https://schema.org/publisherImprint',
  );

  /// IRI for schema:purchaseDate [Expects: https://schema.org/Date]
  ///
  /// The date the item, e.g. vehicle, was purchased by the current owner.
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/Vehicle
  ///
  static const purchaseDate = IriTerm.prevalidated(
    'https://schema.org/purchaseDate',
  );

  /// IRI for schema:purchasePriceLimit [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Optional. The maximum price the item can have and still qualify for this offer.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const purchasePriceLimit = IriTerm.prevalidated(
    'https://schema.org/purchasePriceLimit',
  );

  /// IRI for schema:purchaseType [Expects: https://schema.org/PurchaseType]
  ///
  /// Optional. The type of purchase the consumer must make in order to qualify for this incentive.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const purchaseType = IriTerm.prevalidated(
    'https://schema.org/purchaseType',
  );

  /// IRI for schema:qualifications [Expects: https://schema.org/EducationalOccupationalCredential, https://schema.org/Text]
  ///
  /// Specific qualifications required for this role or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const qualifications = IriTerm.prevalidated(
    'https://schema.org/qualifications',
  );

  /// IRI for schema:qualifiedExpense [Expects: https://schema.org/IncentiveQualifiedExpenseType]
  ///
  /// Optional. The types of expenses that are covered by the incentive. For example some incentives are only for the goods (tangible items) but the services (labor) are excluded.
  ///
  /// Can be used on: https://schema.org/FinancialIncentive
  ///
  static const qualifiedExpense = IriTerm.prevalidated(
    'https://schema.org/qualifiedExpense',
  );

  /// IRI for schema:quarantineGuidelines [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Guidelines about quarantine rules, e.g. in the context of a pandemic.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const quarantineGuidelines = IriTerm.prevalidated(
    'https://schema.org/quarantineGuidelines',
  );

  /// IRI for schema:query [Expects: https://schema.org/Text]
  ///
  /// A sub property of instrument. The query used on this action.
  ///
  /// Can be used on: https://schema.org/SearchAction
  ///
  static const query = IriTerm.prevalidated('https://schema.org/query');

  /// IRI for schema:quest [Expects: https://schema.org/Thing]
  ///
  /// The task that a player-controlled character, or group of characters may complete in order to gain a reward.
  ///
  /// Can be used on: https://schema.org/Game, https://schema.org/VideoGameSeries
  ///
  static const quest = IriTerm.prevalidated('https://schema.org/quest');

  /// IRI for schema:question [Expects: https://schema.org/Question]
  ///
  /// A sub property of object. A question.
  ///
  /// Can be used on: https://schema.org/AskAction
  ///
  static const question = IriTerm.prevalidated('https://schema.org/question');

  /// IRI for schema:rangeIncludes [Expects: https://schema.org/Class]
  ///
  /// Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
  ///
  /// Can be used on: https://schema.org/Property
  ///
  static const rangeIncludes = IriTerm.prevalidated(
    'https://schema.org/rangeIncludes',
  );

  /// IRI for schema:ratingCount [Expects: https://schema.org/Integer]
  ///
  /// The count of total number of ratings.
  ///
  /// Can be used on: https://schema.org/AggregateRating
  ///
  static const ratingCount = IriTerm.prevalidated(
    'https://schema.org/ratingCount',
  );

  /// IRI for schema:ratingExplanation [Expects: https://schema.org/Text]
  ///
  /// A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with "fact check" markup using {[ClaimReview]}.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const ratingExplanation = IriTerm.prevalidated(
    'https://schema.org/ratingExplanation',
  );

  /// IRI for schema:ratingValue [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The rating for the content.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const ratingValue = IriTerm.prevalidated(
    'https://schema.org/ratingValue',
  );

  /// IRI for schema:readBy [Expects: https://schema.org/Person]
  ///
  /// A person who reads (performs) the audiobook.
  ///
  /// Can be used on: https://schema.org/Audiobook
  ///
  static const readBy = IriTerm.prevalidated('https://schema.org/readBy');

  /// IRI for schema:readonlyValue [Expects: https://schema.org/Boolean]
  ///
  /// Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const readonlyValue = IriTerm.prevalidated(
    'https://schema.org/readonlyValue',
  );

  /// IRI for schema:realEstateAgent [Expects: https://schema.org/RealEstateAgent]
  ///
  /// A sub property of participant. The real estate agent involved in the action.
  ///
  /// Can be used on: https://schema.org/RentAction
  ///
  static const realEstateAgent = IriTerm.prevalidated(
    'https://schema.org/realEstateAgent',
  );

  /// IRI for schema:recipe [Expects: https://schema.org/Recipe]
  ///
  /// A sub property of instrument. The recipe/instructions used to perform the action.
  ///
  /// Can be used on: https://schema.org/CookAction
  ///
  static const recipe = IriTerm.prevalidated('https://schema.org/recipe');

  /// IRI for schema:recipeCategory [Expects: https://schema.org/Text]
  ///
  /// The category of the recipe‚Äîfor example, appetizer, entree, etc.
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const recipeCategory = IriTerm.prevalidated(
    'https://schema.org/recipeCategory',
  );

  /// IRI for schema:recipeCuisine [Expects: https://schema.org/Text]
  ///
  /// The cuisine of the recipe (for example, French or Ethiopian).
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const recipeCuisine = IriTerm.prevalidated(
    'https://schema.org/recipeCuisine',
  );

  /// IRI for schema:recipeInstructions [Expects: https://schema.org/CreativeWork, https://schema.org/ItemList, https://schema.org/Text]
  ///
  /// A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const recipeInstructions = IriTerm.prevalidated(
    'https://schema.org/recipeInstructions',
  );

  /// IRI for schema:recipeYield [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// The quantity produced by the recipe (for example, number of people served, number of servings, etc).
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const recipeYield = IriTerm.prevalidated(
    'https://schema.org/recipeYield',
  );

  /// IRI for schema:recognizedBy [Expects: https://schema.org/Organization]
  ///
  /// An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalCredential
  ///
  static const recognizedBy = IriTerm.prevalidated(
    'https://schema.org/recognizedBy',
  );

  /// IRI for schema:recognizingAuthority [Expects: https://schema.org/Organization]
  ///
  /// If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const recognizingAuthority = IriTerm.prevalidated(
    'https://schema.org/recognizingAuthority',
  );

  /// IRI for schema:recommendationStrength [Expects: https://schema.org/Text]
  ///
  /// Strength of the guideline's recommendation (e.g. 'class I').
  ///
  /// Can be used on: https://schema.org/MedicalGuidelineRecommendation
  ///
  static const recommendationStrength = IriTerm.prevalidated(
    'https://schema.org/recommendationStrength',
  );

  /// IRI for schema:recommendedIntake [Expects: https://schema.org/RecommendedDoseSchedule]
  ///
  /// Recommended intake of this supplement for a given population as defined by a specific recommending authority.
  ///
  /// Can be used on: https://schema.org/DietarySupplement
  ///
  static const recommendedIntake = IriTerm.prevalidated(
    'https://schema.org/recommendedIntake',
  );

  /// IRI for schema:recordLabel [Expects: https://schema.org/Organization]
  ///
  /// The label that issued the release.
  ///
  /// Can be used on: https://schema.org/MusicRelease
  ///
  static const recordLabel = IriTerm.prevalidated(
    'https://schema.org/recordLabel',
  );

  /// IRI for schema:recourseLoan [Expects: https://schema.org/Boolean]
  ///
  /// The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const recourseLoan = IriTerm.prevalidated(
    'https://schema.org/recourseLoan',
  );

  /// IRI for schema:referee [Expects: https://schema.org/Person]
  ///
  /// An official who watches a game or match closely to enforce the rules and arbitrate on matters arising from the play such as referees, umpires or judges. The name of the effective function can vary according to the sport.
  ///
  /// Can be used on: https://schema.org/SportsEvent
  ///
  static const referee = IriTerm.prevalidated('https://schema.org/referee');

  /// IRI for schema:referenceQuantity [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
  ///
  /// Can be used on: https://schema.org/UnitPriceSpecification
  ///
  static const referenceQuantity = IriTerm.prevalidated(
    'https://schema.org/referenceQuantity',
  );

  /// IRI for schema:referencesOrder [Expects: https://schema.org/Order]
  ///
  /// The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const referencesOrder = IriTerm.prevalidated(
    'https://schema.org/referencesOrder',
  );

  /// IRI for schema:refundType [Expects: https://schema.org/RefundTypeEnumeration]
  ///
  /// A refund type, from an enumerated list.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const refundType = IriTerm.prevalidated(
    'https://schema.org/refundType',
  );

  /// IRI for schema:regionDrained [Expects: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem]
  ///
  /// The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.
  ///
  /// Can be used on: https://schema.org/LymphaticVessel, https://schema.org/Vein
  ///
  static const regionDrained = IriTerm.prevalidated(
    'https://schema.org/regionDrained',
  );

  /// IRI for schema:regionsAllowed [Expects: https://schema.org/Place]
  ///
  /// The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const regionsAllowed = IriTerm.prevalidated(
    'https://schema.org/regionsAllowed',
  );

  /// IRI for schema:relatedAnatomy [Expects: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem]
  ///
  /// Anatomical systems or structures that relate to the superficial anatomy.
  ///
  /// Can be used on: https://schema.org/SuperficialAnatomy
  ///
  static const relatedAnatomy = IriTerm.prevalidated(
    'https://schema.org/relatedAnatomy',
  );

  /// IRI for schema:relatedCondition [Expects: https://schema.org/MedicalCondition]
  ///
  /// A medical condition associated with this anatomy.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem, https://schema.org/SuperficialAnatomy
  ///
  static const relatedCondition = IriTerm.prevalidated(
    'https://schema.org/relatedCondition',
  );

  /// IRI for schema:relatedDrug [Expects: https://schema.org/Drug]
  ///
  /// Any other drug related to this one, for example commonly-prescribed alternatives.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const relatedDrug = IriTerm.prevalidated(
    'https://schema.org/relatedDrug',
  );

  /// IRI for schema:relatedLink [Expects: https://schema.org/URL]
  ///
  /// A link related to this web page, for example to other related web pages.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const relatedLink = IriTerm.prevalidated(
    'https://schema.org/relatedLink',
  );

  /// IRI for schema:relatedStructure [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.
  ///
  /// Can be used on: https://schema.org/AnatomicalSystem
  ///
  static const relatedStructure = IriTerm.prevalidated(
    'https://schema.org/relatedStructure',
  );

  /// IRI for schema:relatedTherapy [Expects: https://schema.org/MedicalTherapy]
  ///
  /// A medical therapy related to this anatomy.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure, https://schema.org/AnatomicalSystem, https://schema.org/SuperficialAnatomy
  ///
  static const relatedTherapy = IriTerm.prevalidated(
    'https://schema.org/relatedTherapy',
  );

  /// IRI for schema:relatedTo [Expects: https://schema.org/Person]
  ///
  /// The most generic familial relation.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const relatedTo = IriTerm.prevalidated('https://schema.org/relatedTo');

  /// IRI for schema:releaseDate [Expects: https://schema.org/Date]
  ///
  /// The release date of a product or product model. This can be used to distinguish the exact variant of a product.
  ///
  /// Can be used on: https://schema.org/Product
  ///
  static const releaseDate = IriTerm.prevalidated(
    'https://schema.org/releaseDate',
  );

  /// IRI for schema:releaseNotes [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Description of what changed in this version.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const releaseNotes = IriTerm.prevalidated(
    'https://schema.org/releaseNotes',
  );

  /// IRI for schema:releasedEvent [Expects: https://schema.org/PublicationEvent]
  ///
  /// The place and time the release was issued, expressed as a PublicationEvent.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const releasedEvent = IriTerm.prevalidated(
    'https://schema.org/releasedEvent',
  );

  /// IRI for schema:relevantOccupation [Expects: https://schema.org/Occupation]
  ///
  /// The Occupation for the JobPosting.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const relevantOccupation = IriTerm.prevalidated(
    'https://schema.org/relevantOccupation',
  );

  /// IRI for schema:relevantSpecialty [Expects: https://schema.org/MedicalSpecialty]
  ///
  /// If applicable, a medical specialty in which this entity is relevant.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const relevantSpecialty = IriTerm.prevalidated(
    'https://schema.org/relevantSpecialty',
  );

  /// IRI for schema:remainingAttendeeCapacity [Expects: https://schema.org/Integer]
  ///
  /// The number of attendee places for an event that remain unallocated.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const remainingAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/remainingAttendeeCapacity',
  );

  /// IRI for schema:renegotiableLoan [Expects: https://schema.org/Boolean]
  ///
  /// Whether the terms for payment of interest can be renegotiated during the life of the loan.
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const renegotiableLoan = IriTerm.prevalidated(
    'https://schema.org/renegotiableLoan',
  );

  /// IRI for schema:repeatCount [Expects: https://schema.org/Integer]
  ///
  /// Defines the number of times a recurring {[Event]} will take place.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const repeatCount = IriTerm.prevalidated(
    'https://schema.org/repeatCount',
  );

  /// IRI for schema:repeatFrequency [Expects: https://schema.org/Duration, https://schema.org/Text]
  ///
  /// Defines the frequency at which {[Event]}s will occur according to a schedule {[Schedule]}. The intervals between
  /// events should be defined as a {[Duration]} of time.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const repeatFrequency = IriTerm.prevalidated(
    'https://schema.org/repeatFrequency',
  );

  /// IRI for schema:repetitions [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// Number of times one should repeat the activity.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const repetitions = IriTerm.prevalidated(
    'https://schema.org/repetitions',
  );

  /// IRI for schema:replacee [Expects: https://schema.org/Thing]
  ///
  /// A sub property of object. The object that is being replaced.
  ///
  /// Can be used on: https://schema.org/ReplaceAction
  ///
  static const replacee = IriTerm.prevalidated('https://schema.org/replacee');

  /// IRI for schema:replacer [Expects: https://schema.org/Thing]
  ///
  /// A sub property of object. The object that replaces.
  ///
  /// Can be used on: https://schema.org/ReplaceAction
  ///
  static const replacer = IriTerm.prevalidated('https://schema.org/replacer');

  /// IRI for schema:replyToUrl [Expects: https://schema.org/URL]
  ///
  /// The URL at which a reply may be posted to the specified UserComment.
  ///
  /// Can be used on: https://schema.org/UserComments
  ///
  static const replyToUrl = IriTerm.prevalidated(
    'https://schema.org/replyToUrl',
  );

  /// IRI for schema:reportNumber [Expects: https://schema.org/Text]
  ///
  /// The number or other unique designator assigned to a Report by the publishing organization.
  ///
  /// Can be used on: https://schema.org/Report
  ///
  static const reportNumber = IriTerm.prevalidated(
    'https://schema.org/reportNumber',
  );

  /// IRI for schema:representativeOfPage [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether this image is representative of the content of the page.
  ///
  /// Can be used on: https://schema.org/ImageObject
  ///
  static const representativeOfPage = IriTerm.prevalidated(
    'https://schema.org/representativeOfPage',
  );

  /// IRI for schema:requiredCollateral [Expects: https://schema.org/Text, https://schema.org/Thing]
  ///
  /// Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)
  ///
  /// Can be used on: https://schema.org/LoanOrCredit
  ///
  static const requiredCollateral = IriTerm.prevalidated(
    'https://schema.org/requiredCollateral',
  );

  /// IRI for schema:requiredGender [Expects: https://schema.org/Text]
  ///
  /// Audiences defined by a person's gender.
  ///
  /// Can be used on: https://schema.org/PeopleAudience
  ///
  static const requiredGender = IriTerm.prevalidated(
    'https://schema.org/requiredGender',
  );

  /// IRI for schema:requiredMaxAge [Expects: https://schema.org/Integer]
  ///
  /// Audiences defined by a person's maximum age.
  ///
  /// Can be used on: https://schema.org/PeopleAudience
  ///
  static const requiredMaxAge = IriTerm.prevalidated(
    'https://schema.org/requiredMaxAge',
  );

  /// IRI for schema:requiredMinAge [Expects: https://schema.org/Integer]
  ///
  /// Audiences defined by a person's minimum age.
  ///
  /// Can be used on: https://schema.org/PeopleAudience
  ///
  static const requiredMinAge = IriTerm.prevalidated(
    'https://schema.org/requiredMinAge',
  );

  /// IRI for schema:requiredQuantity [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// The required quantity of the item(s).
  ///
  /// Can be used on: https://schema.org/HowToItem
  ///
  static const requiredQuantity = IriTerm.prevalidated(
    'https://schema.org/requiredQuantity',
  );

  /// IRI for schema:requirements [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const requirements = IriTerm.prevalidated(
    'https://schema.org/requirements',
  );

  /// IRI for schema:requiresSubscription [Expects: https://schema.org/Boolean, https://schema.org/MediaSubscription]
  ///
  /// Indicates if use of the media require a subscription  (either paid or free). Allowed values are ```true``` or ```false``` (note that an earlier version had 'yes', 'no').
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/MediaObject
  ///
  static const requiresSubscription = IriTerm.prevalidated(
    'https://schema.org/requiresSubscription',
  );

  /// IRI for schema:reservationFor [Expects: https://schema.org/Thing]
  ///
  /// The thing -- flight, event, restaurant, etc. being reserved.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const reservationFor = IriTerm.prevalidated(
    'https://schema.org/reservationFor',
  );

  /// IRI for schema:reservationId [Expects: https://schema.org/Text]
  ///
  /// A unique identifier for the reservation.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const reservationId = IriTerm.prevalidated(
    'https://schema.org/reservationId',
  );

  /// IRI for schema:reservationStatus [Expects: https://schema.org/ReservationStatusType]
  ///
  /// The current status of the reservation.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const reservationStatus = IriTerm.prevalidated(
    'https://schema.org/reservationStatus',
  );

  /// IRI for schema:reservedTicket [Expects: https://schema.org/Ticket]
  ///
  /// A ticket associated with the reservation.
  ///
  /// Can be used on: https://schema.org/Reservation
  ///
  static const reservedTicket = IriTerm.prevalidated(
    'https://schema.org/reservedTicket',
  );

  /// IRI for schema:responsibilities [Expects: https://schema.org/Text]
  ///
  /// Responsibilities associated with this role or Occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation
  ///
  static const responsibilities = IriTerm.prevalidated(
    'https://schema.org/responsibilities',
  );

  /// IRI for schema:restPeriods [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// How often one should break from the activity.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const restPeriods = IriTerm.prevalidated(
    'https://schema.org/restPeriods',
  );

  /// IRI for schema:restockingFee [Expects: https://schema.org/MonetaryAmount, https://schema.org/Number]
  ///
  /// Use {[MonetaryAmount]} to specify a fixed restocking fee for product returns, or use {[Number]} to specify a percentage of the product price paid by the customer.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const restockingFee = IriTerm.prevalidated(
    'https://schema.org/restockingFee',
  );

  /// IRI for schema:resultComment [Expects: https://schema.org/Comment]
  ///
  /// A sub property of result. The Comment created or sent as a result of this action.
  ///
  /// Can be used on: https://schema.org/CommentAction, https://schema.org/ReplyAction
  ///
  static const resultComment = IriTerm.prevalidated(
    'https://schema.org/resultComment',
  );

  /// IRI for schema:resultReview [Expects: https://schema.org/Review]
  ///
  /// A sub property of result. The review that resulted in the performing of the action.
  ///
  /// Can be used on: https://schema.org/ReviewAction
  ///
  static const resultReview = IriTerm.prevalidated(
    'https://schema.org/resultReview',
  );

  /// IRI for schema:returnFees [Expects: https://schema.org/ReturnFeesEnumeration]
  ///
  /// The type of return fees for purchased products (for any return reason).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnFees = IriTerm.prevalidated(
    'https://schema.org/returnFees',
  );

  /// IRI for schema:returnLabelSource [Expects: https://schema.org/ReturnLabelSourceEnumeration]
  ///
  /// The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnLabelSource = IriTerm.prevalidated(
    'https://schema.org/returnLabelSource',
  );

  /// IRI for schema:returnMethod [Expects: https://schema.org/ReturnMethodEnumeration]
  ///
  /// The type of return method offered, specified from an enumeration.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnMethod = IriTerm.prevalidated(
    'https://schema.org/returnMethod',
  );

  /// IRI for schema:returnPolicyCategory [Expects: https://schema.org/MerchantReturnEnumeration]
  ///
  /// Specifies an applicable return policy (from an enumeration).
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnPolicyCategory = IriTerm.prevalidated(
    'https://schema.org/returnPolicyCategory',
  );

  /// IRI for schema:returnPolicyCountry [Expects: https://schema.org/Country, https://schema.org/Text]
  ///
  /// The country where the product has to be sent to for returns, for example "Ireland" using the {[name]} property of {[Country]}. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnPolicyCountry = IriTerm.prevalidated(
    'https://schema.org/returnPolicyCountry',
  );

  /// IRI for schema:returnPolicySeasonalOverride [Expects: https://schema.org/MerchantReturnPolicySeasonalOverride]
  ///
  /// Seasonal override of a return policy.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy
  ///
  static const returnPolicySeasonalOverride = IriTerm.prevalidated(
    'https://schema.org/returnPolicySeasonalOverride',
  );

  /// IRI for schema:returnShippingFeesAmount [Expects: https://schema.org/MonetaryAmount]
  ///
  /// Amount of shipping costs for product returns (for any reason). Applicable when property {[returnFees]} equals {[ReturnShippingFees]}.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/MerchantReturnPolicySeasonalOverride
  ///
  static const returnShippingFeesAmount = IriTerm.prevalidated(
    'https://schema.org/returnShippingFeesAmount',
  );

  /// IRI for schema:reviewAspect [Expects: https://schema.org/Text]
  ///
  /// This Review or Rating is relevant to this part or facet of the itemReviewed.
  ///
  /// Can be used on: https://schema.org/Guide, https://schema.org/Rating, https://schema.org/Review
  ///
  static const reviewAspect = IriTerm.prevalidated(
    'https://schema.org/reviewAspect',
  );

  /// IRI for schema:reviewBody [Expects: https://schema.org/Text]
  ///
  /// The actual body of the review.
  ///
  /// Can be used on: https://schema.org/Review
  ///
  static const reviewBody = IriTerm.prevalidated(
    'https://schema.org/reviewBody',
  );

  /// IRI for schema:reviewCount [Expects: https://schema.org/Integer]
  ///
  /// The count of total number of reviews.
  ///
  /// Can be used on: https://schema.org/AggregateRating
  ///
  static const reviewCount = IriTerm.prevalidated(
    'https://schema.org/reviewCount',
  );

  /// IRI for schema:reviewRating [Expects: https://schema.org/Rating]
  ///
  /// The rating given in this review. Note that reviews can themselves be rated. The ```reviewRating``` applies to rating given by the review. The {[aggregateRating]} property applies to the review itself, as a creative work.
  ///
  /// Can be used on: https://schema.org/Review
  ///
  static const reviewRating = IriTerm.prevalidated(
    'https://schema.org/reviewRating',
  );

  /// IRI for schema:reviewedBy [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const reviewedBy = IriTerm.prevalidated(
    'https://schema.org/reviewedBy',
  );

  /// IRI for schema:reviews [Expects: https://schema.org/Review]
  ///
  /// Review of the item.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const reviews = IriTerm.prevalidated('https://schema.org/reviews');

  /// IRI for schema:riskFactor [Expects: https://schema.org/MedicalRiskFactor]
  ///
  /// A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const riskFactor = IriTerm.prevalidated(
    'https://schema.org/riskFactor',
  );

  /// IRI for schema:risks [Expects: https://schema.org/Text]
  ///
  /// Specific physiologic risks associated to the diet plan.
  ///
  /// Can be used on: https://schema.org/Diet
  ///
  static const risks = IriTerm.prevalidated('https://schema.org/risks');

  /// IRI for schema:roofLoad [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/BusOrCoach, https://schema.org/Car
  ///
  static const roofLoad = IriTerm.prevalidated('https://schema.org/roofLoad');

  /// IRI for schema:rsvpResponse [Expects: https://schema.org/RsvpResponseType]
  ///
  /// The response (yes, no, maybe) to the RSVP.
  ///
  /// Can be used on: https://schema.org/RsvpAction
  ///
  static const rsvpResponse = IriTerm.prevalidated(
    'https://schema.org/rsvpResponse',
  );

  /// IRI for schema:runsTo [Expects: https://schema.org/Vessel]
  ///
  /// The vasculature the lymphatic structure runs, or efferents, to.
  ///
  /// Can be used on: https://schema.org/LymphaticVessel
  ///
  static const runsTo = IriTerm.prevalidated('https://schema.org/runsTo');

  /// IRI for schema:runtime [Expects: https://schema.org/Text]
  ///
  /// Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const runtime = IriTerm.prevalidated('https://schema.org/runtime');

  /// IRI for schema:rxcui [Expects: https://schema.org/Text]
  ///
  /// The RxCUI drug identifier from RXNORM.
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const rxcui = IriTerm.prevalidated('https://schema.org/rxcui');

  /// IRI for schema:safetyConsideration [Expects: https://schema.org/Text]
  ///
  /// Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
  ///
  /// Can be used on: https://schema.org/DietarySupplement
  ///
  static const safetyConsideration = IriTerm.prevalidated(
    'https://schema.org/safetyConsideration',
  );

  /// IRI for schema:salaryCurrency [Expects: https://schema.org/Text]
  ///
  /// The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) used for the main salary information in this job posting or for this employee.
  ///
  /// Can be used on: https://schema.org/EmployeeRole, https://schema.org/JobPosting
  ///
  static const salaryCurrency = IriTerm.prevalidated(
    'https://schema.org/salaryCurrency',
  );

  /// IRI for schema:salaryUponCompletion [Expects: https://schema.org/MonetaryAmountDistribution]
  ///
  /// The expected salary upon completing the training.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const salaryUponCompletion = IriTerm.prevalidated(
    'https://schema.org/salaryUponCompletion',
  );

  /// IRI for schema:sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// IRI for schema:sampleType [Expects: https://schema.org/Text]
  ///
  /// What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const sampleType = IriTerm.prevalidated(
    'https://schema.org/sampleType',
  );

  /// IRI for schema:saturatedFatContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of saturated fat.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const saturatedFatContent = IriTerm.prevalidated(
    'https://schema.org/saturatedFatContent',
  );

  /// IRI for schema:scheduleTimezone [Expects: https://schema.org/Text]
  ///
  /// Indicates the timezone for which the time(s) indicated in the {[Schedule]} are given. The value provided should be among those listed in the IANA Time Zone Database.
  ///
  /// Can be used on: https://schema.org/Schedule
  ///
  static const scheduleTimezone = IriTerm.prevalidated(
    'https://schema.org/scheduleTimezone',
  );

  /// IRI for schema:scheduledPaymentDate [Expects: https://schema.org/Date]
  ///
  /// The date the invoice is scheduled to be paid.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const scheduledPaymentDate = IriTerm.prevalidated(
    'https://schema.org/scheduledPaymentDate',
  );

  /// IRI for schema:scheduledTime [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The time the object is scheduled to.
  ///
  /// Can be used on: https://schema.org/PlanAction
  ///
  static const scheduledTime = IriTerm.prevalidated(
    'https://schema.org/scheduledTime',
  );

  /// IRI for schema:schemaVersion [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to
  /// indicate the use of a specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly via URL, ```https://schema.org/docs/releases.html#v10.0```. There may be situations in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` but this has not been carefully explored in the community.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const schemaVersion = IriTerm.prevalidated(
    'https://schema.org/schemaVersion',
  );

  /// IRI for schema:schoolClosuresInfo [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Information about school closures.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const schoolClosuresInfo = IriTerm.prevalidated(
    'https://schema.org/schoolClosuresInfo',
  );

  /// IRI for schema:screenCount [Expects: https://schema.org/Number]
  ///
  /// The number of screens in the movie theater.
  ///
  /// Can be used on: https://schema.org/MovieTheater
  ///
  static const screenCount = IriTerm.prevalidated(
    'https://schema.org/screenCount',
  );

  /// IRI for schema:screenshot [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// A link to a screenshot image of the app.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const screenshot = IriTerm.prevalidated(
    'https://schema.org/screenshot',
  );

  /// IRI for schema:sdDatePublished [Expects: https://schema.org/Date]
  ///
  /// Indicates the date on which the current structured data was generated / published. Typically used alongside {[sdPublisher]}.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const sdDatePublished = IriTerm.prevalidated(
    'https://schema.org/sdDatePublished',
  );

  /// IRI for schema:sdLicense [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// A license document that applies to this structured data, typically indicated by URL.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const sdLicense = IriTerm.prevalidated('https://schema.org/sdLicense');

  /// IRI for schema:sdPublisher [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The
  /// {[sdPublisher]} property helps make such practices more explicit.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const sdPublisher = IriTerm.prevalidated(
    'https://schema.org/sdPublisher',
  );

  /// IRI for schema:seasonNumber [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// Position of the season within an ordered group of seasons.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason
  ///
  static const seasonNumber = IriTerm.prevalidated(
    'https://schema.org/seasonNumber',
  );

  /// IRI for schema:seasonalOverride [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// Limited period during which these shipping conditions apply.
  ///
  /// Can be used on: https://schema.org/ShippingConditions
  ///
  static const seasonalOverride = IriTerm.prevalidated(
    'https://schema.org/seasonalOverride',
  );

  /// IRI for schema:seasons [Expects: https://schema.org/CreativeWorkSeason]
  ///
  /// A season in a media series.
  ///
  /// Can be used on: https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const seasons = IriTerm.prevalidated('https://schema.org/seasons');

  /// IRI for schema:seatNumber [Expects: https://schema.org/Text]
  ///
  /// The location of the reserved seat (e.g., 27).
  ///
  /// Can be used on: https://schema.org/Seat
  ///
  static const seatNumber = IriTerm.prevalidated(
    'https://schema.org/seatNumber',
  );

  /// IRI for schema:seatRow [Expects: https://schema.org/Text]
  ///
  /// The row location of the reserved seat (e.g., B).
  ///
  /// Can be used on: https://schema.org/Seat
  ///
  static const seatRow = IriTerm.prevalidated('https://schema.org/seatRow');

  /// IRI for schema:seatSection [Expects: https://schema.org/Text]
  ///
  /// The section location of the reserved seat (e.g. Orchestra).
  ///
  /// Can be used on: https://schema.org/Seat
  ///
  static const seatSection = IriTerm.prevalidated(
    'https://schema.org/seatSection',
  );

  /// IRI for schema:seatingCapacity [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const seatingCapacity = IriTerm.prevalidated(
    'https://schema.org/seatingCapacity',
  );

  /// IRI for schema:seatingType [Expects: https://schema.org/QualitativeValue, https://schema.org/Text]
  ///
  /// The type/class of the seat.
  ///
  /// Can be used on: https://schema.org/Seat
  ///
  static const seatingType = IriTerm.prevalidated(
    'https://schema.org/seatingType',
  );

  /// IRI for schema:secondaryPrevention [Expects: https://schema.org/MedicalTherapy]
  ///
  /// A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const secondaryPrevention = IriTerm.prevalidated(
    'https://schema.org/secondaryPrevention',
  );

  /// IRI for schema:securityClearanceRequirement [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A description of any security clearance requirements of the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const securityClearanceRequirement = IriTerm.prevalidated(
    'https://schema.org/securityClearanceRequirement',
  );

  /// IRI for schema:securityScreening [Expects: https://schema.org/Text]
  ///
  /// The type of security screening the passenger is subject to.
  ///
  /// Can be used on: https://schema.org/FlightReservation
  ///
  static const securityScreening = IriTerm.prevalidated(
    'https://schema.org/securityScreening',
  );

  /// IRI for schema:seeks [Expects: https://schema.org/Demand]
  ///
  /// A pointer to products or services sought by the organization or person (demand).
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const seeks = IriTerm.prevalidated('https://schema.org/seeks');

  /// IRI for schema:sender [Expects: https://schema.org/Audience, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The participant who is at the sending end of the action.
  ///
  /// Can be used on: https://schema.org/Message, https://schema.org/ReceiveAction
  ///
  static const sender = IriTerm.prevalidated('https://schema.org/sender');

  /// IRI for schema:sensoryRequirement [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const sensoryRequirement = IriTerm.prevalidated(
    'https://schema.org/sensoryRequirement',
  );

  /// IRI for schema:sensoryUnit [Expects: https://schema.org/AnatomicalStructure, https://schema.org/SuperficialAnatomy]
  ///
  /// The neurological pathway extension that inputs and sends information to the brain or spinal cord.
  ///
  /// Can be used on: https://schema.org/Nerve
  ///
  static const sensoryUnit = IriTerm.prevalidated(
    'https://schema.org/sensoryUnit',
  );

  /// IRI for schema:seriousAdverseOutcome [Expects: https://schema.org/MedicalEntity]
  ///
  /// A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.
  ///
  /// Can be used on: https://schema.org/MedicalDevice, https://schema.org/MedicalTherapy
  ///
  static const seriousAdverseOutcome = IriTerm.prevalidated(
    'https://schema.org/seriousAdverseOutcome',
  );

  /// IRI for schema:serverStatus [Expects: https://schema.org/GameServerStatus]
  ///
  /// Status of a game server.
  ///
  /// Can be used on: https://schema.org/GameServer
  ///
  static const serverStatus = IriTerm.prevalidated(
    'https://schema.org/serverStatus',
  );

  /// IRI for schema:servesCuisine [Expects: https://schema.org/Text]
  ///
  /// The cuisine of the restaurant.
  ///
  /// Can be used on: https://schema.org/FoodEstablishment
  ///
  static const servesCuisine = IriTerm.prevalidated(
    'https://schema.org/servesCuisine',
  );

  /// IRI for schema:serviceAudience [Expects: https://schema.org/Audience]
  ///
  /// The audience eligible for this service.
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const serviceAudience = IriTerm.prevalidated(
    'https://schema.org/serviceAudience',
  );

  /// IRI for schema:serviceLocation [Expects: https://schema.org/Place]
  ///
  /// The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceLocation = IriTerm.prevalidated(
    'https://schema.org/serviceLocation',
  );

  /// IRI for schema:serviceOperator [Expects: https://schema.org/Organization]
  ///
  /// The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
  ///
  /// Can be used on: https://schema.org/GovernmentService
  ///
  static const serviceOperator = IriTerm.prevalidated(
    'https://schema.org/serviceOperator',
  );

  /// IRI for schema:servicePhone [Expects: https://schema.org/ContactPoint]
  ///
  /// The phone number to use to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const servicePhone = IriTerm.prevalidated(
    'https://schema.org/servicePhone',
  );

  /// IRI for schema:servicePostalAddress [Expects: https://schema.org/PostalAddress]
  ///
  /// The address for accessing the service by mail.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const servicePostalAddress = IriTerm.prevalidated(
    'https://schema.org/servicePostalAddress',
  );

  /// IRI for schema:serviceSmsNumber [Expects: https://schema.org/ContactPoint]
  ///
  /// The number to access the service by text message.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceSmsNumber = IriTerm.prevalidated(
    'https://schema.org/serviceSmsNumber',
  );

  /// IRI for schema:serviceType [Expects: https://schema.org/GovernmentBenefitsType, https://schema.org/Text]
  ///
  /// The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const serviceType = IriTerm.prevalidated(
    'https://schema.org/serviceType',
  );

  /// IRI for schema:serviceUrl [Expects: https://schema.org/URL]
  ///
  /// The website to access the service.
  ///
  /// Can be used on: https://schema.org/ServiceChannel
  ///
  static const serviceUrl = IriTerm.prevalidated(
    'https://schema.org/serviceUrl',
  );

  /// IRI for schema:servingSize [Expects: https://schema.org/Text]
  ///
  /// The serving size, in terms of the number of volume or mass.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const servingSize = IriTerm.prevalidated(
    'https://schema.org/servingSize',
  );

  /// IRI for schema:sha256 [Expects: https://schema.org/Text]
  ///
  /// The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const sha256 = IriTerm.prevalidated('https://schema.org/sha256');

  /// IRI for schema:sharedContent [Expects: https://schema.org/CreativeWork]
  ///
  /// A CreativeWork such as an image, video, or audio clip shared as part of this posting.
  ///
  /// Can be used on: https://schema.org/Comment, https://schema.org/SocialMediaPosting
  ///
  static const sharedContent = IriTerm.prevalidated(
    'https://schema.org/sharedContent',
  );

  /// IRI for schema:shippingConditions [Expects: https://schema.org/ShippingConditions]
  ///
  /// The conditions (constraints, price) applicable to the {[ShippingService]}.
  ///
  /// Can be used on: https://schema.org/ShippingService
  ///
  static const shippingConditions = IriTerm.prevalidated(
    'https://schema.org/shippingConditions',
  );

  /// IRI for schema:shippingDestination [Expects: https://schema.org/DefinedRegion]
  ///
  /// indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.
  ///
  /// Can be used on: https://schema.org/DeliveryTimeSettings, https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const shippingDestination = IriTerm.prevalidated(
    'https://schema.org/shippingDestination',
  );

  /// IRI for schema:shippingDetails [Expects: https://schema.org/OfferShippingDetails]
  ///
  /// Indicates information about the shipping policies and options associated with an {[Offer]}.
  ///
  /// Can be used on: https://schema.org/Offer
  ///
  static const shippingDetails = IriTerm.prevalidated(
    'https://schema.org/shippingDetails',
  );

  /// IRI for schema:shippingOrigin [Expects: https://schema.org/DefinedRegion]
  ///
  /// Indicates the origin of a shipment, i.e. where it should be coming from.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions
  ///
  static const shippingOrigin = IriTerm.prevalidated(
    'https://schema.org/shippingOrigin',
  );

  /// IRI for schema:shippingRate [Expects: https://schema.org/MonetaryAmount, https://schema.org/ShippingRateSettings]
  ///
  /// The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the {[MonetaryAmount]}) are most appropriate.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const shippingRate = IriTerm.prevalidated(
    'https://schema.org/shippingRate',
  );

  /// IRI for schema:siblings [Expects: https://schema.org/Person]
  ///
  /// A sibling of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const siblings = IriTerm.prevalidated('https://schema.org/siblings');

  /// IRI for schema:signDetected [Expects: https://schema.org/MedicalSign]
  ///
  /// A sign detected by the test.
  ///
  /// Can be used on: https://schema.org/MedicalTest
  ///
  static const signDetected = IriTerm.prevalidated(
    'https://schema.org/signDetected',
  );

  /// IRI for schema:signOrSymptom [Expects: https://schema.org/MedicalSignOrSymptom]
  ///
  /// A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const signOrSymptom = IriTerm.prevalidated(
    'https://schema.org/signOrSymptom',
  );

  /// IRI for schema:significance [Expects: https://schema.org/Text]
  ///
  /// The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.
  ///
  /// Can be used on: https://schema.org/SuperficialAnatomy
  ///
  static const significance = IriTerm.prevalidated(
    'https://schema.org/significance',
  );

  /// IRI for schema:significantLinks [Expects: https://schema.org/URL]
  ///
  /// The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const significantLinks = IriTerm.prevalidated(
    'https://schema.org/significantLinks',
  );

  /// IRI for schema:size [Expects: https://schema.org/DefinedTerm, https://schema.org/QuantitativeValue, https://schema.org/SizeSpecification, https://schema.org/Text]
  ///
  /// A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured {[SizeSpecification]}; in other cases, the {[width]}, {[height]}, {[depth]} and {[weight]} properties may be more applicable.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Product
  ///
  static const size = IriTerm.prevalidated('https://schema.org/size');

  /// IRI for schema:sizeGroup [Expects: https://schema.org/SizeGroupEnumeration, https://schema.org/Text]
  ///
  /// The size group (also known as "size type") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example "men's big and tall", "petite maternity" or "regular".
  ///
  /// Can be used on: https://schema.org/SizeSpecification
  ///
  static const sizeGroup = IriTerm.prevalidated('https://schema.org/sizeGroup');

  /// IRI for schema:sizeSystem [Expects: https://schema.org/SizeSystemEnumeration, https://schema.org/Text]
  ///
  /// The size system used to identify a product's size. Typically either a standard (for example, "GS1" or "ISO-EN13402"), country code (for example "US" or "JP"), or a measuring system (for example "Metric" or "Imperial").
  ///
  /// Can be used on: https://schema.org/SizeSpecification
  ///
  static const sizeSystem = IriTerm.prevalidated(
    'https://schema.org/sizeSystem',
  );

  /// IRI for schema:skills [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is either claimed by a person, an organization or desired or required to fulfill a role or to work in an occupation.
  ///
  /// Can be used on: https://schema.org/JobPosting, https://schema.org/Occupation, https://schema.org/Organization, https://schema.org/Person
  ///
  static const skills = IriTerm.prevalidated('https://schema.org/skills');

  /// IRI for schema:sku [Expects: https://schema.org/Text]
  ///
  /// The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const sku = IriTerm.prevalidated('https://schema.org/sku');

  /// IRI for schema:slogan [Expects: https://schema.org/Text]
  ///
  /// A slogan or motto associated with the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const slogan = IriTerm.prevalidated('https://schema.org/slogan');

  /// IRI for schema:smiles [Expects: https://schema.org/Text]
  ///
  /// A specification in form of a line notation for describing the structure of chemical species using short ASCII strings.  Double bond stereochemistry \ indicators may need to be escaped in the string in formats where the backslash is an escape character.
  ///
  /// Can be used on: https://schema.org/MolecularEntity
  ///
  static const smiles = IriTerm.prevalidated('https://schema.org/smiles');

  /// IRI for schema:smokingAllowed [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const smokingAllowed = IriTerm.prevalidated(
    'https://schema.org/smokingAllowed',
  );

  /// IRI for schema:sodiumContent [Expects: https://schema.org/Mass]
  ///
  /// The number of milligrams of sodium.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const sodiumContent = IriTerm.prevalidated(
    'https://schema.org/sodiumContent',
  );

  /// IRI for schema:softwareAddOn [Expects: https://schema.org/SoftwareApplication]
  ///
  /// Additional content for a software application.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const softwareAddOn = IriTerm.prevalidated(
    'https://schema.org/softwareAddOn',
  );

  /// IRI for schema:softwareHelp [Expects: https://schema.org/CreativeWork]
  ///
  /// Software application help.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const softwareHelp = IriTerm.prevalidated(
    'https://schema.org/softwareHelp',
  );

  /// IRI for schema:softwareVersion [Expects: https://schema.org/Text]
  ///
  /// Version of the software instance.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const softwareVersion = IriTerm.prevalidated(
    'https://schema.org/softwareVersion',
  );

  /// IRI for schema:sourceOrganization [Expects: https://schema.org/Organization]
  ///
  /// The Organization on whose behalf the creator was working.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const sourceOrganization = IriTerm.prevalidated(
    'https://schema.org/sourceOrganization',
  );

  /// IRI for schema:sourcedFrom [Expects: https://schema.org/BrainStructure]
  ///
  /// The neurological pathway that originates the neurons.
  ///
  /// Can be used on: https://schema.org/Nerve
  ///
  static const sourcedFrom = IriTerm.prevalidated(
    'https://schema.org/sourcedFrom',
  );

  /// IRI for schema:spatial [Expects: https://schema.org/Place]
  ///
  /// The "spatial" property can be used in cases when more specific properties
  /// (e.g. {[locationCreated]}, {[spatialCoverage]}, {[contentLocation]}) are not known to be appropriate.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const spatial = IriTerm.prevalidated('https://schema.org/spatial');

  /// IRI for schema:speakable [Expects: https://schema.org/SpeakableSpecification, https://schema.org/URL]
  ///
  /// Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.
  ///
  /// The *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:
  ///
  /// 1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.
  ///
  /// 2.) CSS Selectors - addresses content in the annotated page, e.g. via class attribute. Use the {[cssSelector]} property.
  ///
  /// 3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the {[xpath]} property.
  ///
  ///
  /// For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
  /// we define a supporting type, {[SpeakableSpecification]}  which is defined to be a possible value of the *speakable* property.
  ///
  ///
  /// Can be used on: https://schema.org/Article, https://schema.org/WebPage
  ///
  static const speakable = IriTerm.prevalidated('https://schema.org/speakable');

  /// IRI for schema:specialCommitments [Expects: https://schema.org/Text]
  ///
  /// Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const specialCommitments = IriTerm.prevalidated(
    'https://schema.org/specialCommitments',
  );

  /// IRI for schema:specialOpeningHoursSpecification [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// The special opening hours of a certain place.\n\nUse this to explicitly override general opening hours brought in scope by {[openingHoursSpecification]} or {[openingHours]}.
  ///
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const specialOpeningHoursSpecification = IriTerm.prevalidated(
    'https://schema.org/specialOpeningHoursSpecification',
  );

  /// IRI for schema:specialty [Expects: https://schema.org/Specialty]
  ///
  /// One of the domain specialities to which this web page's content applies.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const specialty = IriTerm.prevalidated('https://schema.org/specialty');

  /// IRI for schema:speechToTextMarkup [Expects: https://schema.org/Text]
  ///
  /// Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).
  ///
  /// Can be used on: https://schema.org/PronounceableText
  ///
  static const speechToTextMarkup = IriTerm.prevalidated(
    'https://schema.org/speechToTextMarkup',
  );

  /// IRI for schema:speed [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by {[maxValue]}) should be the maximum speed achievable under regular conditions.\n\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\n\n*Note 1: Use {[minValue]} and {[maxValue]} to indicate the range. Typically, the minimal value is zero.\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the {[valueReference]} property.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const speed = IriTerm.prevalidated('https://schema.org/speed');

  /// IRI for schema:spokenByCharacter [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.
  ///
  /// Can be used on: https://schema.org/Quotation
  ///
  static const spokenByCharacter = IriTerm.prevalidated(
    'https://schema.org/spokenByCharacter',
  );

  /// IRI for schema:sport [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A type of sport (e.g. Baseball).
  ///
  /// Can be used on: https://schema.org/SportsEvent, https://schema.org/SportsOrganization
  ///
  static const sport = IriTerm.prevalidated('https://schema.org/sport');

  /// IRI for schema:sportsActivityLocation [Expects: https://schema.org/SportsActivityLocation]
  ///
  /// A sub property of location. The sports activity location where this action occurred.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const sportsActivityLocation = IriTerm.prevalidated(
    'https://schema.org/sportsActivityLocation',
  );

  /// IRI for schema:sportsEvent [Expects: https://schema.org/SportsEvent]
  ///
  /// A sub property of location. The sports event where this action occurred.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const sportsEvent = IriTerm.prevalidated(
    'https://schema.org/sportsEvent',
  );

  /// IRI for schema:sportsTeam [Expects: https://schema.org/SportsTeam]
  ///
  /// A sub property of participant. The sports team that participated on this action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const sportsTeam = IriTerm.prevalidated(
    'https://schema.org/sportsTeam',
  );

  /// IRI for schema:spouse [Expects: https://schema.org/Person]
  ///
  /// The person's spouse.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const spouse = IriTerm.prevalidated('https://schema.org/spouse');

  /// IRI for schema:stage [Expects: https://schema.org/MedicalConditionStage]
  ///
  /// The stage of the condition, if applicable.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const stage = IriTerm.prevalidated('https://schema.org/stage');

  /// IRI for schema:stageAsNumber [Expects: https://schema.org/Number]
  ///
  /// The stage represented as a number, e.g. 3.
  ///
  /// Can be used on: https://schema.org/MedicalConditionStage
  ///
  static const stageAsNumber = IriTerm.prevalidated(
    'https://schema.org/stageAsNumber',
  );

  /// IRI for schema:starRating [Expects: https://schema.org/Rating]
  ///
  /// An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
  ///
  /// Can be used on: https://schema.org/FoodEstablishment, https://schema.org/LodgingBusiness
  ///
  static const starRating = IriTerm.prevalidated(
    'https://schema.org/starRating',
  );

  /// IRI for schema:startDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/CreativeWorkSeries, https://schema.org/DatedMoneySpecification, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MerchantReturnPolicySeasonalOverride, https://schema.org/Role, https://schema.org/Schedule
  ///
  static const startDate = IriTerm.prevalidated('https://schema.org/startDate');

  /// IRI for schema:startOffset [Expects: https://schema.org/HyperTocEntry, https://schema.org/Number]
  ///
  /// The start time of the clip expressed as the number of seconds from the beginning of the work.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/SeekToAction
  ///
  static const startOffset = IriTerm.prevalidated(
    'https://schema.org/startOffset',
  );

  /// IRI for schema:startTime [Expects: https://schema.org/DateTime, https://schema.org/Time]
  ///
  /// The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. E.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
  ///
  /// Can be used on: https://schema.org/Action, https://schema.org/FoodEstablishmentReservation, https://schema.org/InteractionCounter, https://schema.org/MediaObject, https://schema.org/Schedule
  ///
  static const startTime = IriTerm.prevalidated('https://schema.org/startTime');

  /// IRI for schema:statType [Expects: https://schema.org/Property, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Indicates the kind of statistic represented by a {[StatisticalVariable]}, e.g. mean, count etc. The value of statType is a property, either from within Schema.org (e.g. {[median]}, {[marginOfError]}, {[maxValue]}, {[minValue]}) or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org.
  ///
  /// Can be used on: https://schema.org/StatisticalVariable
  ///
  static const statType = IriTerm.prevalidated('https://schema.org/statType');

  /// IRI for schema:status [Expects: https://schema.org/EventStatusType, https://schema.org/MedicalStudyStatus, https://schema.org/Text]
  ///
  /// The status of the study (enumerated).
  ///
  /// Can be used on: https://schema.org/MedicalCondition, https://schema.org/MedicalProcedure, https://schema.org/MedicalStudy
  ///
  static const status = IriTerm.prevalidated('https://schema.org/status');

  /// IRI for schema:steeringPosition [Expects: https://schema.org/SteeringPositionValue]
  ///
  /// The position of the steering wheel or similar device (mostly for cars).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const steeringPosition = IriTerm.prevalidated(
    'https://schema.org/steeringPosition',
  );

  /// IRI for schema:stepValue [Expects: https://schema.org/Number]
  ///
  /// The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const stepValue = IriTerm.prevalidated('https://schema.org/stepValue');

  /// IRI for schema:steps [Expects: https://schema.org/CreativeWork, https://schema.org/ItemList, https://schema.org/Text]
  ///
  /// A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToSection
  ///
  static const steps = IriTerm.prevalidated('https://schema.org/steps');

  /// IRI for schema:storageRequirements [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Storage requirements (free space required).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const storageRequirements = IriTerm.prevalidated(
    'https://schema.org/storageRequirements',
  );

  /// IRI for schema:streetAddress [Expects: https://schema.org/Text]
  ///
  /// The street address. For example, 1600 Amphitheatre Pkwy.
  ///
  /// Can be used on: https://schema.org/PostalAddress
  ///
  static const streetAddress = IriTerm.prevalidated(
    'https://schema.org/streetAddress',
  );

  /// IRI for schema:strengthUnit [Expects: https://schema.org/Text]
  ///
  /// The units of an active ingredient's strength, e.g. mg.
  ///
  /// Can be used on: https://schema.org/DrugStrength
  ///
  static const strengthUnit = IriTerm.prevalidated(
    'https://schema.org/strengthUnit',
  );

  /// IRI for schema:strengthValue [Expects: https://schema.org/Number]
  ///
  /// The value of an active ingredient's strength, e.g. 325.
  ///
  /// Can be used on: https://schema.org/DrugStrength
  ///
  static const strengthValue = IriTerm.prevalidated(
    'https://schema.org/strengthValue',
  );

  /// IRI for schema:structuralClass [Expects: https://schema.org/Text]
  ///
  /// The name given to how bone physically connects to each other.
  ///
  /// Can be used on: https://schema.org/Joint
  ///
  static const structuralClass = IriTerm.prevalidated(
    'https://schema.org/structuralClass',
  );

  /// IRI for schema:study [Expects: https://schema.org/MedicalStudy]
  ///
  /// A medical study or trial related to this entity.
  ///
  /// Can be used on: https://schema.org/MedicalEntity
  ///
  static const study = IriTerm.prevalidated('https://schema.org/study');

  /// IRI for schema:studyDesign [Expects: https://schema.org/MedicalObservationalStudyDesign]
  ///
  /// Specifics about the observational study design (enumerated).
  ///
  /// Can be used on: https://schema.org/MedicalObservationalStudy
  ///
  static const studyDesign = IriTerm.prevalidated(
    'https://schema.org/studyDesign',
  );

  /// IRI for schema:studyLocation [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The location in which the study is taking/took place.
  ///
  /// Can be used on: https://schema.org/MedicalStudy
  ///
  static const studyLocation = IriTerm.prevalidated(
    'https://schema.org/studyLocation',
  );

  /// IRI for schema:studySubject [Expects: https://schema.org/MedicalEntity]
  ///
  /// A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.
  ///
  /// Can be used on: https://schema.org/MedicalStudy
  ///
  static const studySubject = IriTerm.prevalidated(
    'https://schema.org/studySubject',
  );

  /// IRI for schema:subEvents [Expects: https://schema.org/Event]
  ///
  /// Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const subEvents = IriTerm.prevalidated('https://schema.org/subEvents');

  /// IRI for schema:subReservation [Expects: https://schema.org/Reservation]
  ///
  /// The individual reservations included in the package. Typically a repeated property.
  ///
  /// Can be used on: https://schema.org/ReservationPackage
  ///
  static const subReservation = IriTerm.prevalidated(
    'https://schema.org/subReservation',
  );

  /// IRI for schema:subStageSuffix [Expects: https://schema.org/Text]
  ///
  /// The substage, e.g. 'a' for Stage IIIa.
  ///
  /// Can be used on: https://schema.org/MedicalConditionStage
  ///
  static const subStageSuffix = IriTerm.prevalidated(
    'https://schema.org/subStageSuffix',
  );

  /// IRI for schema:subStructure [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// Component (sub-)structure(s) that comprise this anatomical structure.
  ///
  /// Can be used on: https://schema.org/AnatomicalStructure
  ///
  static const subStructure = IriTerm.prevalidated(
    'https://schema.org/subStructure',
  );

  /// IRI for schema:subTest [Expects: https://schema.org/MedicalTest]
  ///
  /// A component test of the panel.
  ///
  /// Can be used on: https://schema.org/MedicalTestPanel
  ///
  static const subTest = IriTerm.prevalidated('https://schema.org/subTest');

  /// IRI for schema:subtitleLanguage [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).
  ///
  /// Can be used on: https://schema.org/BroadcastEvent, https://schema.org/Movie, https://schema.org/ScreeningEvent, https://schema.org/TVEpisode
  ///
  static const subtitleLanguage = IriTerm.prevalidated(
    'https://schema.org/subtitleLanguage',
  );

  /// IRI for schema:successorOf [Expects: https://schema.org/ProductModel]
  ///
  /// A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
  ///
  /// Can be used on: https://schema.org/ProductModel
  ///
  static const successorOf = IriTerm.prevalidated(
    'https://schema.org/successorOf',
  );

  /// IRI for schema:sugarContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of sugar.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const sugarContent = IriTerm.prevalidated(
    'https://schema.org/sugarContent',
  );

  /// IRI for schema:suggestedAge [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
  ///
  /// Can be used on: https://schema.org/PeopleAudience, https://schema.org/SizeSpecification
  ///
  static const suggestedAge = IriTerm.prevalidated(
    'https://schema.org/suggestedAge',
  );

  /// IRI for schema:suggestedGender [Expects: https://schema.org/GenderType, https://schema.org/Text]
  ///
  /// The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
  ///
  /// Can be used on: https://schema.org/PeopleAudience, https://schema.org/SizeSpecification
  ///
  static const suggestedGender = IriTerm.prevalidated(
    'https://schema.org/suggestedGender',
  );

  /// IRI for schema:suggestedMaxAge [Expects: https://schema.org/Number]
  ///
  /// Maximum recommended age in years for the audience or user.
  ///
  /// Can be used on: https://schema.org/PeopleAudience
  ///
  static const suggestedMaxAge = IriTerm.prevalidated(
    'https://schema.org/suggestedMaxAge',
  );

  /// IRI for schema:suggestedMeasurement [Expects: https://schema.org/QuantitativeValue]
  ///
  /// A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
  ///
  /// Can be used on: https://schema.org/PeopleAudience, https://schema.org/SizeSpecification
  ///
  static const suggestedMeasurement = IriTerm.prevalidated(
    'https://schema.org/suggestedMeasurement',
  );

  /// IRI for schema:suggestedMinAge [Expects: https://schema.org/Number]
  ///
  /// Minimum recommended age in years for the audience or user.
  ///
  /// Can be used on: https://schema.org/PeopleAudience
  ///
  static const suggestedMinAge = IriTerm.prevalidated(
    'https://schema.org/suggestedMinAge',
  );

  /// IRI for schema:suitableForDiet [Expects: https://schema.org/RestrictedDiet]
  ///
  /// Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
  ///
  /// Can be used on: https://schema.org/MenuItem, https://schema.org/Recipe
  ///
  static const suitableForDiet = IriTerm.prevalidated(
    'https://schema.org/suitableForDiet',
  );

  /// IRI for schema:supersededBy [Expects: https://schema.org/Class, https://schema.org/Enumeration, https://schema.org/Property]
  ///
  /// Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
  ///
  /// Can be used on: https://schema.org/Class, https://schema.org/Enumeration, https://schema.org/Property
  ///
  static const supersededBy = IriTerm.prevalidated(
    'https://schema.org/supersededBy',
  );

  /// IRI for schema:supplyTo [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// The area to which the artery supplies blood.
  ///
  /// Can be used on: https://schema.org/Artery
  ///
  static const supplyTo = IriTerm.prevalidated('https://schema.org/supplyTo');

  /// IRI for schema:supportingData [Expects: https://schema.org/DataFeed]
  ///
  /// Supporting data for a SoftwareApplication.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const supportingData = IriTerm.prevalidated(
    'https://schema.org/supportingData',
  );

  /// IRI for schema:surface [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.
  ///
  /// Can be used on: https://schema.org/VisualArtwork
  ///
  static const surface = IriTerm.prevalidated('https://schema.org/surface');

  /// IRI for schema:syllabusSections [Expects: https://schema.org/Syllabus]
  ///
  /// Indicates (typically several) Syllabus entities that lay out what each section of the overall course will cover.
  ///
  /// Can be used on: https://schema.org/Course
  ///
  static const syllabusSections = IriTerm.prevalidated(
    'https://schema.org/syllabusSections',
  );

  /// IRI for schema:target [Expects: https://schema.org/EntryPoint, https://schema.org/URL]
  ///
  /// Indicates a target EntryPoint, or url, for an Action.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const target = IriTerm.prevalidated('https://schema.org/target');

  /// IRI for schema:targetDescription [Expects: https://schema.org/Text]
  ///
  /// The description of a node in an established educational framework.
  ///
  /// Can be used on: https://schema.org/AlignmentObject
  ///
  static const targetDescription = IriTerm.prevalidated(
    'https://schema.org/targetDescription',
  );

  /// IRI for schema:targetName [Expects: https://schema.org/Text]
  ///
  /// The name of a node in an established educational framework.
  ///
  /// Can be used on: https://schema.org/AlignmentObject
  ///
  static const targetName = IriTerm.prevalidated(
    'https://schema.org/targetName',
  );

  /// IRI for schema:targetPlatform [Expects: https://schema.org/Text]
  ///
  /// Type of app development: phone, Metro style, desktop, XBox, etc.
  ///
  /// Can be used on: https://schema.org/APIReference
  ///
  static const targetPlatform = IriTerm.prevalidated(
    'https://schema.org/targetPlatform',
  );

  /// IRI for schema:targetPopulation [Expects: https://schema.org/Text]
  ///
  /// Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
  ///
  /// Can be used on: https://schema.org/DietarySupplement, https://schema.org/DoseSchedule
  ///
  static const targetPopulation = IriTerm.prevalidated(
    'https://schema.org/targetPopulation',
  );

  /// IRI for schema:targetProduct [Expects: https://schema.org/SoftwareApplication]
  ///
  /// Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const targetProduct = IriTerm.prevalidated(
    'https://schema.org/targetProduct',
  );

  /// IRI for schema:targetUrl [Expects: https://schema.org/URL]
  ///
  /// The URL of a node in an established educational framework.
  ///
  /// Can be used on: https://schema.org/AlignmentObject
  ///
  static const targetUrl = IriTerm.prevalidated('https://schema.org/targetUrl');

  /// IRI for schema:taxID [Expects: https://schema.org/Text]
  ///
  /// The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const taxID = IriTerm.prevalidated('https://schema.org/taxID');

  /// IRI for schema:taxonRank [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The taxonomic rank of this taxon given preferably as a URI from a controlled vocabulary ‚Äì typically the ranks from TDWG TaxonRank ontology or equivalent Wikidata URIs.
  ///
  /// Can be used on: https://schema.org/Taxon
  ///
  static const taxonRank = IriTerm.prevalidated('https://schema.org/taxonRank');

  /// IRI for schema:taxonomicRange [Expects: https://schema.org/DefinedTerm, https://schema.org/Taxon, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const taxonomicRange = IriTerm.prevalidated(
    'https://schema.org/taxonomicRange',
  );

  /// IRI for schema:teaches [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/EducationEvent, https://schema.org/LearningResource
  ///
  static const teaches = IriTerm.prevalidated('https://schema.org/teaches');

  /// IRI for schema:telephone [Expects: https://schema.org/Text]
  ///
  /// The telephone number.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const telephone = IriTerm.prevalidated('https://schema.org/telephone');

  /// IRI for schema:temporal [Expects: https://schema.org/DateTime, https://schema.org/Text]
  ///
  /// The "temporal" property can be used in cases where more specific properties
  /// (e.g. {[temporalCoverage]}, {[dateCreated]}, {[dateModified]}, {[datePublished]}) are not known to be appropriate.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const temporal = IriTerm.prevalidated('https://schema.org/temporal');

  /// IRI for schema:termDuration [Expects: https://schema.org/Duration]
  ///
  /// The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const termDuration = IriTerm.prevalidated(
    'https://schema.org/termDuration',
  );

  /// IRI for schema:termsOfService [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Human-readable terms of service documentation.
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const termsOfService = IriTerm.prevalidated(
    'https://schema.org/termsOfService',
  );

  /// IRI for schema:termsPerYear [Expects: https://schema.org/Number]
  ///
  /// The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const termsPerYear = IriTerm.prevalidated(
    'https://schema.org/termsPerYear',
  );

  /// IRI for schema:text [Expects: https://schema.org/Text]
  ///
  /// The textual content of this CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const text = IriTerm.prevalidated('https://schema.org/text');

  /// IRI for schema:textValue [Expects: https://schema.org/Text]
  ///
  /// Text value being annotated.
  ///
  /// Can be used on: https://schema.org/PronounceableText
  ///
  static const textValue = IriTerm.prevalidated('https://schema.org/textValue');

  /// IRI for schema:thumbnail [Expects: https://schema.org/ImageObject]
  ///
  /// Thumbnail image for an image or video.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const thumbnail = IriTerm.prevalidated('https://schema.org/thumbnail');

  /// IRI for schema:thumbnailUrl [Expects: https://schema.org/URL]
  ///
  /// A thumbnail image relevant to the Thing.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const thumbnailUrl = IriTerm.prevalidated(
    'https://schema.org/thumbnailUrl',
  );

  /// IRI for schema:tickerSymbol [Expects: https://schema.org/Text]
  ///
  /// The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 15022.
  ///
  /// Can be used on: https://schema.org/Corporation
  ///
  static const tickerSymbol = IriTerm.prevalidated(
    'https://schema.org/tickerSymbol',
  );

  /// IRI for schema:ticketNumber [Expects: https://schema.org/Text]
  ///
  /// The unique identifier for the ticket.
  ///
  /// Can be used on: https://schema.org/Ticket
  ///
  static const ticketNumber = IriTerm.prevalidated(
    'https://schema.org/ticketNumber',
  );

  /// IRI for schema:ticketToken [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
  ///
  /// Can be used on: https://schema.org/Ticket
  ///
  static const ticketToken = IriTerm.prevalidated(
    'https://schema.org/ticketToken',
  );

  /// IRI for schema:ticketedSeat [Expects: https://schema.org/Seat]
  ///
  /// The seat associated with the ticket.
  ///
  /// Can be used on: https://schema.org/Ticket
  ///
  static const ticketedSeat = IriTerm.prevalidated(
    'https://schema.org/ticketedSeat',
  );

  /// IRI for schema:timeOfDay [Expects: https://schema.org/Text]
  ///
  /// The time of day the program normally runs. For example, "evenings".
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const timeOfDay = IriTerm.prevalidated('https://schema.org/timeOfDay');

  /// IRI for schema:timeRequired [Expects: https://schema.org/Duration]
  ///
  /// Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const timeRequired = IriTerm.prevalidated(
    'https://schema.org/timeRequired',
  );

  /// IRI for schema:timeToComplete [Expects: https://schema.org/Duration]
  ///
  /// The expected length of time to complete the program if attending full-time.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const timeToComplete = IriTerm.prevalidated(
    'https://schema.org/timeToComplete',
  );

  /// IRI for schema:tissueSample [Expects: https://schema.org/Text]
  ///
  /// The type of tissue sample required for the test.
  ///
  /// Can be used on: https://schema.org/PathologyTest
  ///
  static const tissueSample = IriTerm.prevalidated(
    'https://schema.org/tissueSample',
  );

  /// IRI for schema:title [Expects: https://schema.org/Text]
  ///
  /// The title of the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const title = IriTerm.prevalidated('https://schema.org/title');

  /// IRI for schema:titleEIDR [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) {[identifier]} representing at the most general/abstract level, a work of film or television.
  ///
  /// For example, the motion picture known as "Ghostbusters" has a titleEIDR of  "10.5240/7EC7-228A-510A-053E-CBB8-J". This title (or work) may have several variants, which EIDR calls "edits". See {[editEIDR]}.
  ///
  /// Since schema.org types like {[Movie]}, {[TVEpisode]}, {[TVSeason]}, and {[TVSeries]} can be used for both works and their multiple expressions, it is possible to use {[titleEIDR]} alone (for a general description), or alongside {[editEIDR]} for a more edit-specific description.
  ///
  ///
  /// Can be used on: https://schema.org/Movie, https://schema.org/TVEpisode, https://schema.org/TVSeason, https://schema.org/TVSeries
  ///
  static const titleEIDR = IriTerm.prevalidated('https://schema.org/titleEIDR');

  /// IRI for schema:toLocation [Expects: https://schema.org/Place]
  ///
  /// A sub property of location. The final location of the object or the agent after the action.
  ///
  /// Can be used on: https://schema.org/ExerciseAction, https://schema.org/InsertAction, https://schema.org/MoveAction, https://schema.org/TransferAction
  ///
  static const toLocation = IriTerm.prevalidated(
    'https://schema.org/toLocation',
  );

  /// IRI for schema:toRecipient [Expects: https://schema.org/Audience, https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of recipient. The recipient who was directly sent the message.
  ///
  /// Can be used on: https://schema.org/Message
  ///
  static const toRecipient = IriTerm.prevalidated(
    'https://schema.org/toRecipient',
  );

  /// IRI for schema:tocContinuation [Expects: https://schema.org/HyperTocEntry]
  ///
  /// A {[HyperTocEntry]} can have a {[tocContinuation]} indicated, which is another {[HyperTocEntry]} that would be the default next item to play or render.
  ///
  /// Can be used on: https://schema.org/HyperTocEntry
  ///
  static const tocContinuation = IriTerm.prevalidated(
    'https://schema.org/tocContinuation',
  );

  /// IRI for schema:tocEntry [Expects: https://schema.org/HyperTocEntry]
  ///
  /// Indicates a {[HyperTocEntry]} in a {[HyperToc]}.
  ///
  /// Can be used on: https://schema.org/HyperToc
  ///
  static const tocEntry = IriTerm.prevalidated('https://schema.org/tocEntry');

  /// IRI for schema:tongueWeight [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const tongueWeight = IriTerm.prevalidated(
    'https://schema.org/tongueWeight',
  );

  /// IRI for schema:tool [Expects: https://schema.org/HowToTool, https://schema.org/Text]
  ///
  /// A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToDirection
  ///
  static const tool = IriTerm.prevalidated('https://schema.org/tool');

  /// IRI for schema:torque [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The torque (turning force) of the vehicle's engine.\n\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\n\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the {[valueReference]} property.\n* Note 2: You can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/EngineSpecification
  ///
  static const torque = IriTerm.prevalidated('https://schema.org/torque');

  /// IRI for schema:totalHistoricalEnrollment [Expects: https://schema.org/Integer]
  ///
  /// The total number of students that have enrolled in the history of the course.
  ///
  /// Can be used on: https://schema.org/Course
  ///
  static const totalHistoricalEnrollment = IriTerm.prevalidated(
    'https://schema.org/totalHistoricalEnrollment',
  );

  /// IRI for schema:totalJobOpenings [Expects: https://schema.org/Integer]
  ///
  /// The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const totalJobOpenings = IriTerm.prevalidated(
    'https://schema.org/totalJobOpenings',
  );

  /// IRI for schema:totalPaymentDue [Expects: https://schema.org/MonetaryAmount, https://schema.org/PriceSpecification]
  ///
  /// The total amount due.
  ///
  /// Can be used on: https://schema.org/Invoice
  ///
  static const totalPaymentDue = IriTerm.prevalidated(
    'https://schema.org/totalPaymentDue',
  );

  /// IRI for schema:totalPrice [Expects: https://schema.org/Number, https://schema.org/PriceSpecification, https://schema.org/Text]
  ///
  /// The total price for the reservation or ticket, including applicable taxes, shipping, etc.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/Reservation, https://schema.org/Ticket
  ///
  static const totalPrice = IriTerm.prevalidated(
    'https://schema.org/totalPrice',
  );

  /// IRI for schema:totalTime [Expects: https://schema.org/Duration]
  ///
  /// The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToDirection
  ///
  static const totalTime = IriTerm.prevalidated('https://schema.org/totalTime');

  /// IRI for schema:tourBookingPage [Expects: https://schema.org/URL]
  ///
  /// A page providing information on how to book a tour of some {[Place]}, such as an {[Accommodation]} or {[ApartmentComplex]} in a real estate setting, as well as other kinds of tours as appropriate.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/ApartmentComplex, https://schema.org/Place
  ///
  static const tourBookingPage = IriTerm.prevalidated(
    'https://schema.org/tourBookingPage',
  );

  /// IRI for schema:touristType [Expects: https://schema.org/Audience, https://schema.org/Text]
  ///
  /// Attraction suitable for type(s) of tourist. E.g. children, visitors from a particular country, etc.
  ///
  /// Can be used on: https://schema.org/TouristAttraction, https://schema.org/TouristDestination, https://schema.org/TouristTrip
  ///
  static const touristType = IriTerm.prevalidated(
    'https://schema.org/touristType',
  );

  /// IRI for schema:trackingNumber [Expects: https://schema.org/Text]
  ///
  /// Shipper tracking number.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const trackingNumber = IriTerm.prevalidated(
    'https://schema.org/trackingNumber',
  );

  /// IRI for schema:trackingUrl [Expects: https://schema.org/URL]
  ///
  /// Tracking url for the parcel delivery.
  ///
  /// Can be used on: https://schema.org/ParcelDelivery
  ///
  static const trackingUrl = IriTerm.prevalidated(
    'https://schema.org/trackingUrl',
  );

  /// IRI for schema:tracks [Expects: https://schema.org/MusicRecording]
  ///
  /// A music recording (track)&#x2014;usually a single song.
  ///
  /// Can be used on: https://schema.org/MusicGroup, https://schema.org/MusicPlaylist
  ///
  static const tracks = IriTerm.prevalidated('https://schema.org/tracks');

  /// IRI for schema:trailer [Expects: https://schema.org/VideoObject]
  ///
  /// The trailer of a movie or TV/radio series, season, episode, etc.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries
  ///
  static const trailer = IriTerm.prevalidated('https://schema.org/trailer');

  /// IRI for schema:trailerWeight [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The permitted weight of a trailer attached to the vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const trailerWeight = IriTerm.prevalidated(
    'https://schema.org/trailerWeight',
  );

  /// IRI for schema:trainName [Expects: https://schema.org/Text]
  ///
  /// The name of the train (e.g. The Orient Express).
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const trainName = IriTerm.prevalidated('https://schema.org/trainName');

  /// IRI for schema:trainNumber [Expects: https://schema.org/Text]
  ///
  /// The unique identifier for the train.
  ///
  /// Can be used on: https://schema.org/TrainTrip
  ///
  static const trainNumber = IriTerm.prevalidated(
    'https://schema.org/trainNumber',
  );

  /// IRI for schema:trainingSalary [Expects: https://schema.org/MonetaryAmountDistribution]
  ///
  /// The estimated salary earned while in the program.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram, https://schema.org/WorkBasedProgram
  ///
  static const trainingSalary = IriTerm.prevalidated(
    'https://schema.org/trainingSalary',
  );

  /// IRI for schema:transFatContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of trans fat.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const transFatContent = IriTerm.prevalidated(
    'https://schema.org/transFatContent',
  );

  /// IRI for schema:transcript [Expects: https://schema.org/Text]
  ///
  /// If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
  ///
  /// Can be used on: https://schema.org/AudioObject, https://schema.org/VideoObject
  ///
  static const transcript = IriTerm.prevalidated(
    'https://schema.org/transcript',
  );

  /// IRI for schema:transitTime [Expects: https://schema.org/QuantitativeValue, https://schema.org/ServicePeriod]
  ///
  /// The typical delay the order has been sent for delivery and the goods reach the final customer.
  ///
  /// In the context of {[ShippingDeliveryTime]}, use the {[QuantitativeValue]}. Typical properties: minValue, maxValue, unitCode (d for DAY).
  ///
  /// In the context of {[ShippingConditions]}, use the {[ServicePeriod]}. It has a duration (as a {[QuantitativeValue]}) and also business days and a cut-off time.
  ///
  ///
  /// Can be used on: https://schema.org/ShippingConditions, https://schema.org/ShippingDeliveryTime
  ///
  static const transitTime = IriTerm.prevalidated(
    'https://schema.org/transitTime',
  );

  /// IRI for schema:translator [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const translator = IriTerm.prevalidated(
    'https://schema.org/translator',
  );

  /// IRI for schema:transmissionMethod [Expects: https://schema.org/Text]
  ///
  /// How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.
  ///
  /// Can be used on: https://schema.org/InfectiousDisease
  ///
  static const transmissionMethod = IriTerm.prevalidated(
    'https://schema.org/transmissionMethod',
  );

  /// IRI for schema:travelBans [Expects: https://schema.org/URL, https://schema.org/WebContent]
  ///
  /// Information about travel bans, e.g. in the context of a pandemic.
  ///
  /// Can be used on: https://schema.org/SpecialAnnouncement
  ///
  static const travelBans = IriTerm.prevalidated(
    'https://schema.org/travelBans',
  );

  /// IRI for schema:trialDesign [Expects: https://schema.org/MedicalTrialDesign]
  ///
  /// Specifics about the trial design (enumerated).
  ///
  /// Can be used on: https://schema.org/MedicalTrial
  ///
  static const trialDesign = IriTerm.prevalidated(
    'https://schema.org/trialDesign',
  );

  /// IRI for schema:tributary [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.
  ///
  /// Can be used on: https://schema.org/Vein
  ///
  static const tributary = IriTerm.prevalidated('https://schema.org/tributary');

  /// IRI for schema:tripOrigin [Expects: https://schema.org/Place]
  ///
  /// The location of origin of the trip, prior to any destination(s).
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const tripOrigin = IriTerm.prevalidated(
    'https://schema.org/tripOrigin',
  );

  /// IRI for schema:typeOfBed [Expects: https://schema.org/BedType, https://schema.org/Text]
  ///
  /// The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.
  ///
  /// Can be used on: https://schema.org/BedDetails
  ///
  static const typeOfBed = IriTerm.prevalidated('https://schema.org/typeOfBed');

  /// IRI for schema:typeOfGood [Expects: https://schema.org/Product, https://schema.org/Service]
  ///
  /// The product that this structured value is referring to.
  ///
  /// Can be used on: https://schema.org/OwnershipInfo, https://schema.org/TypeAndQuantityNode
  ///
  static const typeOfGood = IriTerm.prevalidated(
    'https://schema.org/typeOfGood',
  );

  /// IRI for schema:typicalAgeRange [Expects: https://schema.org/Text]
  ///
  /// The typical expected age range, e.g. '7-9', '11-'.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const typicalAgeRange = IriTerm.prevalidated(
    'https://schema.org/typicalAgeRange',
  );

  /// IRI for schema:typicalCreditsPerTerm [Expects: https://schema.org/Integer, https://schema.org/StructuredValue]
  ///
  /// The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalProgram
  ///
  static const typicalCreditsPerTerm = IriTerm.prevalidated(
    'https://schema.org/typicalCreditsPerTerm',
  );

  /// IRI for schema:typicalTest [Expects: https://schema.org/MedicalTest]
  ///
  /// A medical test typically performed given this condition.
  ///
  /// Can be used on: https://schema.org/MedicalCondition
  ///
  static const typicalTest = IriTerm.prevalidated(
    'https://schema.org/typicalTest',
  );

  /// IRI for schema:underName [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The person or organization the reservation or ticket is for.
  ///
  /// Can be used on: https://schema.org/Reservation, https://schema.org/Ticket
  ///
  static const underName = IriTerm.prevalidated('https://schema.org/underName');

  /// IRI for schema:unitCode [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitCode = IriTerm.prevalidated('https://schema.org/unitCode');

  /// IRI for schema:unitText [Expects: https://schema.org/Text]
  ///
  /// A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
  /// <a href='unitCode'>unitCode</a>.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitText = IriTerm.prevalidated('https://schema.org/unitText');

  /// IRI for schema:unnamedSourcesPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// For an {[Organization]} (typically a {[NewsMediaOrganization]}), a statement about policy on use of unnamed sources and the decision process required.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization, https://schema.org/Organization
  ///
  static const unnamedSourcesPolicy = IriTerm.prevalidated(
    'https://schema.org/unnamedSourcesPolicy',
  );

  /// IRI for schema:unsaturatedFatContent [Expects: https://schema.org/Mass]
  ///
  /// The number of grams of unsaturated fat.
  ///
  /// Can be used on: https://schema.org/NutritionInformation
  ///
  static const unsaturatedFatContent = IriTerm.prevalidated(
    'https://schema.org/unsaturatedFatContent',
  );

  /// IRI for schema:uploadDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// Date (including time if available) when this media object was uploaded to this site.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const uploadDate = IriTerm.prevalidated(
    'https://schema.org/uploadDate',
  );

  /// IRI for schema:upvoteCount [Expects: https://schema.org/Integer]
  ///
  /// The number of upvotes this question, answer or comment has received from the community.
  ///
  /// Can be used on: https://schema.org/Comment
  ///
  static const upvoteCount = IriTerm.prevalidated(
    'https://schema.org/upvoteCount',
  );

  /// IRI for schema:url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// IRI for schema:urlTemplate [Expects: https://schema.org/Text]
  ///
  /// An url template (RFC6570) that will be used to construct the target of the execution of the action.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const urlTemplate = IriTerm.prevalidated(
    'https://schema.org/urlTemplate',
  );

  /// IRI for schema:usNPI [Expects: https://schema.org/Text]
  ///
  /// A <a href="https://en.wikipedia.org/wiki/National_Provider_Identifier">National Provider Identifier</a> (NPI)
  /// is a unique 10-digit identification number issued to health care providers in the United States by the Centers for Medicare and Medicaid Services.
  ///
  /// Can be used on: https://schema.org/Physician
  ///
  static const usNPI = IriTerm.prevalidated('https://schema.org/usNPI');

  /// IRI for schema:usedToDiagnose [Expects: https://schema.org/MedicalCondition]
  ///
  /// A condition the test is used to diagnose.
  ///
  /// Can be used on: https://schema.org/MedicalTest
  ///
  static const usedToDiagnose = IriTerm.prevalidated(
    'https://schema.org/usedToDiagnose',
  );

  /// IRI for schema:userInteractionCount [Expects: https://schema.org/Integer]
  ///
  /// The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.
  ///
  /// Can be used on: https://schema.org/InteractionCounter
  ///
  static const userInteractionCount = IriTerm.prevalidated(
    'https://schema.org/userInteractionCount',
  );

  /// IRI for schema:usesDevice [Expects: https://schema.org/MedicalDevice]
  ///
  /// Device used to perform the test.
  ///
  /// Can be used on: https://schema.org/MedicalTest
  ///
  static const usesDevice = IriTerm.prevalidated(
    'https://schema.org/usesDevice',
  );

  /// IRI for schema:usesHealthPlanIdStandard [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The standard for interpreting the Plan ID. The preferred is "HIOS". See the Centers for Medicare & Medicaid Services for more details.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan
  ///
  static const usesHealthPlanIdStandard = IriTerm.prevalidated(
    'https://schema.org/usesHealthPlanIdStandard',
  );

  /// IRI for schema:utterances [Expects: https://schema.org/Text]
  ///
  /// Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a {[HyperTocEntry]}.
  ///
  /// Can be used on: https://schema.org/HyperTocEntry
  ///
  static const utterances = IriTerm.prevalidated(
    'https://schema.org/utterances',
  );

  /// IRI for schema:validFor [Expects: https://schema.org/Duration]
  ///
  /// The duration of validity of a permit or similar thing.
  ///
  /// Can be used on: https://schema.org/EducationalOccupationalCredential, https://schema.org/Permit
  ///
  static const validFor = IriTerm.prevalidated('https://schema.org/validFor');

  /// IRI for schema:validForMemberTier [Expects: https://schema.org/MemberProgramTier]
  ///
  /// The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/OfferShippingDetails, https://schema.org/PriceSpecification, https://schema.org/ShippingService
  ///
  static const validForMemberTier = IriTerm.prevalidated(
    'https://schema.org/validForMemberTier',
  );

  /// IRI for schema:validFrom [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date when the item becomes valid.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/LocationFeatureSpecification, https://schema.org/MonetaryAmount, https://schema.org/Offer, https://schema.org/OpeningHoursSpecification, https://schema.org/Permit, https://schema.org/PriceSpecification
  ///
  static const validFrom = IriTerm.prevalidated('https://schema.org/validFrom');

  /// IRI for schema:validIn [Expects: https://schema.org/AdministrativeArea]
  ///
  /// The geographic area where the item is valid. Applies for example to a {[Permit]}, a {[Certification]}, or an {[EducationalOccupationalCredential]}.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/EducationalOccupationalCredential, https://schema.org/Permit
  ///
  static const validIn = IriTerm.prevalidated('https://schema.org/validIn');

  /// IRI for schema:validThrough [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/JobPosting, https://schema.org/LocationFeatureSpecification, https://schema.org/MonetaryAmount, https://schema.org/Offer, https://schema.org/OpeningHoursSpecification, https://schema.org/PriceSpecification
  ///
  static const validThrough = IriTerm.prevalidated(
    'https://schema.org/validThrough',
  );

  /// IRI for schema:validUntil [Expects: https://schema.org/Date]
  ///
  /// The date when the item is no longer valid.
  ///
  /// Can be used on: https://schema.org/Permit
  ///
  static const validUntil = IriTerm.prevalidated(
    'https://schema.org/validUntil',
  );

  /// IRI for schema:value [Expects: https://schema.org/Boolean, https://schema.org/Number, https://schema.org/StructuredValue, https://schema.org/Text]
  ///
  /// The value of a {[QuantitativeValue]} (including {[Observation]}) or property value node.\n\n* For {[QuantitativeValue]} and {[MonetaryAmount]}, the recommended type for values is 'Number'.\n* For {[PropertyValue]}, it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/QuantitativeValue
  ///
  static const value = IriTerm.prevalidated('https://schema.org/value');

  /// IRI for schema:valueAddedTaxIncluded [Expects: https://schema.org/Boolean]
  ///
  /// Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
  ///
  /// Can be used on: https://schema.org/PriceSpecification
  ///
  static const valueAddedTaxIncluded = IriTerm.prevalidated(
    'https://schema.org/valueAddedTaxIncluded',
  );

  /// IRI for schema:valueMaxLength [Expects: https://schema.org/Number]
  ///
  /// Specifies the allowed range for number of characters in a literal value.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const valueMaxLength = IriTerm.prevalidated(
    'https://schema.org/valueMaxLength',
  );

  /// IRI for schema:valueMinLength [Expects: https://schema.org/Number]
  ///
  /// Specifies the minimum allowed range for number of characters in a literal value.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const valueMinLength = IriTerm.prevalidated(
    'https://schema.org/valueMinLength',
  );

  /// IRI for schema:valueName [Expects: https://schema.org/Text]
  ///
  /// Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const valueName = IriTerm.prevalidated('https://schema.org/valueName');

  /// IRI for schema:valuePattern [Expects: https://schema.org/Text]
  ///
  /// Specifies a regular expression for testing literal values according to the HTML spec.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const valuePattern = IriTerm.prevalidated(
    'https://schema.org/valuePattern',
  );

  /// IRI for schema:valueReference [Expects: https://schema.org/DefinedTerm, https://schema.org/Enumeration, https://schema.org/MeasurementTypeEnumeration, https://schema.org/PropertyValue, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue, https://schema.org/StructuredValue, https://schema.org/Text]
  ///
  /// A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const valueReference = IriTerm.prevalidated(
    'https://schema.org/valueReference',
  );

  /// IRI for schema:valueRequired [Expects: https://schema.org/Boolean]
  ///
  /// Whether the property must be filled in to complete the action.  Default is false.
  ///
  /// Can be used on: https://schema.org/PropertyValueSpecification
  ///
  static const valueRequired = IriTerm.prevalidated(
    'https://schema.org/valueRequired',
  );

  /// IRI for schema:variableMeasured [Expects: https://schema.org/Property, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable, https://schema.org/Text]
  ///
  /// The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a {[StatisticalVariable]}.
  ///
  /// Can be used on: https://schema.org/Dataset, https://schema.org/Observation
  ///
  static const variableMeasured = IriTerm.prevalidated(
    'https://schema.org/variableMeasured',
  );

  /// IRI for schema:variantCover [Expects: https://schema.org/Text]
  ///
  /// A description of the variant cover
  /// for the issue, if the issue is a variant printing. For example, "Bryan Hitch
  /// Variant Cover" or "2nd Printing Variant".
  ///
  /// Can be used on: https://schema.org/ComicIssue
  ///
  static const variantCover = IriTerm.prevalidated(
    'https://schema.org/variantCover',
  );

  /// IRI for schema:variesBy [Expects: https://schema.org/DefinedTerm, https://schema.org/Text]
  ///
  /// Indicates the property or properties by which the variants in a {[ProductGroup]} vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. "color"; terms defined elsewhere can be referenced with their URIs.
  ///
  /// Can be used on: https://schema.org/ProductGroup
  ///
  static const variesBy = IriTerm.prevalidated('https://schema.org/variesBy');

  /// IRI for schema:vatID [Expects: https://schema.org/Text]
  ///
  /// The Value-added Tax ID of the organization or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const vatID = IriTerm.prevalidated('https://schema.org/vatID');

  /// IRI for schema:vehicleConfiguration [Expects: https://schema.org/Text]
  ///
  /// A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleConfiguration = IriTerm.prevalidated(
    'https://schema.org/vehicleConfiguration',
  );

  /// IRI for schema:vehicleEngine [Expects: https://schema.org/EngineSpecification]
  ///
  /// Information about the engine or engines of the vehicle.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleEngine = IriTerm.prevalidated(
    'https://schema.org/vehicleEngine',
  );

  /// IRI for schema:vehicleIdentificationNumber [Expects: https://schema.org/Text]
  ///
  /// The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleIdentificationNumber = IriTerm.prevalidated(
    'https://schema.org/vehicleIdentificationNumber',
  );

  /// IRI for schema:vehicleInteriorColor [Expects: https://schema.org/Text]
  ///
  /// The color or color combination of the interior of the vehicle.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleInteriorColor = IriTerm.prevalidated(
    'https://schema.org/vehicleInteriorColor',
  );

  /// IRI for schema:vehicleInteriorType [Expects: https://schema.org/Text]
  ///
  /// The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleInteriorType = IriTerm.prevalidated(
    'https://schema.org/vehicleInteriorType',
  );

  /// IRI for schema:vehicleModelDate [Expects: https://schema.org/Date]
  ///
  /// The release date of a vehicle model (often used to differentiate versions of the same make and model).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleModelDate = IriTerm.prevalidated(
    'https://schema.org/vehicleModelDate',
  );

  /// IRI for schema:vehicleSeatingCapacity [Expects: https://schema.org/Number, https://schema.org/QuantitativeValue]
  ///
  /// The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleSeatingCapacity = IriTerm.prevalidated(
    'https://schema.org/vehicleSeatingCapacity',
  );

  /// IRI for schema:vehicleSpecialUsage [Expects: https://schema.org/CarUsageType, https://schema.org/Text]
  ///
  /// Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleSpecialUsage = IriTerm.prevalidated(
    'https://schema.org/vehicleSpecialUsage',
  );

  /// IRI for schema:vehicleTransmission [Expects: https://schema.org/QualitativeValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const vehicleTransmission = IriTerm.prevalidated(
    'https://schema.org/vehicleTransmission',
  );

  /// IRI for schema:vendor [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// 'vendor' is an earlier term for 'seller'.
  ///
  /// Can be used on: https://schema.org/BuyAction
  ///
  static const vendor = IriTerm.prevalidated('https://schema.org/vendor');

  /// IRI for schema:verificationFactCheckingPolicy [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Disclosure about verification and fact-checking processes for a {[NewsMediaOrganization]} or other fact-checking {[Organization]}.
  ///
  /// Can be used on: https://schema.org/NewsMediaOrganization
  ///
  static const verificationFactCheckingPolicy = IriTerm.prevalidated(
    'https://schema.org/verificationFactCheckingPolicy',
  );

  /// IRI for schema:version [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The version of the CreativeWork embodied by a specified resource.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const version = IriTerm.prevalidated('https://schema.org/version');

  /// IRI for schema:video [Expects: https://schema.org/Clip, https://schema.org/VideoObject]
  ///
  /// An embedded video object.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const video = IriTerm.prevalidated('https://schema.org/video');

  /// IRI for schema:videoFormat [Expects: https://schema.org/Text]
  ///
  /// The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).
  ///
  /// Can be used on: https://schema.org/BroadcastEvent, https://schema.org/BroadcastService, https://schema.org/ScreeningEvent
  ///
  static const videoFormat = IriTerm.prevalidated(
    'https://schema.org/videoFormat',
  );

  /// IRI for schema:videoFrameSize [Expects: https://schema.org/Text]
  ///
  /// The frame size of the video.
  ///
  /// Can be used on: https://schema.org/VideoObject
  ///
  static const videoFrameSize = IriTerm.prevalidated(
    'https://schema.org/videoFrameSize',
  );

  /// IRI for schema:videoQuality [Expects: https://schema.org/Text]
  ///
  /// The quality of the video.
  ///
  /// Can be used on: https://schema.org/VideoObject
  ///
  static const videoQuality = IriTerm.prevalidated(
    'https://schema.org/videoQuality',
  );

  /// IRI for schema:volumeNumber [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// Identifies the volume of publication or multi-part work; for example, "iii" or "2".
  ///
  /// Can be used on: https://schema.org/PublicationVolume
  ///
  static const volumeNumber = IriTerm.prevalidated(
    'https://schema.org/volumeNumber',
  );

  /// IRI for schema:warning [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Any FDA or other warnings about the drug (text or URL).
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const warning = IriTerm.prevalidated('https://schema.org/warning');

  /// IRI for schema:warrantyPromise [Expects: https://schema.org/WarrantyPromise]
  ///
  /// The warranty promise(s) included in the offer.
  ///
  /// Can be used on: https://schema.org/BuyAction, https://schema.org/SellAction
  ///
  static const warrantyPromise = IriTerm.prevalidated(
    'https://schema.org/warrantyPromise',
  );

  /// IRI for schema:warrantyScope [Expects: https://schema.org/WarrantyScope]
  ///
  /// The scope of the warranty promise.
  ///
  /// Can be used on: https://schema.org/WarrantyPromise
  ///
  static const warrantyScope = IriTerm.prevalidated(
    'https://schema.org/warrantyScope',
  );

  /// IRI for schema:webCheckinTime [Expects: https://schema.org/DateTime]
  ///
  /// The time when a passenger can check into the flight online.
  ///
  /// Can be used on: https://schema.org/Flight
  ///
  static const webCheckinTime = IriTerm.prevalidated(
    'https://schema.org/webCheckinTime',
  );

  /// IRI for schema:webFeed [Expects: https://schema.org/DataFeed, https://schema.org/URL]
  ///
  /// The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.
  ///
  /// Can be used on: https://schema.org/PodcastSeries, https://schema.org/SpecialAnnouncement
  ///
  static const webFeed = IriTerm.prevalidated('https://schema.org/webFeed');

  /// IRI for schema:weight [Expects: https://schema.org/Mass, https://schema.org/QuantitativeValue]
  ///
  /// The weight of the product or person.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Person, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const weight = IriTerm.prevalidated('https://schema.org/weight');

  /// IRI for schema:weightPercentage [Expects: https://schema.org/Number]
  ///
  /// Fraction of the weight that is used to compute the shipping price.
  ///
  /// Can be used on: https://schema.org/ShippingRateSettings
  ///
  static const weightPercentage = IriTerm.prevalidated(
    'https://schema.org/weightPercentage',
  );

  /// IRI for schema:weightTotal [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the {[name]} of the {[QuantitativeValue]} node.\n* Note 2: You may also link to a {[QualitativeValue]} node that provides additional information using {[valueReference]}.\n* Note 3: Note that you can use {[minValue]} and {[maxValue]} to indicate ranges.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const weightTotal = IriTerm.prevalidated(
    'https://schema.org/weightTotal',
  );

  /// IRI for schema:wheelbase [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The distance between the centers of the front and rear wheels.\n\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet.
  ///
  /// Can be used on: https://schema.org/Vehicle
  ///
  static const wheelbase = IriTerm.prevalidated('https://schema.org/wheelbase');

  /// IRI for schema:width [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The width of the item.
  ///
  /// Can be used on: https://schema.org/MediaObject, https://schema.org/OfferShippingDetails, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const width = IriTerm.prevalidated('https://schema.org/width');

  /// IRI for schema:winner [Expects: https://schema.org/Person]
  ///
  /// A sub property of participant. The winner of the action.
  ///
  /// Can be used on: https://schema.org/LoseAction
  ///
  static const winner = IriTerm.prevalidated('https://schema.org/winner');

  /// IRI for schema:wordCount [Expects: https://schema.org/Integer]
  ///
  /// The number of words in the text of the CreativeWork such as an Article, Book, etc.
  ///
  /// Can be used on: https://schema.org/Article, https://schema.org/CreativeWork
  ///
  static const wordCount = IriTerm.prevalidated('https://schema.org/wordCount');

  /// IRI for schema:workHours [Expects: https://schema.org/Text]
  ///
  /// The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const workHours = IriTerm.prevalidated('https://schema.org/workHours');

  /// IRI for schema:workLocation [Expects: https://schema.org/ContactPoint, https://schema.org/Place]
  ///
  /// A contact location for a person's place of work.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const workLocation = IriTerm.prevalidated(
    'https://schema.org/workLocation',
  );

  /// IRI for schema:workPerformed [Expects: https://schema.org/CreativeWork]
  ///
  /// A work performed in some event, for example a play performed in a TheaterEvent.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const workPerformed = IriTerm.prevalidated(
    'https://schema.org/workPerformed',
  );

  /// IRI for schema:workPresented [Expects: https://schema.org/Movie]
  ///
  /// The movie presented during this event.
  ///
  /// Can be used on: https://schema.org/ScreeningEvent
  ///
  static const workPresented = IriTerm.prevalidated(
    'https://schema.org/workPresented',
  );

  /// IRI for schema:workload [Expects: https://schema.org/Energy, https://schema.org/QuantitativeValue]
  ///
  /// Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.
  ///
  /// Can be used on: https://schema.org/ExercisePlan
  ///
  static const workload = IriTerm.prevalidated('https://schema.org/workload');

  /// IRI for schema:worksFor [Expects: https://schema.org/Organization]
  ///
  /// Organizations that the person works for.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const worksFor = IriTerm.prevalidated('https://schema.org/worksFor');

  /// IRI for schema:worstRating [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The lowest value allowed in this rating system.
  ///
  /// Can be used on: https://schema.org/Rating
  ///
  static const worstRating = IriTerm.prevalidated(
    'https://schema.org/worstRating',
  );

  /// IRI for schema:xpath [Expects: https://schema.org/XPathType]
  ///
  /// An XPath, e.g. of a {[SpeakableSpecification]} or {[WebPageElement]}. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
  ///
  /// Can be used on: https://schema.org/SpeakableSpecification, https://schema.org/WebPageElement
  ///
  static const xpath = IriTerm.prevalidated('https://schema.org/xpath');

  /// IRI for schema:yearBuilt [Expects: https://schema.org/Number]
  ///
  /// The year an {[Accommodation]} was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field).
  ///
  /// Can be used on: https://schema.org/Accommodation
  ///
  static const yearBuilt = IriTerm.prevalidated('https://schema.org/yearBuilt');

  /// IRI for schema:yearlyRevenue [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The size of the business in annual revenue.
  ///
  /// Can be used on: https://schema.org/BusinessAudience
  ///
  static const yearlyRevenue = IriTerm.prevalidated(
    'https://schema.org/yearlyRevenue',
  );

  /// IRI for schema:yearsInOperation [Expects: https://schema.org/QuantitativeValue]
  ///
  /// The age of the business.
  ///
  /// Can be used on: https://schema.org/BusinessAudience
  ///
  static const yearsInOperation = IriTerm.prevalidated(
    'https://schema.org/yearsInOperation',
  );

  /// IRI for schema:actionApplication [Expects: https://schema.org/SoftwareApplication]
  ///
  /// An application that can complete the request.
  ///
  /// Can be used on: https://schema.org/EntryPoint
  ///
  static const actionApplication = IriTerm.prevalidated(
    'https://schema.org/actionApplication',
  );

  /// IRI for schema:actionOption [Expects: https://schema.org/Text, https://schema.org/Thing]
  ///
  /// A sub property of object. The options subject to this action.
  ///
  /// Can be used on: https://schema.org/ChooseAction
  ///
  static const actionOption = IriTerm.prevalidated(
    'https://schema.org/actionOption',
  );

  /// IRI for schema:album [Expects: https://schema.org/MusicAlbum]
  ///
  /// A music album.
  ///
  /// Can be used on: https://schema.org/MusicGroup
  ///
  static const album = IriTerm.prevalidated('https://schema.org/album');

  /// IRI for schema:albumRelease [Expects: https://schema.org/MusicRelease]
  ///
  /// A release of this album.
  ///
  /// Can be used on: https://schema.org/MusicAlbum
  ///
  static const albumRelease = IriTerm.prevalidated(
    'https://schema.org/albumRelease',
  );

  /// IRI for schema:alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// IRI for schema:alumni [Expects: https://schema.org/Person]
  ///
  /// Alumni of an organization.
  ///
  /// Can be used on: https://schema.org/EducationalOrganization, https://schema.org/Organization
  ///
  static const alumni = IriTerm.prevalidated('https://schema.org/alumni');

  /// IRI for schema:alumniOf [Expects: https://schema.org/EducationalOrganization, https://schema.org/Organization]
  ///
  /// An organization that the person is an alumni of.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const alumniOf = IriTerm.prevalidated('https://schema.org/alumniOf');

  /// IRI for schema:archiveHeld [Expects: https://schema.org/ArchiveComponent]
  ///
  /// Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept or maintained by an {[ArchiveOrganization]}.
  ///
  /// Can be used on: https://schema.org/ArchiveOrganization
  ///
  static const archiveHeld = IriTerm.prevalidated(
    'https://schema.org/archiveHeld',
  );

  /// IRI for schema:arterialBranch [Expects: https://schema.org/AnatomicalStructure]
  ///
  /// The branches that comprise the arterial structure.
  ///
  /// Can be used on: https://schema.org/Artery
  ///
  static const arterialBranch = IriTerm.prevalidated(
    'https://schema.org/arterialBranch',
  );

  /// IRI for schema:artworkSurface [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.
  ///
  /// Can be used on: https://schema.org/VisualArtwork
  ///
  static const artworkSurface = IriTerm.prevalidated(
    'https://schema.org/artworkSurface',
  );

  /// IRI for schema:attendee [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization attending the event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const attendee = IriTerm.prevalidated('https://schema.org/attendee');

  /// IRI for schema:audience [Expects: https://schema.org/Audience]
  ///
  /// An intended audience, i.e. a group for whom something was created.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/LodgingBusiness, https://schema.org/PlayAction, https://schema.org/Product, https://schema.org/Service
  ///
  static const audience = IriTerm.prevalidated('https://schema.org/audience');

  /// IRI for schema:availableOnDevice [Expects: https://schema.org/Text]
  ///
  /// Device required to run the application. Used in cases where a specific make/model is required to run the application.
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const availableOnDevice = IriTerm.prevalidated(
    'https://schema.org/availableOnDevice',
  );

  /// IRI for schema:award [Expects: https://schema.org/Text]
  ///
  /// An award won by or for this item.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product, https://schema.org/Service
  ///
  static const award = IriTerm.prevalidated('https://schema.org/award');

  /// IRI for schema:blogPost [Expects: https://schema.org/BlogPosting]
  ///
  /// A posting that is part of this blog.
  ///
  /// Can be used on: https://schema.org/Blog
  ///
  static const blogPost = IriTerm.prevalidated('https://schema.org/blogPost');

  /// IRI for schema:broker [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order, https://schema.org/Reservation, https://schema.org/Service
  ///
  static const broker = IriTerm.prevalidated('https://schema.org/broker');

  /// IRI for schema:caption [Expects: https://schema.org/MediaObject, https://schema.org/Text]
  ///
  /// The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the {[encodingFormat]}.
  ///
  /// Can be used on: https://schema.org/AudioObject, https://schema.org/ImageObject, https://schema.org/VideoObject
  ///
  static const caption = IriTerm.prevalidated('https://schema.org/caption');

  /// IRI for schema:category [Expects: https://schema.org/CategoryCode, https://schema.org/PhysicalActivityCategory, https://schema.org/Text, https://schema.org/Thing, https://schema.org/URL]
  ///
  /// A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
  ///
  /// Can be used on: https://schema.org/ActionAccessSpecification, https://schema.org/Invoice, https://schema.org/Offer, https://schema.org/PhysicalActivity, https://schema.org/Product, https://schema.org/Recommendation, https://schema.org/Service, https://schema.org/SpecialAnnouncement
  ///
  static const category = IriTerm.prevalidated('https://schema.org/category');

  /// IRI for schema:childTaxon [Expects: https://schema.org/Taxon, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Closest child taxa of the taxon in question.
  ///
  /// Can be used on: https://schema.org/Taxon
  ///
  static const childTaxon = IriTerm.prevalidated(
    'https://schema.org/childTaxon',
  );

  /// IRI for schema:clinicalPharmacology [Expects: https://schema.org/Text]
  ///
  /// Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
  ///
  /// Can be used on: https://schema.org/Drug
  ///
  static const clinicalPharmacology = IriTerm.prevalidated(
    'https://schema.org/clinicalPharmacology',
  );

  /// IRI for schema:codeSampleType [Expects: https://schema.org/Text]
  ///
  /// What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const codeSampleType = IriTerm.prevalidated(
    'https://schema.org/codeSampleType',
  );

  /// IRI for schema:colleague [Expects: https://schema.org/Person, https://schema.org/URL]
  ///
  /// A colleague of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const colleague = IriTerm.prevalidated('https://schema.org/colleague');

  /// IRI for schema:contactPoint [Expects: https://schema.org/ContactPoint]
  ///
  /// A contact point for a person or organization.
  ///
  /// Can be used on: https://schema.org/HealthInsurancePlan, https://schema.org/Organization, https://schema.org/Person
  ///
  static const contactPoint = IriTerm.prevalidated(
    'https://schema.org/contactPoint',
  );

  /// IRI for schema:containsPlace [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and another that it contains.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containsPlace = IriTerm.prevalidated(
    'https://schema.org/containsPlace',
  );

  /// IRI for schema:containsSeason [Expects: https://schema.org/CreativeWorkSeason]
  ///
  /// A season that is part of the media series.
  ///
  /// Can be used on: https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const containsSeason = IriTerm.prevalidated(
    'https://schema.org/containsSeason',
  );

  /// IRI for schema:contentLocation [Expects: https://schema.org/Place]
  ///
  /// The location depicted or described in the content. For example, the location in a photograph or painting.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const contentLocation = IriTerm.prevalidated(
    'https://schema.org/contentLocation',
  );

  /// IRI for schema:creator [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/UserComments
  ///
  static const creator = IriTerm.prevalidated('https://schema.org/creator');

  /// IRI for schema:dataset [Expects: https://schema.org/Dataset]
  ///
  /// A dataset contained in this catalog.
  ///
  /// Can be used on: https://schema.org/DataCatalog
  ///
  static const dataset = IriTerm.prevalidated('https://schema.org/dataset');

  /// IRI for schema:dateCreated [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date on which the CreativeWork was created or the item was added to a DataFeed.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/DataFeedItem
  ///
  static const dateCreated = IriTerm.prevalidated(
    'https://schema.org/dateCreated',
  );

  /// IRI for schema:director [Expects: https://schema.org/Person]
  ///
  /// A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/Event, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const director = IriTerm.prevalidated('https://schema.org/director');

  /// IRI for schema:duration [Expects: https://schema.org/Duration, https://schema.org/QuantitativeValue]
  ///
  /// The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/Audiobook, https://schema.org/Episode, https://schema.org/Event, https://schema.org/MediaObject, https://schema.org/Movie, https://schema.org/MusicRecording, https://schema.org/MusicRelease, https://schema.org/QuantitativeValueDistribution, https://schema.org/Schedule, https://schema.org/ServicePeriod
  ///
  static const duration = IriTerm.prevalidated('https://schema.org/duration');

  /// IRI for schema:employee [Expects: https://schema.org/Person]
  ///
  /// Someone working for this organization.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const employee = IriTerm.prevalidated('https://schema.org/employee');

  /// IRI for schema:encodesBioChemEntity [Expects: https://schema.org/BioChemEntity]
  ///
  /// Another BioChemEntity encoded by this one.
  ///
  /// Can be used on: https://schema.org/Gene
  ///
  static const encodesBioChemEntity = IriTerm.prevalidated(
    'https://schema.org/encodesBioChemEntity',
  );

  /// IRI for schema:encodesCreativeWork [Expects: https://schema.org/CreativeWork]
  ///
  /// The CreativeWork encoded by this media object.
  ///
  /// Can be used on: https://schema.org/MediaObject
  ///
  static const encodesCreativeWork = IriTerm.prevalidated(
    'https://schema.org/encodesCreativeWork',
  );

  /// IRI for schema:encodingFormat [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.
  ///
  /// In cases where a {[CreativeWork]} has several media type representations, {[encoding]} can be used to indicate each {[MediaObject]} alongside particular {[encodingFormat]} information.
  ///
  /// Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/MediaObject
  ///
  static const encodingFormat = IriTerm.prevalidated(
    'https://schema.org/encodingFormat',
  );

  /// IRI for schema:episode [Expects: https://schema.org/Episode]
  ///
  /// An episode of a TV, radio or game media within a series or season.
  ///
  /// Can be used on: https://schema.org/CreativeWorkSeason, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const episode = IriTerm.prevalidated('https://schema.org/episode');

  /// IRI for schema:event [Expects: https://schema.org/Event]
  ///
  /// Upcoming or past event associated with this place, organization, or action.
  ///
  /// Can be used on: https://schema.org/InformAction, https://schema.org/InviteAction, https://schema.org/JoinAction, https://schema.org/LeaveAction, https://schema.org/Organization, https://schema.org/Place, https://schema.org/PlayAction
  ///
  static const event = IriTerm.prevalidated('https://schema.org/event');

  /// IRI for schema:exampleOfWork [Expects: https://schema.org/CreativeWork]
  ///
  /// A creative work that this work is an example/instance/realization/derivation of.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const exampleOfWork = IriTerm.prevalidated(
    'https://schema.org/exampleOfWork',
  );

  /// IRI for schema:executableLibraryName [Expects: https://schema.org/Text]
  ///
  /// Library file name, e.g., mscorlib.dll, system.web.dll.
  ///
  /// Can be used on: https://schema.org/APIReference
  ///
  static const executableLibraryName = IriTerm.prevalidated(
    'https://schema.org/executableLibraryName',
  );

  /// IRI for schema:exerciseCourse [Expects: https://schema.org/Place]
  ///
  /// A sub property of location. The course where this action was taken.
  ///
  /// Can be used on: https://schema.org/ExerciseAction
  ///
  static const exerciseCourse = IriTerm.prevalidated(
    'https://schema.org/exerciseCourse',
  );

  /// IRI for schema:founder [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization who founded this organization.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const founder = IriTerm.prevalidated('https://schema.org/founder');

  /// IRI for schema:frequency [Expects: https://schema.org/Text]
  ///
  /// How often the dose is taken, e.g. 'daily'.
  ///
  /// Can be used on: https://schema.org/DoseSchedule
  ///
  static const frequency = IriTerm.prevalidated('https://schema.org/frequency');

  /// IRI for schema:fundedItem [Expects: https://schema.org/BioChemEntity, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/MedicalEntity, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product]
  ///
  /// Indicates something directly or indirectly funded or sponsored through a {[Grant]}. See also {[ownershipFundingInfo]}.
  ///
  /// Can be used on: https://schema.org/Grant
  ///
  static const fundedItem = IriTerm.prevalidated(
    'https://schema.org/fundedItem',
  );

  /// IRI for schema:funding [Expects: https://schema.org/Grant]
  ///
  /// A {[Grant]} that directly or indirectly provide funding or sponsorship for this item. See also {[ownershipFundingInfo]}.
  ///
  /// Can be used on: https://schema.org/BioChemEntity, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/MedicalEntity, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Product
  ///
  static const funding = IriTerm.prevalidated('https://schema.org/funding');

  /// IRI for schema:game [Expects: https://schema.org/VideoGame]
  ///
  /// Video game which is played on this server.
  ///
  /// Can be used on: https://schema.org/GameServer
  ///
  static const game = IriTerm.prevalidated('https://schema.org/game');

  /// IRI for schema:gameServer [Expects: https://schema.org/GameServer]
  ///
  /// The server on which  it is possible to play the game.
  ///
  /// Can be used on: https://schema.org/VideoGame
  ///
  static const gameServer = IriTerm.prevalidated(
    'https://schema.org/gameServer',
  );

  /// IRI for schema:genre [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Genre of the creative work, broadcast channel or group.
  ///
  /// Can be used on: https://schema.org/BroadcastChannel, https://schema.org/CreativeWork, https://schema.org/MusicGroup
  ///
  static const genre = IriTerm.prevalidated('https://schema.org/genre');

  /// IRI for schema:hasBioChemEntityPart [Expects: https://schema.org/BioChemEntity]
  ///
  /// Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasBioChemEntityPart = IriTerm.prevalidated(
    'https://schema.org/hasBioChemEntityPart',
  );

  /// IRI for schema:hasBroadcastChannel [Expects: https://schema.org/BroadcastChannel]
  ///
  /// A broadcast channel of a broadcast service.
  ///
  /// Can be used on: https://schema.org/BroadcastService
  ///
  static const hasBroadcastChannel = IriTerm.prevalidated(
    'https://schema.org/hasBroadcastChannel',
  );

  /// IRI for schema:hasDefinedTerm [Expects: https://schema.org/DefinedTerm]
  ///
  /// A Defined Term contained in this term set.
  ///
  /// Can be used on: https://schema.org/DefinedTermSet, https://schema.org/Taxon
  ///
  static const hasDefinedTerm = IriTerm.prevalidated(
    'https://schema.org/hasDefinedTerm',
  );

  /// IRI for schema:hasMenu [Expects: https://schema.org/Menu, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Either the actual menu as a structured representation, as text, or a URL of the menu.
  ///
  /// Can be used on: https://schema.org/FoodEstablishment
  ///
  static const hasMenu = IriTerm.prevalidated('https://schema.org/hasMenu');

  /// IRI for schema:hasTiers [Expects: https://schema.org/MemberProgramTier]
  ///
  /// The tiers of a member program.
  ///
  /// Can be used on: https://schema.org/MemberProgram
  ///
  static const hasTiers = IriTerm.prevalidated('https://schema.org/hasTiers');

  /// IRI for schema:hasVariant [Expects: https://schema.org/Product]
  ///
  /// Indicates a {[Product]} that is a member of this {[ProductGroup]} (or {[ProductModel]}).
  ///
  /// Can be used on: https://schema.org/ProductGroup
  ///
  static const hasVariant = IriTerm.prevalidated(
    'https://schema.org/hasVariant',
  );

  /// IRI for schema:holdingArchive [Expects: https://schema.org/ArchiveOrganization]
  ///
  /// {[ArchiveOrganization]} that holds, keeps or maintains the {[ArchiveComponent]}.
  ///
  /// Can be used on: https://schema.org/ArchiveComponent
  ///
  static const holdingArchive = IriTerm.prevalidated(
    'https://schema.org/holdingArchive',
  );

  /// IRI for schema:inDefinedTermSet [Expects: https://schema.org/DefinedTermSet, https://schema.org/URL]
  ///
  /// A {[DefinedTermSet]} that contains this term.
  ///
  /// Can be used on: https://schema.org/DefinedTerm
  ///
  static const inDefinedTermSet = IriTerm.prevalidated(
    'https://schema.org/inDefinedTermSet',
  );

  /// IRI for schema:inLanguage [Expects: https://schema.org/Language, https://schema.org/Text]
  ///
  /// The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also {[availableLanguage]}.
  ///
  /// Can be used on: https://schema.org/BroadcastService, https://schema.org/CommunicateAction, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/LinkRole, https://schema.org/PronounceableText, https://schema.org/WriteAction
  ///
  static const inLanguage = IriTerm.prevalidated(
    'https://schema.org/inLanguage',
  );

  /// IRI for schema:incentiveCompensation [Expects: https://schema.org/Text]
  ///
  /// Description of bonus and commission compensation aspects of the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const incentiveCompensation = IriTerm.prevalidated(
    'https://schema.org/incentiveCompensation',
  );

  /// IRI for schema:interactionStatistic [Expects: https://schema.org/InteractionCounter]
  ///
  /// The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Organization, https://schema.org/Person
  ///
  static const interactionStatistic = IriTerm.prevalidated(
    'https://schema.org/interactionStatistic',
  );

  /// IRI for schema:isAccessibleForFree [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the item, event, or place is accessible for free.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Place
  ///
  static const isAccessibleForFree = IriTerm.prevalidated(
    'https://schema.org/isAccessibleForFree',
  );

  /// IRI for schema:isBasedOn [Expects: https://schema.org/CreativeWork, https://schema.org/Product, https://schema.org/URL]
  ///
  /// A resource from which this work is derived or from which it is a modification or adaptation.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const isBasedOn = IriTerm.prevalidated('https://schema.org/isBasedOn');

  /// IRI for schema:isEncodedByBioChemEntity [Expects: https://schema.org/Gene]
  ///
  /// Another BioChemEntity encoding by this one.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isEncodedByBioChemEntity = IriTerm.prevalidated(
    'https://schema.org/isEncodedByBioChemEntity',
  );

  /// IRI for schema:isPartOfBioChemEntity [Expects: https://schema.org/BioChemEntity]
  ///
  /// Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const isPartOfBioChemEntity = IriTerm.prevalidated(
    'https://schema.org/isPartOfBioChemEntity',
  );

  /// IRI for schema:isTierOf [Expects: https://schema.org/MemberProgram]
  ///
  /// The member program this tier is a part of.
  ///
  /// Can be used on: https://schema.org/MemberProgramTier
  ///
  static const isTierOf = IriTerm.prevalidated('https://schema.org/isTierOf');

  /// IRI for schema:isVariantOf [Expects: https://schema.org/ProductGroup, https://schema.org/ProductModel]
  ///
  /// Indicates the kind of product that this is a variant of. In the case of {[ProductModel]}, this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a {[ProductGroup]}, the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with {[ProductGroup]}, this property can apply to any {[Product]} included in the group.
  ///
  /// Can be used on: https://schema.org/Product, https://schema.org/ProductModel
  ///
  static const isVariantOf = IriTerm.prevalidated(
    'https://schema.org/isVariantOf',
  );

  /// IRI for schema:itemOffered [Expects: https://schema.org/AggregateOffer, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/MenuItem, https://schema.org/Product, https://schema.org/Service, https://schema.org/Trip]
  ///
  /// An item being offered (or demanded). The transactional nature of the offer or demand is documented using {[businessFunction]}, e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const itemOffered = IriTerm.prevalidated(
    'https://schema.org/itemOffered',
  );

  /// IRI for schema:jobBenefits [Expects: https://schema.org/Text]
  ///
  /// Description of benefits associated with the job.
  ///
  /// Can be used on: https://schema.org/JobPosting
  ///
  static const jobBenefits = IriTerm.prevalidated(
    'https://schema.org/jobBenefits',
  );

  /// IRI for schema:jurisdiction [Expects: https://schema.org/AdministrativeArea, https://schema.org/Text]
  ///
  /// Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.
  ///
  /// Can be used on: https://schema.org/GovernmentService, https://schema.org/Legislation
  ///
  static const jurisdiction = IriTerm.prevalidated(
    'https://schema.org/jurisdiction',
  );

  /// IRI for schema:mainContentOfPage [Expects: https://schema.org/WebPageElement]
  ///
  /// Indicates if this web page element is the main subject of the page.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const mainContentOfPage = IriTerm.prevalidated(
    'https://schema.org/mainContentOfPage',
  );

  /// IRI for schema:mainEntity [Expects: https://schema.org/Thing]
  ///
  /// Indicates the primary entity described in some page or other CreativeWork.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const mainEntity = IriTerm.prevalidated(
    'https://schema.org/mainEntity',
  );

  /// IRI for schema:mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// IRI for schema:makesOffer [Expects: https://schema.org/Offer]
  ///
  /// A pointer to products or services offered by the organization or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const makesOffer = IriTerm.prevalidated(
    'https://schema.org/makesOffer',
  );

  /// IRI for schema:measurementTechnique [Expects: https://schema.org/DefinedTerm, https://schema.org/MeasurementMethodEnum, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A technique, method or technology used in an {[Observation]}, {[StatisticalVariable]} or {[Dataset]} (or {[DataDownload]}, {[DataCatalog]}), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using {[variableMeasured]}; for {[Observation]}, a {[StatisticalVariable]}). Often but not necessarily each {[variableMeasured]} will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and "knowledge graphs". In that case the subproperty of {[variableMeasured]} called {[measuredProperty]} is applicable.
  ///
  /// The {[measurementTechnique]} property helps when extra clarification is needed about how a {[measuredProperty]} was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery.
  ///
  /// For example, if {[variableMeasured]} is: molecule concentration, {[measurementTechnique]} could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence". If the {[variableMeasured]} is "depression rating", the {[measurementTechnique]} could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory".
  ///
  /// If there are several {[variableMeasured]} properties recorded for some given data object, use a {[PropertyValue]} for each {[variableMeasured]} and attach the corresponding {[measurementTechnique]}. The value can also be from an enumeration, organized as a {[MeasurementMetholdEnumeration]}.
  ///
  /// Can be used on: https://schema.org/DataCatalog, https://schema.org/DataDownload, https://schema.org/Dataset, https://schema.org/Observation, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable
  ///
  static const measurementTechnique = IriTerm.prevalidated(
    'https://schema.org/measurementTechnique',
  );

  /// IRI for schema:offeredBy [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A pointer to the organization or person making the offer.
  ///
  /// Can be used on: https://schema.org/Offer
  ///
  static const offeredBy = IriTerm.prevalidated('https://schema.org/offeredBy');

  /// IRI for schema:offers [Expects: https://schema.org/Demand, https://schema.org/Offer]
  ///
  /// An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use {[businessFunction]} to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a {[Demand]}. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
  ///
  ///
  /// Can be used on: https://schema.org/AggregateOffer, https://schema.org/CreativeWork, https://schema.org/EducationalOccupationalProgram, https://schema.org/Event, https://schema.org/MenuItem, https://schema.org/Product, https://schema.org/Service, https://schema.org/Trip
  ///
  static const offers = IriTerm.prevalidated('https://schema.org/offers');

  /// IRI for schema:parent [Expects: https://schema.org/Person]
  ///
  /// A parent of this person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const parent = IriTerm.prevalidated('https://schema.org/parent');

  /// IRI for schema:parentTaxon [Expects: https://schema.org/Taxon, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Closest parent taxon of the taxon in question.
  ///
  /// Can be used on: https://schema.org/Taxon
  ///
  static const parentTaxon = IriTerm.prevalidated(
    'https://schema.org/parentTaxon',
  );

  /// IRI for schema:partOfSeries [Expects: https://schema.org/CreativeWorkSeries]
  ///
  /// The series to which this episode or season belongs.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/CreativeWorkSeason, https://schema.org/Episode
  ///
  static const partOfSeries = IriTerm.prevalidated(
    'https://schema.org/partOfSeries',
  );

  /// IRI for schema:partOfTrip [Expects: https://schema.org/Trip]
  ///
  /// Identifies that this {[Trip]} is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const partOfTrip = IriTerm.prevalidated(
    'https://schema.org/partOfTrip',
  );

  /// IRI for schema:paymentDueDate [Expects: https://schema.org/Date, https://schema.org/DateTime]
  ///
  /// The date that payment is due.
  ///
  /// Can be used on: https://schema.org/Invoice, https://schema.org/Order
  ///
  static const paymentDueDate = IriTerm.prevalidated(
    'https://schema.org/paymentDueDate',
  );

  /// IRI for schema:performTime [Expects: https://schema.org/Duration]
  ///
  /// The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToDirection
  ///
  static const performTime = IriTerm.prevalidated(
    'https://schema.org/performTime',
  );

  /// IRI for schema:performer [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const performer = IriTerm.prevalidated('https://schema.org/performer');

  /// IRI for schema:photo [Expects: https://schema.org/ImageObject, https://schema.org/Photograph]
  ///
  /// A photograph of this place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const photo = IriTerm.prevalidated('https://schema.org/photo');

  /// IRI for schema:provider [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
  ///
  /// Can be used on: https://schema.org/Action, https://schema.org/CreativeWork, https://schema.org/EducationalOccupationalProgram, https://schema.org/FinancialIncentive, https://schema.org/Invoice, https://schema.org/ParcelDelivery, https://schema.org/Reservation, https://schema.org/Service, https://schema.org/Trip
  ///
  static const provider = IriTerm.prevalidated('https://schema.org/provider');

  /// IRI for schema:providesBroadcastService [Expects: https://schema.org/BroadcastService]
  ///
  /// The BroadcastService offered on this channel.
  ///
  /// Can be used on: https://schema.org/BroadcastChannel
  ///
  static const providesBroadcastService = IriTerm.prevalidated(
    'https://schema.org/providesBroadcastService',
  );

  /// IRI for schema:recipeIngredient [Expects: https://schema.org/Text]
  ///
  /// A single ingredient used in the recipe, e.g. sugar, flour or garlic.
  ///
  /// Can be used on: https://schema.org/Recipe
  ///
  static const recipeIngredient = IriTerm.prevalidated(
    'https://schema.org/recipeIngredient',
  );

  /// IRI for schema:recordedAs [Expects: https://schema.org/MusicRecording]
  ///
  /// An audio recording of the work.
  ///
  /// Can be used on: https://schema.org/MusicComposition
  ///
  static const recordedAs = IriTerm.prevalidated(
    'https://schema.org/recordedAs',
  );

  /// IRI for schema:recordedAt [Expects: https://schema.org/Event]
  ///
  /// The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const recordedAt = IriTerm.prevalidated(
    'https://schema.org/recordedAt',
  );

  /// IRI for schema:recordedIn [Expects: https://schema.org/CreativeWork]
  ///
  /// The CreativeWork that captured all or part of this Event.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const recordedIn = IriTerm.prevalidated(
    'https://schema.org/recordedIn',
  );

  /// IRI for schema:recordingOf [Expects: https://schema.org/MusicComposition]
  ///
  /// The composition this track is a recording of.
  ///
  /// Can be used on: https://schema.org/MusicRecording
  ///
  static const recordingOf = IriTerm.prevalidated(
    'https://schema.org/recordingOf',
  );

  /// IRI for schema:releaseOf [Expects: https://schema.org/MusicAlbum]
  ///
  /// The album this is a release of.
  ///
  /// Can be used on: https://schema.org/MusicRelease
  ///
  static const releaseOf = IriTerm.prevalidated('https://schema.org/releaseOf');

  /// IRI for schema:review [Expects: https://schema.org/Review]
  ///
  /// A review of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const review = IriTerm.prevalidated('https://schema.org/review');

  /// IRI for schema:roleName [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.
  ///
  /// Can be used on: https://schema.org/Role
  ///
  static const roleName = IriTerm.prevalidated('https://schema.org/roleName');

  /// IRI for schema:runtimePlatform [Expects: https://schema.org/Text]
  ///
  /// Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).
  ///
  /// Can be used on: https://schema.org/SoftwareSourceCode
  ///
  static const runtimePlatform = IriTerm.prevalidated(
    'https://schema.org/runtimePlatform',
  );

  /// IRI for schema:season [Expects: https://schema.org/CreativeWorkSeason, https://schema.org/URL]
  ///
  /// A season in a media series.
  ///
  /// Can be used on: https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGameSeries
  ///
  static const season = IriTerm.prevalidated('https://schema.org/season');

  /// IRI for schema:serialNumber [Expects: https://schema.org/Text]
  ///
  /// The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/IndividualProduct, https://schema.org/Offer
  ///
  static const serialNumber = IriTerm.prevalidated(
    'https://schema.org/serialNumber',
  );

  /// IRI for schema:serviceArea [Expects: https://schema.org/AdministrativeArea, https://schema.org/GeoShape, https://schema.org/Place]
  ///
  /// The geographic area where the service is provided.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Service
  ///
  static const serviceArea = IriTerm.prevalidated(
    'https://schema.org/serviceArea',
  );

  /// IRI for schema:serviceOutput [Expects: https://schema.org/Thing]
  ///
  /// The tangible thing generated by the service, e.g. a passport, permit, etc.
  ///
  /// Can be used on: https://schema.org/Service
  ///
  static const serviceOutput = IriTerm.prevalidated(
    'https://schema.org/serviceOutput',
  );

  /// IRI for schema:sibling [Expects: https://schema.org/Person]
  ///
  /// A sibling of the person.
  ///
  /// Can be used on: https://schema.org/Person
  ///
  static const sibling = IriTerm.prevalidated('https://schema.org/sibling');

  /// IRI for schema:significantLink [Expects: https://schema.org/URL]
  ///
  /// One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
  ///
  /// Can be used on: https://schema.org/WebPage
  ///
  static const significantLink = IriTerm.prevalidated(
    'https://schema.org/significantLink',
  );

  /// IRI for schema:softwareRequirements [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).
  ///
  /// Can be used on: https://schema.org/SoftwareApplication
  ///
  static const softwareRequirements = IriTerm.prevalidated(
    'https://schema.org/softwareRequirements',
  );

  /// IRI for schema:sponsor [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Grant, https://schema.org/MedicalStudy, https://schema.org/Organization, https://schema.org/Person
  ///
  static const sponsor = IriTerm.prevalidated('https://schema.org/sponsor');

  /// IRI for schema:subOrganization [Expects: https://schema.org/Organization]
  ///
  /// A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const subOrganization = IriTerm.prevalidated(
    'https://schema.org/subOrganization',
  );

  /// IRI for schema:subTrip [Expects: https://schema.org/Trip]
  ///
  /// Identifies a {[Trip]} that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
  ///
  /// Can be used on: https://schema.org/Trip
  ///
  static const subTrip = IriTerm.prevalidated('https://schema.org/subTrip');

  /// IRI for schema:subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// IRI for schema:suggestedAnswer [Expects: https://schema.org/Answer, https://schema.org/ItemList]
  ///
  /// An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
  ///
  /// Can be used on: https://schema.org/Question
  ///
  static const suggestedAnswer = IriTerm.prevalidated(
    'https://schema.org/suggestedAnswer',
  );

  /// IRI for schema:superEvent [Expects: https://schema.org/Event]
  ///
  /// An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const superEvent = IriTerm.prevalidated(
    'https://schema.org/superEvent',
  );

  /// IRI for schema:targetCollection [Expects: https://schema.org/Thing]
  ///
  /// A sub property of object. The collection target of the action.
  ///
  /// Can be used on: https://schema.org/UpdateAction
  ///
  static const targetCollection = IriTerm.prevalidated(
    'https://schema.org/targetCollection',
  );

  /// IRI for schema:temporalCoverage [Expects: https://schema.org/DateTime, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In
  /// the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL.
  /// Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".
  ///
  /// Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const temporalCoverage = IriTerm.prevalidated(
    'https://schema.org/temporalCoverage',
  );

  /// IRI for schema:termCode [Expects: https://schema.org/Text]
  ///
  /// A code that identifies this {[DefinedTerm]} within a {[DefinedTermSet]}.
  ///
  /// Can be used on: https://schema.org/DefinedTerm
  ///
  static const termCode = IriTerm.prevalidated('https://schema.org/termCode');

  /// IRI for schema:track [Expects: https://schema.org/ItemList, https://schema.org/MusicRecording]
  ///
  /// A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.
  ///
  /// Can be used on: https://schema.org/MusicGroup, https://schema.org/MusicPlaylist
  ///
  static const track = IriTerm.prevalidated('https://schema.org/track');

  /// IRI for schema:translationOfWork [Expects: https://schema.org/CreativeWork]
  ///
  /// The work that this work has been translated from. E.g. Áâ©ÁßçËµ∑Ê∫ê is a translationOf ‚ÄúOn the Origin of Species‚Äù.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const translationOfWork = IriTerm.prevalidated(
    'https://schema.org/translationOfWork',
  );

  /// IRI for schema:usageInfo [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// The schema.org {[usageInfo]} property indicates further information about a {[CreativeWork]}. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.
  ///
  /// This property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const usageInfo = IriTerm.prevalidated('https://schema.org/usageInfo');

  /// IRI for schema:warranty [Expects: https://schema.org/WarrantyPromise]
  ///
  /// The warranty promise(s) included in the offer.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer
  ///
  static const warranty = IriTerm.prevalidated('https://schema.org/warranty');

  /// IRI for schema:workTranslation [Expects: https://schema.org/CreativeWork]
  ///
  /// A work that is a translation of the content of this work. E.g. Ë•øÈÅäË®ò has an English workTranslation ‚ÄúJourney to the West‚Äù, a German workTranslation ‚ÄúMonkeys Pilgerfahrt‚Äù and a Vietnamese  translation T√¢y du k√Ω b√¨nh kh·∫£o.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const workTranslation = IriTerm.prevalidated(
    'https://schema.org/workTranslation',
  );

  /// IRI for schema:yield_ [Expects: https://schema.org/QuantitativeValue, https://schema.org/Text]
  ///
  /// The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
  ///
  /// Can be used on: https://schema.org/HowTo
  ///
  static const yield_ = IriTerm.prevalidated('https://schema.org/yield');

  /// IRI for schema:about [Expects: https://schema.org/Thing]
  ///
  /// The subject matter of the content.
  ///
  /// Can be used on: https://schema.org/Certification, https://schema.org/CommunicateAction, https://schema.org/CreativeWork, https://schema.org/Event
  ///
  static const about = IriTerm.prevalidated('https://schema.org/about');

  /// IRI for schema:actor [Expects: https://schema.org/PerformingGroup, https://schema.org/Person]
  ///
  /// An actor (individual or a group), e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
  ///
  /// Can be used on: https://schema.org/Clip, https://schema.org/CreativeWorkSeason, https://schema.org/Episode, https://schema.org/Event, https://schema.org/Movie, https://schema.org/MovieSeries, https://schema.org/PodcastSeries, https://schema.org/RadioSeries, https://schema.org/TVSeries, https://schema.org/VideoGame, https://schema.org/VideoGameSeries, https://schema.org/VideoObject
  ///
  static const actor = IriTerm.prevalidated('https://schema.org/actor');

  /// IRI for schema:associatedReview [Expects: https://schema.org/Review]
  ///
  /// An associated {[Review]}.
  ///
  /// Can be used on: https://schema.org/Review
  ///
  static const associatedReview = IriTerm.prevalidated(
    'https://schema.org/associatedReview',
  );

  /// IRI for schema:competitor [Expects: https://schema.org/Person, https://schema.org/SportsTeam]
  ///
  /// A competitor in a sports event.
  ///
  /// Can be used on: https://schema.org/SportsEvent
  ///
  static const competitor = IriTerm.prevalidated(
    'https://schema.org/competitor',
  );

  /// IRI for schema:containedInPlace [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and one that contains it.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containedInPlace = IriTerm.prevalidated(
    'https://schema.org/containedInPlace',
  );

  /// IRI for schema:encoding [Expects: https://schema.org/MediaObject]
  ///
  /// A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const encoding = IriTerm.prevalidated('https://schema.org/encoding');

  /// IRI for schema:hasMap [Expects: https://schema.org/Map, https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const hasMap = IriTerm.prevalidated('https://schema.org/hasMap');

  /// IRI for schema:legislationApplies [Expects: https://schema.org/Legislation]
  ///
  /// Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href="/legislationTransposes">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state "applies" the consolidated version of the European Directive implemented in it.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationApplies = IriTerm.prevalidated(
    'https://schema.org/legislationApplies',
  );

  /// IRI for schema:material [Expects: https://schema.org/Product, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A material that something is made from, e.g. leather, wool, cotton, paper.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Product
  ///
  static const material = IriTerm.prevalidated('https://schema.org/material');

  /// IRI for schema:memberOf [Expects: https://schema.org/MemberProgramTier, https://schema.org/Organization, https://schema.org/ProgramMembership]
  ///
  /// An Organization (or ProgramMembership) to which this Person or Organization belongs.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person
  ///
  static const memberOf = IriTerm.prevalidated('https://schema.org/memberOf');

  /// IRI for schema:parentOrganization [Expects: https://schema.org/Organization]
  ///
  /// The larger organization that this organization is a {[subOrganization]} of, if any.
  ///
  /// Can be used on: https://schema.org/Organization
  ///
  static const parentOrganization = IriTerm.prevalidated(
    'https://schema.org/parentOrganization',
  );

  /// IRI for schema:result [Expects: https://schema.org/Thing]
  ///
  /// The result produced in the action. E.g. John wrote *a book*.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const result = IriTerm.prevalidated('https://schema.org/result');

  /// IRI for schema:seller [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
  ///
  /// Can be used on: https://schema.org/BuyAction, https://schema.org/Demand, https://schema.org/Flight, https://schema.org/Offer, https://schema.org/Order
  ///
  static const seller = IriTerm.prevalidated('https://schema.org/seller');

  /// IRI for schema:spatialCoverage [Expects: https://schema.org/Place]
  ///
  /// The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
  /// contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
  /// areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const spatialCoverage = IriTerm.prevalidated(
    'https://schema.org/spatialCoverage',
  );

  /// IRI for schema:step [Expects: https://schema.org/CreativeWork, https://schema.org/HowToSection, https://schema.org/HowToStep, https://schema.org/Text]
  ///
  /// A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
  ///
  /// Can be used on: https://schema.org/HowTo
  ///
  static const step = IriTerm.prevalidated('https://schema.org/step');

  /// IRI for schema:subEvent [Expects: https://schema.org/Event]
  ///
  /// An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const subEvent = IriTerm.prevalidated('https://schema.org/subEvent');

  /// IRI for schema:supply [Expects: https://schema.org/HowToSupply, https://schema.org/Text]
  ///
  /// A sub-property of instrument. A supply consumed when performing instructions or a direction.
  ///
  /// Can be used on: https://schema.org/HowTo, https://schema.org/HowToDirection
  ///
  static const supply = IriTerm.prevalidated('https://schema.org/supply');

  /// IRI for schema:workFeatured [Expects: https://schema.org/CreativeWork]
  ///
  /// A work featured in some event, e.g. exhibited in an ExhibitionEvent.
  /// Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
  ///
  /// Can be used on: https://schema.org/Event
  ///
  static const workFeatured = IriTerm.prevalidated(
    'https://schema.org/workFeatured',
  );

  /// IRI for schema:areaServed [Expects: https://schema.org/AdministrativeArea, https://schema.org/GeoShape, https://schema.org/Place, https://schema.org/Text]
  ///
  /// The geographic area where a service or offered item is provided.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/DeliveryChargeSpecification, https://schema.org/Demand, https://schema.org/FinancialIncentive, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Service
  ///
  static const areaServed = IriTerm.prevalidated(
    'https://schema.org/areaServed',
  );

  /// IRI for schema:includedInDataCatalog [Expects: https://schema.org/DataCatalog]
  ///
  /// A data catalog which contains this dataset.
  ///
  /// Can be used on: https://schema.org/Dataset
  ///
  static const includedInDataCatalog = IriTerm.prevalidated(
    'https://schema.org/includedInDataCatalog',
  );

  /// IRI for schema:legislationChanges [Expects: https://schema.org/Legislation]
  ///
  /// Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href="/legislationConsolidates">legislationConsolidates</a> property.
  ///
  /// Can be used on: https://schema.org/Legislation
  ///
  static const legislationChanges = IriTerm.prevalidated(
    'https://schema.org/legislationChanges',
  );

  /// IRI for schema:member [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/ProgramMembership
  ///
  static const member = IriTerm.prevalidated('https://schema.org/member');

  /// IRI for schema:recipient [Expects: https://schema.org/Audience, https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person]
  ///
  /// A sub property of participant. The participant who is at the receiving end of the action.
  ///
  /// Can be used on: https://schema.org/AuthorizeAction, https://schema.org/CommunicateAction, https://schema.org/DonateAction, https://schema.org/GiveAction, https://schema.org/Message, https://schema.org/PayAction, https://schema.org/ReturnAction, https://schema.org/SendAction, https://schema.org/TipAction
  ///
  static const recipient = IriTerm.prevalidated('https://schema.org/recipient');

  /// IRI for schema:workExample [Expects: https://schema.org/CreativeWork]
  ///
  /// Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const workExample = IriTerm.prevalidated(
    'https://schema.org/workExample',
  );

  /// IRI for schema:description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// IRI for schema:gtin [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
  ///
  /// A correct {[gtin]} value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The {[gtin]} property generalizes the earlier {[gtin8]}, {[gtin12]}, {[gtin13]}, and {[gtin14]} properties.
  ///
  /// The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) expresses GTINs as URLs (URIs, IRIs, etc.).
  /// Digital Links should be populated into the {[hasGS1DigitalLink]} attribute.
  ///
  /// Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
  ///
  /// Can be used on: https://schema.org/Demand, https://schema.org/Offer, https://schema.org/Product
  ///
  static const gtin = IriTerm.prevalidated('https://schema.org/gtin');

  /// IRI for schema:hasRepresentation [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
  ///
  /// Can be used on: https://schema.org/BioChemEntity
  ///
  static const hasRepresentation = IriTerm.prevalidated(
    'https://schema.org/hasRepresentation',
  );

  /// IRI for schema:image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// IRI for schema:hasPart [Expects: https://schema.org/CreativeWork]
  ///
  /// Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const hasPart = IriTerm.prevalidated('https://schema.org/hasPart');

  /// IRI for schema:position [Expects: https://schema.org/Integer, https://schema.org/Text]
  ///
  /// The position of an item in a series or sequence of items.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/ListItem
  ///
  static const position = IriTerm.prevalidated('https://schema.org/position');

  /// IRI for schema:isPartOf [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
  ///
  /// Can be used on: https://schema.org/CreativeWork
  ///
  static const isPartOf = IriTerm.prevalidated('https://schema.org/isPartOf');

  /// IRI for schema:instrument [Expects: https://schema.org/Thing]
  ///
  /// The object that helped the agent perform the action. E.g. John wrote a book with *a pen*.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const instrument = IriTerm.prevalidated(
    'https://schema.org/instrument',
  );

  /// IRI for schema:object [Expects: https://schema.org/Thing]
  ///
  /// The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). E.g. John read *a book*.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const object = IriTerm.prevalidated('https://schema.org/object');

  /// IRI for schema:publishingPrinciples [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// The publishingPrinciples property indicates (typically via {[URL]}) a document describing the editorial principles of an {[Organization]} (or individual, e.g. a {[Person]} writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a {[CreativeWork]} (e.g. {[NewsArticle]}) the principles are those of the party primarily responsible for the creation of the {[CreativeWork]}.
  ///
  /// While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a {[funder]}) can be expressed using schema.org terminology.
  ///
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Organization, https://schema.org/Person
  ///
  static const publishingPrinciples = IriTerm.prevalidated(
    'https://schema.org/publishingPrinciples',
  );

  /// IRI for schema:location [Expects: https://schema.org/Place, https://schema.org/PostalAddress, https://schema.org/Text, https://schema.org/VirtualLocation]
  ///
  /// The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
  ///
  /// Can be used on: https://schema.org/Action, https://schema.org/Event, https://schema.org/InteractionCounter, https://schema.org/Organization
  ///
  static const location = IriTerm.prevalidated('https://schema.org/location');

  /// IRI for schema:participant [Expects: https://schema.org/Organization, https://schema.org/Person]
  ///
  /// Other co-agents that participated in the action indirectly. E.g. John wrote a book with *Steve*.
  ///
  /// Can be used on: https://schema.org/Action
  ///
  static const participant = IriTerm.prevalidated(
    'https://schema.org/participant',
  );

  /// IRI for schema:identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// IRI for schema:source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
