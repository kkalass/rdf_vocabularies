// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Authorization class from Acl vocabulary
///
/// An element of access control,
/// allowing agent to agents access of some kind to resources or classes of resources
///
/// Inherits from:
/// - Resource (http://www.w3.org/2000/01/rdf-schema#Resource)
///
/// This class provides access to all properties that can be used with Authorization.
/// [Class Reference](http://www.w3.org/ns/auth/acl#Authorization)
///
/// [Vocabulary Reference](http://www.w3.org/ns/auth/acl#)
class AclAuthorization {
  // Private constructor prevents instantiation
  const AclAuthorization._();

  /// IRI term for the Authorization class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#Authorization',
  );

  /// accessTo [Expects: http://www.w3.org/2006/gen/ont#InformationResource]
  ///
  /// The information resource to which access is being granted.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const accessTo = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#accessTo',
  );

  /// accessToClass [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// A class of information resources to which access is being granted.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const accessToClass = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#accessToClass',
  );

  /// agent [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// A person or social entity to being given the right
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const agent = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#agent',
  );

  /// agentClass [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// A class of persons or social entities to being given the right
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const agentClass = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#agentClass',
  );

  /// agentGroup [Expects: http://www.w3.org/2006/vcard/ns#Group]
  ///
  /// A group of persons or social entities to being given the right.
  /// The right is given to any entity which is a vcard:member of the group,
  /// as defined by the document received when the Group is dereferenced.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const agentGroup = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#agentGroup',
  );

  /// default_
  ///
  /// If a resource has no ACL file (it is 404),
  /// then access to the resource is given by the ACL of the immediately
  /// containing directory, or failing that (404) the ACL of the recursively next
  /// containing directory which has an ACL file.
  /// Within that ACL file,
  /// any Authorization which has that directory as its acl:default applies to the
  /// resource. (The highest directory must have an ACL file.)
  ///
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const default_ = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#default',
  );

  /// defaultForNew
  ///
  /// THIS IS OBSOLETE AS OF 2017-08-01.   See 'default'.
  /// Was: A directory for which this authorization is used for new files in the directory.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const defaultForNew = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#defaultForNew',
  );

  /// delegates [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// Delegates a person or another agent to act on behalf of the agent.
  /// For example, Alice delegates Bob to act on behalf of Alice for ACL purposes.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const delegates = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#delegates',
  );

  /// mode [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// A mode of access such as read or write.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  static const mode = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#mode',
  );

  /// origin [Expects: http://www.w3.org/ns/auth/acl#Origin]
  ///
  /// A web application, identified by its Origin, such as
  /// <https://scripts.example.com>, being given the right.
  /// When a user of the web application at a certain origin accesses the server,
  /// then the browser sets the Origin: header to warn that a possibly untrusted webapp
  /// is being used.
  /// Then, BOTH the user AND the origin must have the required access.
  ///
  /// Can be used on: http://www.w3.org/ns/auth/acl#Authorization
  ///
  /// [See also](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin)
  ///
  static const origin = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#origin',
  );

  /// owner [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// The person or other agent which owns this.
  /// For example, the owner of a file in a filesystem.
  /// There is a sense of "right to control".   Typically defaults to the agent who created
  /// something, but can be changed.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const owner = IriTerm.prevalidated(
    'http://www.w3.org/ns/auth/acl#owner',
  );

  /// type from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// The subject is an instance of a class.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfType = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
  );

  /// value from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfValue = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#value',
  );

  /// comment from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A description of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsComment = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#comment',
  );

  /// label from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A human-readable name for the subject.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsLabel = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#label',
  );

  /// seeAlso from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Further information about the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsSeeAlso = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#seeAlso',
  );

  /// isDefinedBy from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The definition of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsIsDefinedBy = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#isDefinedBy',
  );

  /// member from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// A member of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsMember = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#member',
  );

  /// annotatedProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the predicate of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedProperty',
  );

  /// annotatedSource from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the subject of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedSource = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedSource',
  );

  /// annotatedTarget from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the object of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedTarget = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedTarget',
  );

  /// deprecated from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that indicates that a given entity has been deprecated.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlDeprecated = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#deprecated',
  );

  /// members from owl vocabulary [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#List]
  ///
  /// The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlMembers = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#members',
  );

  /// versionInfo from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that provides version information for an ontology or another OWL construct.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlVersionInfo = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#versionInfo',
  );

  /// abstract_ from bibo vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A summary of the resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const biboAbstract_ = IriTerm.prevalidated(
    'http://purl.org/ontology/bibo/abstract',
  );
}
