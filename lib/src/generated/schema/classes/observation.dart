// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Observation class from Schema vocabulary
///
/// Instances of the class {[Observation]} are used to specify observations about an entity at a particular time. The principal properties of an {[Observation]} are {[observationAbout]}, {[measuredProperty]}, {[statType]}, {[value] and {[observationDate]}  and {[measuredProperty]}. Some but not all Observations represent a {[QuantitativeValue]}. Quantitative observations can be about a {[StatisticalVariable]}, which is an abstract specification about which we can make observations that are grounded at a particular location and time.
///
/// Observations can also encode a subset of simple RDF-like statements (its observationAbout, a StatisticalVariable, defining the measuredPoperty; its observationAbout property indicating the entity the statement is about, and {[value]} )
///
/// In the context of a quantitative knowledge graph, typical properties could include {[measuredProperty]}, {[observationAbout]}, {[observationDate]}, {[value]}, {[unitCode]}, {[unitText]}, {[measurementMethod]}.
///
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - QuantitativeValue (https://schema.org/QuantitativeValue)
/// - StructuredValue (https://schema.org/StructuredValue)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with Observation.
/// [Class Reference](https://schema.org/Observation)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaObservation {
  // Private constructor prevents instantiation
  const SchemaObservation._();

  /// IRI term for the Observation class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/Observation',
  );

  /// additionalProperty [Expects: https://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Place, https://schema.org/Product, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'https://schema.org/additionalProperty',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// marginOfError [Expects: https://schema.org/QuantitativeValue]
  ///
  /// A {[marginOfError]} for an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const marginOfError = IriTerm.prevalidated(
    'https://schema.org/marginOfError',
  );

  /// maxValue [Expects: https://schema.org/Number]
  ///
  /// The upper value of some characteristic or property.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/PropertyValueSpecification, https://schema.org/QuantitativeValue
  ///
  static const maxValue = IriTerm.prevalidated('https://schema.org/maxValue');

  /// measuredProperty [Expects: https://schema.org/Property]
  ///
  /// The measuredProperty of an {[Observation]}, typically via its {[StatisticalVariable]}. There are various kinds of applicable {[Property]}: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measuredProperty = IriTerm.prevalidated(
    'https://schema.org/measuredProperty',
  );

  /// measurementDenominator [Expects: https://schema.org/StatisticalVariable]
  ///
  /// Identifies the denominator variable when an observation represents a ratio or percentage.
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measurementDenominator = IriTerm.prevalidated(
    'https://schema.org/measurementDenominator',
  );

  /// measurementMethod [Expects: https://schema.org/DefinedTerm, https://schema.org/MeasurementMethodEnum, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A subproperty of {[measurementTechnique]} that can be used for specifying specific methods, in particular via {[MeasurementMethodEnum]}.
  ///
  /// Can be used on: https://schema.org/DataCatalog, https://schema.org/DataDownload, https://schema.org/Dataset, https://schema.org/Observation, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable
  ///
  static const measurementMethod = IriTerm.prevalidated(
    'https://schema.org/measurementMethod',
  );

  /// measurementQualifier [Expects: https://schema.org/Enumeration]
  ///
  /// Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.
  ///
  /// Can be used on: https://schema.org/Observation, https://schema.org/StatisticalVariable
  ///
  static const measurementQualifier = IriTerm.prevalidated(
    'https://schema.org/measurementQualifier',
  );

  /// minValue [Expects: https://schema.org/Number]
  ///
  /// The lower value of some characteristic or property.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/PropertyValueSpecification, https://schema.org/QuantitativeValue
  ///
  static const minValue = IriTerm.prevalidated('https://schema.org/minValue');

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// observationAbout [Expects: https://schema.org/Place, https://schema.org/Thing]
  ///
  /// The {[observationAbout]} property identifies an entity, often a {[Place]}, associated with an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationAbout = IriTerm.prevalidated(
    'https://schema.org/observationAbout',
  );

  /// observationDate [Expects: https://schema.org/DateTime]
  ///
  /// The observationDate of an {[Observation]}.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationDate = IriTerm.prevalidated(
    'https://schema.org/observationDate',
  );

  /// observationPeriod [Expects: https://schema.org/Text]
  ///
  /// The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.
  ///
  /// Can be used on: https://schema.org/Observation
  ///
  static const observationPeriod = IriTerm.prevalidated(
    'https://schema.org/observationPeriod',
  );

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// unitCode [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitCode = IriTerm.prevalidated('https://schema.org/unitCode');

  /// unitText [Expects: https://schema.org/Text]
  ///
  /// A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
  /// <a href='unitCode'>unitCode</a>.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QuantitativeValue, https://schema.org/TypeAndQuantityNode, https://schema.org/UnitPriceSpecification
  ///
  static const unitText = IriTerm.prevalidated('https://schema.org/unitText');

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// value [Expects: https://schema.org/Boolean, https://schema.org/Number, https://schema.org/StructuredValue, https://schema.org/Text]
  ///
  /// The value of a {[QuantitativeValue]} (including {[Observation]}) or property value node.\n\n* For {[QuantitativeValue]} and {[MonetaryAmount]}, the recommended type for values is 'Number'.\n* For {[PropertyValue]}, it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
  ///
  /// Can be used on: https://schema.org/MonetaryAmount, https://schema.org/PropertyValue, https://schema.org/QuantitativeValue
  ///
  static const value = IriTerm.prevalidated('https://schema.org/value');

  /// valueReference [Expects: https://schema.org/DefinedTerm, https://schema.org/Enumeration, https://schema.org/MeasurementTypeEnumeration, https://schema.org/PropertyValue, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue, https://schema.org/StructuredValue, https://schema.org/Text]
  ///
  /// A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.
  ///
  /// Can be used on: https://schema.org/PropertyValue, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const valueReference = IriTerm.prevalidated(
    'https://schema.org/valueReference',
  );

  /// variableMeasured [Expects: https://schema.org/Property, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable, https://schema.org/Text]
  ///
  /// The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a {[StatisticalVariable]}.
  ///
  /// Can be used on: https://schema.org/Dataset, https://schema.org/Observation
  ///
  static const variableMeasured = IriTerm.prevalidated(
    'https://schema.org/variableMeasured',
  );

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// measurementTechnique [Expects: https://schema.org/DefinedTerm, https://schema.org/MeasurementMethodEnum, https://schema.org/Text, https://schema.org/URL]
  ///
  /// A technique, method or technology used in an {[Observation]}, {[StatisticalVariable]} or {[Dataset]} (or {[DataDownload]}, {[DataCatalog]}), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using {[variableMeasured]}; for {[Observation]}, a {[StatisticalVariable]}). Often but not necessarily each {[variableMeasured]} will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and "knowledge graphs". In that case the subproperty of {[variableMeasured]} called {[measuredProperty]} is applicable.
  ///
  /// The {[measurementTechnique]} property helps when extra clarification is needed about how a {[measuredProperty]} was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery.
  ///
  /// For example, if {[variableMeasured]} is: molecule concentration, {[measurementTechnique]} could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence". If the {[variableMeasured]} is "depression rating", the {[measurementTechnique]} could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory".
  ///
  /// If there are several {[variableMeasured]} properties recorded for some given data object, use a {[PropertyValue]} for each {[variableMeasured]} and attach the corresponding {[measurementTechnique]}. The value can also be from an enumeration, organized as a {[MeasurementMetholdEnumeration]}.
  ///
  /// Can be used on: https://schema.org/DataCatalog, https://schema.org/DataDownload, https://schema.org/Dataset, https://schema.org/Observation, https://schema.org/PropertyValue, https://schema.org/StatisticalVariable
  ///
  static const measurementTechnique = IriTerm.prevalidated(
    'https://schema.org/measurementTechnique',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
