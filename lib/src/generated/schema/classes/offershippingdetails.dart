// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// OfferShippingDetails class from Schema vocabulary
///
/// OfferShippingDetails represents information about shipping destinations.
///
/// Multiple of these entities can be used to represent different shipping rates for different destinations:
///
/// One entity for Alaska/Hawaii. A different one for continental US. A different one for all France.
///
/// Multiple of these entities can be used to represent different shipping costs and delivery times.
///
/// Two entities that are identical but differ in rate and time:
///
/// E.g. Cheaper and slower: $5 in 5-7 days
/// or Fast and expensive: $15 in 1-2 days.
///
/// Inherits from:
/// - Intangible (https://schema.org/Intangible)
/// - StructuredValue (https://schema.org/StructuredValue)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with OfferShippingDetails.
/// [Class Reference](https://schema.org/OfferShippingDetails)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaOfferShippingDetails {
  // Private constructor prevents instantiation
  const SchemaOfferShippingDetails._();

  /// IRI term for the OfferShippingDetails class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'https://schema.org/OfferShippingDetails',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// deliveryTime [Expects: https://schema.org/ShippingDeliveryTime]
  ///
  /// The total delay between the receipt of the order and the goods reaching the final customer.
  ///
  /// Can be used on: https://schema.org/DeliveryTimeSettings, https://schema.org/OfferShippingDetails
  ///
  static const deliveryTime = IriTerm.prevalidated(
    'https://schema.org/deliveryTime',
  );

  /// depth [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The depth of the item.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const depth = IriTerm.prevalidated('https://schema.org/depth');

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// doesNotShip [Expects: https://schema.org/Boolean]
  ///
  /// Indicates when shipping to a particular {[shippingDestination]} is not available.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const doesNotShip = IriTerm.prevalidated(
    'https://schema.org/doesNotShip',
  );

  /// hasShippingService [Expects: https://schema.org/ShippingService]
  ///
  /// Specification of a shipping service offered by the organization.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Organization
  ///
  static const hasShippingService = IriTerm.prevalidated(
    'https://schema.org/hasShippingService',
  );

  /// height [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The height of the item.
  ///
  /// Can be used on: https://schema.org/MediaObject, https://schema.org/OfferShippingDetails, https://schema.org/Person, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const height = IriTerm.prevalidated('https://schema.org/height');

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// shippingDestination [Expects: https://schema.org/DefinedRegion]
  ///
  /// indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.
  ///
  /// Can be used on: https://schema.org/DeliveryTimeSettings, https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const shippingDestination = IriTerm.prevalidated(
    'https://schema.org/shippingDestination',
  );

  /// shippingOrigin [Expects: https://schema.org/DefinedRegion]
  ///
  /// Indicates the origin of a shipment, i.e. where it should be coming from.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions
  ///
  static const shippingOrigin = IriTerm.prevalidated(
    'https://schema.org/shippingOrigin',
  );

  /// shippingRate [Expects: https://schema.org/MonetaryAmount, https://schema.org/ShippingRateSettings]
  ///
  /// The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the {[MonetaryAmount]}) are most appropriate.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/ShippingConditions, https://schema.org/ShippingRateSettings
  ///
  static const shippingRate = IriTerm.prevalidated(
    'https://schema.org/shippingRate',
  );

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// validForMemberTier [Expects: https://schema.org/MemberProgramTier]
  ///
  /// The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/OfferShippingDetails, https://schema.org/PriceSpecification, https://schema.org/ShippingService
  ///
  static const validForMemberTier = IriTerm.prevalidated(
    'https://schema.org/validForMemberTier',
  );

  /// weight [Expects: https://schema.org/Mass, https://schema.org/QuantitativeValue]
  ///
  /// The weight of the product or person.
  ///
  /// Can be used on: https://schema.org/OfferShippingDetails, https://schema.org/Person, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const weight = IriTerm.prevalidated('https://schema.org/weight');

  /// width [Expects: https://schema.org/Distance, https://schema.org/QuantitativeValue]
  ///
  /// The width of the item.
  ///
  /// Can be used on: https://schema.org/MediaObject, https://schema.org/OfferShippingDetails, https://schema.org/Product, https://schema.org/ShippingConditions, https://schema.org/VisualArtwork
  ///
  static const width = IriTerm.prevalidated('https://schema.org/width');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
