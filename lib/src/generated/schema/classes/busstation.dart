// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// BusStation class from Schema vocabulary
///
/// A bus station.
///
/// Inherits from:
/// - CivicStructure (https://schema.org/CivicStructure)
/// - Place (https://schema.org/Place)
/// - Thing (https://schema.org/Thing)
///
/// This class provides access to all properties that can be used with BusStation.
/// [Class Reference](https://schema.org/BusStation)
///
/// [Vocabulary Reference](https://schema.org/)
class SchemaBusStation {
  // Private constructor prevents instantiation
  const SchemaBusStation._();

  /// IRI term for the BusStation class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated('https://schema.org/BusStation');

  /// additionalProperty [Expects: https://schema.org/PropertyValue]
  ///
  /// A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
  ///
  ///
  /// Can be used on: https://schema.org/MerchantReturnPolicy, https://schema.org/Offer, https://schema.org/Place, https://schema.org/Product, https://schema.org/QualitativeValue, https://schema.org/QuantitativeValue
  ///
  static const additionalProperty = IriTerm.prevalidated(
    'https://schema.org/additionalProperty',
  );

  /// additionalType [Expects: https://schema.org/Text, https://schema.org/URL]
  ///
  /// An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
  /// use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="https://schema.org/docs/styleguide.html">style guide</a>.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const additionalType = IriTerm.prevalidated(
    'https://schema.org/additionalType',
  );

  /// address [Expects: https://schema.org/PostalAddress, https://schema.org/Text]
  ///
  /// Physical address of the item.
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/GeoShape, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const address = IriTerm.prevalidated('https://schema.org/address');

  /// aggregateRating [Expects: https://schema.org/AggregateRating]
  ///
  /// The overall rating, based on a collection of reviews or ratings, of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const aggregateRating = IriTerm.prevalidated(
    'https://schema.org/aggregateRating',
  );

  /// amenityFeature [Expects: https://schema.org/LocationFeatureSpecification]
  ///
  /// An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/FloorPlan, https://schema.org/LodgingBusiness, https://schema.org/Place
  ///
  static const amenityFeature = IriTerm.prevalidated(
    'https://schema.org/amenityFeature',
  );

  /// branchCode [Expects: https://schema.org/Text]
  ///
  /// A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
  ///
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const branchCode = IriTerm.prevalidated(
    'https://schema.org/branchCode',
  );

  /// containedIn [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and one that contains it.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containedIn = IriTerm.prevalidated(
    'https://schema.org/containedIn',
  );

  /// disambiguatingDescription [Expects: https://schema.org/Text]
  ///
  /// A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const disambiguatingDescription = IriTerm.prevalidated(
    'https://schema.org/disambiguatingDescription',
  );

  /// events [Expects: https://schema.org/Event]
  ///
  /// Upcoming or past events associated with this place or organization.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Place
  ///
  static const events = IriTerm.prevalidated('https://schema.org/events');

  /// faxNumber [Expects: https://schema.org/Text]
  ///
  /// The fax number.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const faxNumber = IriTerm.prevalidated('https://schema.org/faxNumber');

  /// geo [Expects: https://schema.org/GeoCoordinates, https://schema.org/GeoShape]
  ///
  /// The geo coordinates of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const geo = IriTerm.prevalidated('https://schema.org/geo');

  /// geoContains [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoContains = IriTerm.prevalidated(
    'https://schema.org/geoContains',
  );

  /// geoCoveredBy [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCoveredBy = IriTerm.prevalidated(
    'https://schema.org/geoCoveredBy',
  );

  /// geoCovers [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCovers = IriTerm.prevalidated('https://schema.org/geoCovers');

  /// geoCrosses [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoCrosses = IriTerm.prevalidated(
    'https://schema.org/geoCrosses',
  );

  /// geoDisjoint [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: "they have no point in common. They form a set of disconnected geometries." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoDisjoint = IriTerm.prevalidated(
    'https://schema.org/geoDisjoint',
  );

  /// geoEquals [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoEquals = IriTerm.prevalidated('https://schema.org/geoEquals');

  /// geoIntersects [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoIntersects = IriTerm.prevalidated(
    'https://schema.org/geoIntersects',
  );

  /// geoOverlaps [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoOverlaps = IriTerm.prevalidated(
    'https://schema.org/geoOverlaps',
  );

  /// geoTouches [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents spatial relations in which two geometries (or the places they represent) touch: "they have at least one boundary point in common, but no interior points." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoTouches = IriTerm.prevalidated(
    'https://schema.org/geoTouches',
  );

  /// geoWithin [Expects: https://schema.org/GeospatialGeometry, https://schema.org/Place]
  ///
  /// Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
  ///
  /// Can be used on: https://schema.org/GeospatialGeometry, https://schema.org/Place
  ///
  static const geoWithin = IriTerm.prevalidated('https://schema.org/geoWithin');

  /// globalLocationNumber [Expects: https://schema.org/Text]
  ///
  /// The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const globalLocationNumber = IriTerm.prevalidated(
    'https://schema.org/globalLocationNumber',
  );

  /// hasCertification [Expects: https://schema.org/Certification]
  ///
  /// Certification information about a product, organization, service, place, or person.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const hasCertification = IriTerm.prevalidated(
    'https://schema.org/hasCertification',
  );

  /// hasDriveThroughService [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether some facility (e.g. {[FoodEstablishment]}, {[CovidTestingFacility]}) offers a service that can be used by driving through in a car. In the case of {[CovidTestingFacility]} such facilities could potentially help with social distancing from other potentially-infected users.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const hasDriveThroughService = IriTerm.prevalidated(
    'https://schema.org/hasDriveThroughService',
  );

  /// hasGS1DigitalLink [Expects: https://schema.org/URL]
  ///
  /// The <a href="https://www.gs1.org/standards/gs1-digital-link">GS1 digital link</a> associated with the object. This URL should conform to the particular requirements of digital links. The link should only contain the Application Identifiers (AIs) that are relevant for the entity being annotated, for instance a {[Product]} or an {[Organization]}, and for the correct granularity. In particular, for products:<ul><li>A Digital Link that contains a serial number (AI <code>21</code>) should only be present on instances of {[IndividualProduct]}</li><li>A Digital Link that contains a lot number (AI <code>10</code>) should be annotated as {[SomeProduct]} if only products from that lot are sold, or {[IndividualProduct]} if there is only a specific product.</li><li>A Digital Link that contains a global model number (AI <code>8013</code>)  should be attached to a {[Product]} or a {[ProductModel]}.</li></ul> Other item types should be adapted similarly.
  ///
  /// Can be used on: https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const hasGS1DigitalLink = IriTerm.prevalidated(
    'https://schema.org/hasGS1DigitalLink',
  );

  /// interactionCount
  ///
  /// This property is deprecated, alongside the UserInteraction types on which it depended.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const interactionCount = IriTerm.prevalidated(
    'https://schema.org/interactionCount',
  );

  /// isicV4 [Expects: https://schema.org/Text]
  ///
  /// The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
  ///
  /// Can be used on: https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const isicV4 = IriTerm.prevalidated('https://schema.org/isicV4');

  /// keywords [Expects: https://schema.org/DefinedTerm, https://schema.org/Text, https://schema.org/URL]
  ///
  /// Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const keywords = IriTerm.prevalidated('https://schema.org/keywords');

  /// latitude [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/Place
  ///
  static const latitude = IriTerm.prevalidated('https://schema.org/latitude');

  /// logo [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An associated logo.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/Certification, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const logo = IriTerm.prevalidated('https://schema.org/logo');

  /// longitude [Expects: https://schema.org/Number, https://schema.org/Text]
  ///
  /// The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
  ///
  /// Can be used on: https://schema.org/GeoCoordinates, https://schema.org/Place
  ///
  static const longitude = IriTerm.prevalidated('https://schema.org/longitude');

  /// map [Expects: https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const map = IriTerm.prevalidated('https://schema.org/map');

  /// maps [Expects: https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const maps = IriTerm.prevalidated('https://schema.org/maps');

  /// maximumAttendeeCapacity [Expects: https://schema.org/Integer]
  ///
  /// The total number of individuals that may attend an event or venue.
  ///
  /// Can be used on: https://schema.org/Event, https://schema.org/Place
  ///
  static const maximumAttendeeCapacity = IriTerm.prevalidated(
    'https://schema.org/maximumAttendeeCapacity',
  );

  /// name [Expects: https://schema.org/Text]
  ///
  /// The name of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const name = IriTerm.prevalidated('https://schema.org/name');

  /// openingHours [Expects: https://schema.org/Text]
  ///
  /// The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\n\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \n* Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
  ///
  /// Can be used on: https://schema.org/CivicStructure, https://schema.org/LocalBusiness
  ///
  static const openingHours = IriTerm.prevalidated(
    'https://schema.org/openingHours',
  );

  /// openingHoursSpecification [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// The opening hours of a certain place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const openingHoursSpecification = IriTerm.prevalidated(
    'https://schema.org/openingHoursSpecification',
  );

  /// photos [Expects: https://schema.org/ImageObject, https://schema.org/Photograph]
  ///
  /// Photographs of this place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const photos = IriTerm.prevalidated('https://schema.org/photos');

  /// potentialAction [Expects: https://schema.org/Action]
  ///
  /// Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const potentialAction = IriTerm.prevalidated(
    'https://schema.org/potentialAction',
  );

  /// publicAccess [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the {[Place]} is open to public visitors.  If this property is omitted there is no assumed default boolean value.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const publicAccess = IriTerm.prevalidated(
    'https://schema.org/publicAccess',
  );

  /// reviews [Expects: https://schema.org/Review]
  ///
  /// Review of the item.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product
  ///
  static const reviews = IriTerm.prevalidated('https://schema.org/reviews');

  /// sameAs [Expects: https://schema.org/URL]
  ///
  /// URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const sameAs = IriTerm.prevalidated('https://schema.org/sameAs');

  /// slogan [Expects: https://schema.org/Text]
  ///
  /// A slogan or motto associated with the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const slogan = IriTerm.prevalidated('https://schema.org/slogan');

  /// smokingAllowed [Expects: https://schema.org/Boolean]
  ///
  /// Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const smokingAllowed = IriTerm.prevalidated(
    'https://schema.org/smokingAllowed',
  );

  /// specialOpeningHoursSpecification [Expects: https://schema.org/OpeningHoursSpecification]
  ///
  /// The special opening hours of a certain place.\n\nUse this to explicitly override general opening hours brought in scope by {[openingHoursSpecification]} or {[openingHours]}.
  ///
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const specialOpeningHoursSpecification = IriTerm.prevalidated(
    'https://schema.org/specialOpeningHoursSpecification',
  );

  /// telephone [Expects: https://schema.org/Text]
  ///
  /// The telephone number.
  ///
  /// Can be used on: https://schema.org/ContactPoint, https://schema.org/Organization, https://schema.org/Person, https://schema.org/Place
  ///
  static const telephone = IriTerm.prevalidated('https://schema.org/telephone');

  /// tourBookingPage [Expects: https://schema.org/URL]
  ///
  /// A page providing information on how to book a tour of some {[Place]}, such as an {[Accommodation]} or {[ApartmentComplex]} in a real estate setting, as well as other kinds of tours as appropriate.
  ///
  /// Can be used on: https://schema.org/Accommodation, https://schema.org/ApartmentComplex, https://schema.org/Place
  ///
  static const tourBookingPage = IriTerm.prevalidated(
    'https://schema.org/tourBookingPage',
  );

  /// url [Expects: https://schema.org/URL]
  ///
  /// URL of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const url = IriTerm.prevalidated('https://schema.org/url');

  /// alternateName [Expects: https://schema.org/Text]
  ///
  /// An alias for the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const alternateName = IriTerm.prevalidated(
    'https://schema.org/alternateName',
  );

  /// containsPlace [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and another that it contains.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containsPlace = IriTerm.prevalidated(
    'https://schema.org/containsPlace',
  );

  /// event [Expects: https://schema.org/Event]
  ///
  /// Upcoming or past event associated with this place, organization, or action.
  ///
  /// Can be used on: https://schema.org/InformAction, https://schema.org/InviteAction, https://schema.org/JoinAction, https://schema.org/LeaveAction, https://schema.org/Organization, https://schema.org/Place, https://schema.org/PlayAction
  ///
  static const event = IriTerm.prevalidated('https://schema.org/event');

  /// isAccessibleForFree [Expects: https://schema.org/Boolean]
  ///
  /// A flag to signal that the item, event, or place is accessible for free.
  ///
  /// Can be used on: https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Place
  ///
  static const isAccessibleForFree = IriTerm.prevalidated(
    'https://schema.org/isAccessibleForFree',
  );

  /// mainEntityOfPage [Expects: https://schema.org/CreativeWork, https://schema.org/URL]
  ///
  /// Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const mainEntityOfPage = IriTerm.prevalidated(
    'https://schema.org/mainEntityOfPage',
  );

  /// photo [Expects: https://schema.org/ImageObject, https://schema.org/Photograph]
  ///
  /// A photograph of this place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const photo = IriTerm.prevalidated('https://schema.org/photo');

  /// review [Expects: https://schema.org/Review]
  ///
  /// A review of the item.
  ///
  /// Can be used on: https://schema.org/Brand, https://schema.org/CreativeWork, https://schema.org/Event, https://schema.org/Offer, https://schema.org/Organization, https://schema.org/Place, https://schema.org/Product, https://schema.org/Service
  ///
  static const review = IriTerm.prevalidated('https://schema.org/review');

  /// subjectOf [Expects: https://schema.org/CreativeWork, https://schema.org/Event]
  ///
  /// A CreativeWork or Event about this Thing.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const subjectOf = IriTerm.prevalidated('https://schema.org/subjectOf');

  /// containedInPlace [Expects: https://schema.org/Place]
  ///
  /// The basic containment relation between a place and one that contains it.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const containedInPlace = IriTerm.prevalidated(
    'https://schema.org/containedInPlace',
  );

  /// hasMap [Expects: https://schema.org/Map, https://schema.org/URL]
  ///
  /// A URL to a map of the place.
  ///
  /// Can be used on: https://schema.org/Place
  ///
  static const hasMap = IriTerm.prevalidated('https://schema.org/hasMap');

  /// description [Expects: https://schema.org/Text, https://schema.org/TextObject]
  ///
  /// A description of the item.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const description = IriTerm.prevalidated(
    'https://schema.org/description',
  );

  /// image [Expects: https://schema.org/ImageObject, https://schema.org/URL]
  ///
  /// An image of the item. This can be a {[URL]} or a fully described {[ImageObject]}.
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const image = IriTerm.prevalidated('https://schema.org/image');

  /// identifier [Expects: https://schema.org/PropertyValue, https://schema.org/Text, https://schema.org/URL]
  ///
  /// The identifier property represents any kind of identifier for any kind of {[Thing]}, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
  ///
  ///
  /// Can be used on: https://schema.org/Thing
  ///
  static const identifier = IriTerm.prevalidated(
    'https://schema.org/identifier',
  );

  /// source
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const source = IriTerm.prevalidated('https://schema.org/source');
}
