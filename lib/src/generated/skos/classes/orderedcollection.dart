// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// OrderedCollection class from Skos vocabulary
///
///
///
/// Inherits from:
/// - Collection (http://www.w3.org/2004/02/skos/core#Collection)
/// - Resource (http://www.w3.org/2000/01/rdf-schema#Resource)
/// - Thing (http://www.w3.org/2002/07/owl#Thing)
///
/// This class provides access to all properties that can be used with OrderedCollection.
/// [Class Reference](http://www.w3.org/2004/02/skos/core#OrderedCollection)
///
/// [Vocabulary Reference](http://www.w3.org/2004/02/skos/core#)
class SkosOrderedCollection {
  // Private constructor prevents instantiation
  const SkosOrderedCollection._();

  /// IRI term for the OrderedCollection class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#OrderedCollection',
  );

  /// inScheme [Expects: http://www.w3.org/2004/02/skos/core#ConceptScheme]
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const inScheme = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#inScheme',
  );

  /// prefLabel
  ///
  /// A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const prefLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#prefLabel',
  );

  /// altLabel
  ///
  /// The range of skos:altLabel is the class of RDF plain literals.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const altLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#altLabel',
  );

  /// hiddenLabel
  ///
  /// The range of skos:hiddenLabel is the class of RDF plain literals.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const hiddenLabel = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#hiddenLabel',
  );

  /// notation
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const notation = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#notation',
  );

  /// note
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const note = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#note',
  );

  /// changeNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const changeNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#changeNote',
  );

  /// definition
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const definition = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#definition',
  );

  /// editorialNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const editorialNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#editorialNote',
  );

  /// example
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const example = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#example',
  );

  /// historyNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const historyNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#historyNote',
  );

  /// scopeNote
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const scopeNote = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#scopeNote',
  );

  /// broader
  ///
  /// Broader concepts are typically rendered as parents in a concept hierarchy (tree).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broader = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broader',
  );

  /// narrower
  ///
  /// Narrower concepts are typically rendered as children in a concept hierarchy (tree).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrower = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrower',
  );

  /// related
  ///
  /// skos:related is disjoint with skos:broaderTransitive
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const related = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#related',
  );

  /// broaderTransitive
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broaderTransitive = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broaderTransitive',
  );

  /// narrowerTransitive
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrowerTransitive = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrowerTransitive',
  );

  /// member
  ///
  ///
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#Collection
  ///
  static const member = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#member',
  );

  /// memberList [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#List]
  ///
  /// For any resource, every item in the list given as the value of the skos:memberList property is also a value of the skos:member property.
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#OrderedCollection
  ///
  static const memberList = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#memberList',
  );

  /// mappingRelation
  ///
  /// These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const mappingRelation = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#mappingRelation',
  );

  /// broadMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const broadMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#broadMatch',
  );

  /// narrowMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const narrowMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#narrowMatch',
  );

  /// relatedMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const relatedMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#relatedMatch',
  );

  /// exactMatch
  ///
  /// skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const exactMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#exactMatch',
  );

  /// closeMatch
  ///
  ///
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const closeMatch = IriTerm.prevalidated(
    'http://www.w3.org/2004/02/skos/core#closeMatch',
  );

  /// type from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Class]
  ///
  /// The subject is an instance of a class.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfType = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
  );

  /// value from rdf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfValue = IriTerm.prevalidated(
    'http://www.w3.org/1999/02/22-rdf-syntax-ns#value',
  );

  /// comment from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A description of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsComment = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#comment',
  );

  /// label from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A human-readable name for the subject.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsLabel = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#label',
  );

  /// seeAlso from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// Further information about the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsSeeAlso = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#seeAlso',
  );

  /// isDefinedBy from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The definition of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsIsDefinedBy = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#isDefinedBy',
  );

  /// member from rdfs vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// A member of the subject resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const rdfsMember = IriTerm.prevalidated(
    'http://www.w3.org/2000/01/rdf-schema#member',
  );

  /// annotatedProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the predicate of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedProperty',
  );

  /// annotatedSource from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the subject of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedSource = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedSource',
  );

  /// annotatedTarget from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The property that determines the object of an annotated axiom or annotated annotation.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlAnnotatedTarget = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#annotatedTarget',
  );

  /// bottomDataProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The data property that does not relate any individual to any data value.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlBottomDataProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#bottomDataProperty',
  );

  /// bottomObjectProperty from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The object property that does not relate any two individuals.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlBottomObjectProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#bottomObjectProperty',
  );

  /// deprecated from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that indicates that a given entity has been deprecated.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlDeprecated = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#deprecated',
  );

  /// differentFrom from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The property that determines that two given individuals are different.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlDifferentFrom = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#differentFrom',
  );

  /// members from owl vocabulary [Expects: http://www.w3.org/1999/02/22-rdf-syntax-ns#List]
  ///
  /// The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlMembers = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#members',
  );

  /// sameAs from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The property that determines that two given individuals are equal.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlSameAs = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#sameAs',
  );

  /// topDataProperty from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The data property that relates every individual to every data value.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlTopDataProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#topDataProperty',
  );

  /// topObjectProperty from owl vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The object property that relates every two individuals.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const owlTopObjectProperty = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#topObjectProperty',
  );

  /// versionInfo from owl vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Resource]
  ///
  /// The annotation property that provides version information for an ontology or another OWL construct.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const owlVersionInfo = IriTerm.prevalidated(
    'http://www.w3.org/2002/07/owl#versionInfo',
  );

  /// name from foaf vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A name for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafName = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/name',
  );

  /// homepage from foaf vocabulary [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A homepage for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafHomepage = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/homepage',
  );

  /// maker from foaf vocabulary [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// An agent that
  /// made this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafMaker = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/maker',
  );

  /// depiction from foaf vocabulary [Expects: http://xmlns.com/foaf/0.1/Image]
  ///
  /// A depiction of some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafDepiction = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/depiction',
  );

  /// fundedBy from foaf vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// An organization funding a project or person.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafFundedBy = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/fundedBy',
  );

  /// logo from foaf vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A logo representing some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafLogo = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/logo',
  );

  /// page from foaf vocabulary [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A page or document about this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafPage = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/page',
  );

  /// theme from foaf vocabulary [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A theme.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const foafTheme = IriTerm.prevalidated(
    'http://xmlns.com/foaf/0.1/theme',
  );

  /// abstract_ from bibo vocabulary [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A summary of the resource.
  ///
  /// Can be used on: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const biboAbstract_ = IriTerm.prevalidated(
    'http://purl.org/ontology/bibo/abstract',
  );
}
